{"version":3,"sources":["serviceWorker.ts","types/User.ts","state/Account.ts","components/Navigation.tsx","components/account/PageLogin.tsx","components/account/PageLogout.tsx","components/account/PageProfile.tsx","state/Project.ts","state/Category.ts","state/TableGroup.ts","components/expo/PageProjects.tsx","types/Ballot.ts","types/Project.ts","state/Request.ts","state/Ballot.ts","components/judge/PageJudging.tsx","components/admin/AdminNavigation.tsx","state/User.ts","components/admin/PageAdminUsersModal.tsx","components/admin/PageAdminUserCard.tsx","state/Company.ts","components/admin/PageAdminUsers.tsx","components/admin/PageAdminProjectsUploadModal.tsx","components/admin/PageAdminProjectsManageTableGroupsModalGroupRow.tsx","components/admin/PageAdminProjectsManageTableGroupsModal.tsx","components/admin/PageAdminProjectsEpicenter.tsx","components/admin/PageAdminProjectsAddProjectModal.tsx","components/admin/PageAdminProjectsEpicenterProjectDot.tsx","components/admin/PageAdminProjectsEpicenterEmptyDot.tsx","components/admin/PageAdminProjects.tsx","types/Category.ts","components/admin/PageAdminCategoriesModalCriteria.tsx","components/admin/PageAdminCategoriesModal.tsx","components/admin/PageAdminCategoriesCard.tsx","components/admin/PageAdminCategories.tsx","components/admin/PageAdminDashboard.tsx","components/admin/PageAdmin.tsx","components/account/PageRegister.tsx","components/PageHome.tsx","components/Footer.tsx","App.tsx","state/Store.ts","state/Socket.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","UserRole","EMPTY_USER","id","name","email","company","role","Pending","isJudging","tags","clientUserToServerUser","user","Object","objectSpread","getRoleEnum","serverDataToClientUser","data","roleStringToEnum","Error","Owner","Admin","Judge","None","getRoleString","UPDATE_USER","LOGIN_USER","LOGOUT_USER","noAccountUser","loginUser","userToLogin","type","withRouter","props","actualPage","pageString","pathname","split","concat","_React$useState","React","useState","_React$useState2","slicedToArray","curPage","changeCurPage","useEffect","navTo","route","history","push","react_default","a","createElement","Navbar","collapseOnSelect","bg","variant","expand","react_router_dom","to","style","textDecoration","onClick","Brand","Toggle","aria-controls","Collapse","leftNav","Nav","className","map","navItem","Link","key","eventKey","active","onSelect","genLeftNav","account","PageLogin","connect","state","dispatch","updateSocket","update","_React$useReducer","useReducer","action","error","requesting","inputs","message","success","password","undefined","_React$useReducer2","handleLogin","_ref","asyncToGenerator","regenerator_default","mark","_callee","event","loginResponse","payload","wrap","_context","prev","next","preventDefault","length","abrupt","Axios","post","qs","toLowerCase","headers","Content-Type","sent","status","stop","_x","apply","this","arguments","react_router","margin","maxWidth","textAlign","paddingBottom","Form","Group","Control","disabled","onChange","target","value","placeholder","Button","block","Spinner","animation","size","Alert","sleep","ms","Promise","resolve","setTimeout","PageLogout","logoutUser","changeSuccess","all","get","logout","PageProfile","UPDATE_PROJECT","DELETE_PROJECT","FILL_PROJECTS","APPEND_FILL_PROJECTS","updateProject","project","fillProjects","projects","fetchProjects","result","t0","console","log","UPDATE_CATEGORY","DELETE_CATEGORY","FILL_CATEGORIES","UPDATE_CRITERIA","DELETE_CRITERIA","FILL_CRITERIA","updateCategory","categories","fillCategories","fetchCategories","UPDATE_TABLE_GROUP","DELETE_TABLE_GROUP","FILL_TABLE_GROUPS","fillTableGroups","tableGroups","fetchTableGroups","BallotStatus","PageProjects","modalOpen","filterBy","categoryID","searchText","search","initialFetch","_ref2","_callee2","_context2","Fragment","width","display","alignItems","justifyContent","flexWrap","flexGrow","values","filter","categoryIDs","includes","isHidden","Badge","tableGroup","tableGroupID","href","devpostURL","Card","height","Body","Title","color","Subtitle","expoNumber","tableNumber","Text","getProjectCards","Modal","show","onHide","Header","closeButton","Check","checked","label","category","EMPTY_PROJECT","roundNumber","roomUrl","EMPTY_TABLE_GROUP","shortcode","REQUEST_START","REQUEST_FINISH","requestStart","requestFinish","FILL_BALLOTS","UPDATE_BALLOTS","DELETE_BALLOTS","CLEAR_BALLOTS","QUEUE_PROJECT","QUEUED_PROJECT","SCORE_PROJECT","GOT_PROJECT","BUSY_PROJECT","SKIP_PROJECT","MISSING_PROJECT","fillBallots","ballots","clearBallots","fetchBallots","initialBallotState","dJudgeQueues","dJudgeProjectBallotsMap","dProjectScores","JudgingState","PageJudging","updateBallots","startBallots","userID","projectID","_x2","missingBallots","_ref5","_callee5","_context5","_x5","busyBallots","_ref6","_callee6","_context6","_x6","skipBallots","_ref4","_callee4","_context4","_x4","criteria","currentProject","judgingState","Loading","updateBallotState","firstBallot","Started","JudgeProject","Assigned","FindProject","NoProject","fetchNextProject","_ballots","_getSkipButtons","marginTop","ButtonGroup","NextProject","_renderJudgeProject","_handleScoreBallots","scoreObject","reduce","dict","ballot","score","src","allow","criteriaID","ballotID","min","max","whiteSpace","rubric","minScore","maxScore","flexDirection","defineProperty","exclamations","Math","floor","random","_renderNextProject","link","activeKey","Item","adminRoute","ADD_USER","DELETE_USER","FILL_USERS","updateUser","updatedUser","fetchUsers","toFill","_i","_Object$values","users","PageAdminUsersModal","companies","_handleSaveChanges","closeModal","alert","reload","Label","ButtonToolbar","ToggleButtonGroup","ToggleButton","as","Footer","PageAdminUserCard","approve","includeExclude","include","_x3","openModal","UPDATE_COMPANIES","fetchCompanies","PageAdminUsers","initialState","newUser","modalUser","keys","admin_PageAdminUserCard","getUserCards","admin_PageAdminUsersModal","requiredHeaders","PageAdminProjectsUploadModal","useSelfAssign","enabled","inputNumberExpos","numberExpos","totalProjectsToAccountFor","ceil","csv","inputTableGroups","totalProjectsAccountedFor","counter","curVal","csvHeaderIndicies","effectInputTableGroups","initialTableGroups","fetchCategoriesResult","handleUpload","generatedCategories","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","row","categoriesString","splitCategories","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","existingCategoriesArray","_i2","_Array$from","generatedCategory","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","categoriesToSend","addGeneratedCategoriesResult","onlyNonGenerated","newCategories","nameToCategoryMapping","defaultCategoryIDs","projectsToSend","tableGroupNameMapping","allocatedTables","i","csvRow","tableParts","allocatedRows","csvRowNumber","_i3","_tableGroups","_tableNumber","finalTableGroupName","tableGroupNameToObject","_i4","_Object$keys","tableKey","_csvRow2","parts","devpostDesiredCategories","batchUploadResult","Set","Symbol","iterator","done","add","trim","return","finish","t1","array","generated","Array","from","delete","t2","categoryName","isDefault","description","currentCategory","sort","b","parseInt","throwError","parseResult","csvData","csvHeaders","_i5","_requiredHeaders","header","headerIndex","indexOf","splice","fileList","files","file","endsWith","Papa","parse","complete","skipEmptyLines","getFileUploadForm","getPropertiesForm","PageAdminProjectsManageTableGroupsModalGroupRow","handleChange","updateTableGroup","marginBottom","Row","Col","md","backgroundColor","test","deleteTableGroup","SortType","PageAdminProjectsManageTableGroupsModal","currentNewID","tableGroupsEffect","handleSaveChanges","_state$tableGroups","rest","objectWithoutProperties","PageAdminProjectsManageTableGroupsModal_toPropertyKey","admin_PageAdminProjectsManageTableGroupsModalGroupRow","getForm","newGroup","PageAdminProjectsAddProjectModal","PageAdminProjectsEpicenterProjectDot","changeProjectRound","newRoundNumber","ref","useRef","createRef","onContextMenu","current","background","opacity","dimmed","lineHeight","selectedProject","userSelect","MozUserSelect","cursor","handleSelectedProjectChange","fontWeight","loading","gridRow","gridColumn","fontSize","categoryScoreArrays","_allUserBallots","userBallots","err","_changeRound","difference","Overlay","Popover","badges","badgeVariant","health","scoresArray","total","join","_getOverlay","PageAdminProjectsEpicenterEmptyDot","minWidth","borderWidth","borderStyle","solid","ModalType","PageAdminProjectsEpicenter","queueProject","queueProjectEmit","emit","eventID","uuidv4","subscribeQueueProject","handle","subscribeQueuedProject","subscribeGotProject","subscribeScoreProject","subscribeSkipProject","subscribeMissingProject","subscribeBusyProject","unsubscribeAll","leave","currentExpo","currentRound","judgeSelectedProject","sortBy","powerGoodness","goodness","powerVariance","variance","powerSkip","skip","Location","projectsWithHealth","calculateProjectHealth","totalHealth","judgeQueue","queuedProject","activeProjectID","otherProjectIDs","calculateProjectCompanyHealth","categoryHealth","Number","judgeID","calculateProjectScore","projectId","defaultCategoryID","Submitted","catScoreArrays","moveProjectsToRound2","_Object$keys2","document","onkeypress","userIDs","judgingUsers","randomUserID","judgeCompany","canAssignProjects","lowestHealth","sameLowestHealthProjects","autoAssign","dismissPopover","keydown","addEventListener","removeEventListener","Accordion","AverageScore","ProjectHealth","TimesJudged","buttons","find","InputGroup","marginRight","FormControl","confirm","_handleSelectedProjectChange","projectCircles","_categoryScoreArrays2","allUserBallots","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","aCatScoreArrays","bCatScoreArrays","aScore","bScore","output","admin_PageAdminProjectsEpicenterProjectDot","_getProjects","_handleJudgeSelectedProject","_ref3","_callee3","_context3","toShow","flexFlow","toReturn","pending","admin_PageAdminProjectsEpicenterEmptyDot","other","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_loop","_iterator5","reverse","_getDerivedProjects","_getJudges","PageAdminProjects","modal","UploadProjects","ManageTableGroups","AddProject","admin_PageAdminProjectsEpicenter","admin_PageAdminProjectsUploadModal","admin_PageAdminProjectsManageTableGroupsModal","admin_PageAdminProjectsAddProjectModal","EMPTY_CATEGORY","criteriaDict","createEmptyCriteria","createPlaceholderCriteria","PageAdminCategoriesModalCriteria","updateCriteria","deleteCriteria","PageAdminCategoriesModal","currentNewCategoryID","handleNewCriteria","_state$category$crite","PageAdminCategoriesModal_toPropertyKey","admin_PageAdminCategoriesModalCriteria","getCriteriaRows","PageAdminCategories","deleteCategory","handleDelete","ListGroup","ListGroupItem","modalCategory","createdCategories","PageAdminCategoriesCard","getCategoryCards","admin_PageAdminCategoriesModal","PageAdminDashboard","criteriaIDs","criteriaNames","Table","striped","bordered","hover","scores","foundBallot","PageAdmin","admin_AdminNavigation","path","component","exact","PageRegister","passwordConfirm","handleRegister","pattern","containerStyle","PageHome","yourRole","adminBlurb","mobileBlurb","projectsBlurb","judgingBlurb","pendingBlurb","ownerBody","adminBody","judgeBody","pendingBody","expo_PageProjects","aria-label","App","AuthRoute","roleNeeded","curRole","assign","render","loginFetched","changeLoginFetched","checkUserData","components_Navigation","padding","components_Footer","reducer","combineReducers","_ret","_newDProjectScores$pr","_newDProjectScores1$p","orderedJudgeBallots","Date","updatedAt","getTime","v","ballotIDs","forEach","judgeQueueObject","dJudgeProjectBallotsMap1","newState","newBallots","removedBallotIDs","firstKey","firstKey2","ballotsArray","firstBallot2","userID2","projectID2","newDProjectScores","toConsumableArray","firstKey3","ballotsArray1","firstBallot3","userID3","projectID3","otherProjectIDs1","newDProjectScores1","ballotsToRemove","betterState","ballots1","_state$categories","_action$categoryID","resCategory","Category_toPropertyKey","criteriaState","categoryState","_Object$values2","critera","_state$categories$sta","_action$criteriaID","resCCriteria","_state$criteria","_action$criteriaID2","resCriteria","_action$projectID","_toPropertyKey","_action$tableGroupID","TableGroup_toPropertyKey","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","socket","io","origin","forceNew","removeAllListeners","handleEvent","on","socketMiddleware","ReactDOM","es","store","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6259ef67.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default interface User {\r\n  id?: number;\r\n  name?: string;\r\n  email?: string;\r\n  role: UserRole;\r\n  company?: string;\r\n  isJudging?: boolean;\r\n  tags?: string[];\r\n}\r\n\r\nexport enum UserRole {\r\n  None = 0,\r\n  Pending = 1,\r\n  Judge = 2,\r\n  Admin = 3,\r\n  Owner = 4,\r\n}\r\n\r\nexport interface UserState {\r\n  [id: number]: User\r\n}\r\n\r\nexport const EMPTY_USER: User = {\r\n  id: -1,\r\n  name: '',\r\n  email: '',\r\n  company: '',\r\n  role: UserRole.Pending,\r\n  isJudging: false,\r\n  tags: [],\r\n}\r\n\r\nexport function clientUserToServerUser(user: User) {\r\n  return {\r\n    ...user,\r\n    isJudging: user.role === UserRole.Pending ? false : user.isJudging,\r\n    role: getRoleEnum(user.role),\r\n  };\r\n}\r\n\r\nexport function serverDataToClientUser(data: any) {\r\n  if (data.id && data.name && data.email && data.role && data.tags) {\r\n    return {\r\n      ...data,\r\n      role: roleStringToEnum(data.role),\r\n    };\r\n  } else {\r\n    throw new Error('Server returned an unexpected result.');\r\n  }\r\n}\r\n\r\nexport function roleStringToEnum(role: string) {\r\n  switch (role) {\r\n    case 'owner':\r\n      return UserRole.Owner;\r\n    case 'admin':\r\n      return UserRole.Admin;\r\n    case 'judge':\r\n      return UserRole.Judge;\r\n    case 'pending':\r\n      return UserRole.Pending;\r\n    default:\r\n      return UserRole.None;\r\n  }\r\n}\r\n\r\nexport function getRoleString(role: UserRole) {\r\n  switch (role) {\r\n    case UserRole.Owner:\r\n      return 'Owner';\r\n    case UserRole.Admin:\r\n      return 'Admin';\r\n    case UserRole.Judge:\r\n      return 'Judge';\r\n    case UserRole.Pending:\r\n      return 'Pending';\r\n    case UserRole.None:\r\n      return 'None';\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport function getRoleEnum(role: UserRole) {\r\n  switch (role) {\r\n    case UserRole.Owner:\r\n      return 'owner';\r\n    case UserRole.Admin:\r\n      return 'admin';\r\n    case UserRole.Judge:\r\n      return 'judge';\r\n    case UserRole.Pending:\r\n      return 'pending';\r\n    case UserRole.None:\r\n      return 'none';\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import User, { UserRole } from '../types/User';\r\n\r\n// Action Types\r\nexport const UPDATE_USER = 'ACCOUNT_UPDATE_USER';\r\nexport const LOGIN_USER = 'ACCOUNT_LOGIN_USER';\r\nexport const LOGOUT_USER = 'ACCOUNT_LOGOUT_USER';\r\n\r\nconst noAccountUser: User = {\r\n  role: UserRole.None,\r\n};\r\n\r\n// Action Creators\r\nexport function updateUser(updatedUser: User) {\r\n  return { type: UPDATE_USER, user: updatedUser };\r\n}\r\n\r\nexport function loginUser(userToLogin: User) {\r\n  return { type: LOGIN_USER, user: userToLogin };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return { type: LOGOUT_USER, user: noAccountUser};\r\n}\r\n\r\nexport function updateSocket() {\r\n  return { update: true };\r\n}\r\n\r\n// Reducer\r\nexport default function account(state: User = noAccountUser, action: any) {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n    case LOGIN_USER:\r\n    case LOGOUT_USER:\r\n      return action.user;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport User, { UserRole } from '../types/User';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PATH_PROFILE = '/profile';\r\nconst PATH_LOGIN = '/login';\r\nconst PATH_LOGOUT = '/logout';\r\n\r\ninterface NavigationProps {\r\n  account: User;\r\n  match: any;\r\n  location: any;\r\n  history: any;\r\n}\r\n\r\nconst Navigation: React.FC<NavigationProps> = (props) => {\r\n  const actualPage = () => {\r\n    const pageString = props.location.pathname.split('/')[1];\r\n    return pageString === '' ? '/' : `/${pageString}`;\r\n  };\r\n\r\n  const [curPage, changeCurPage] = React.useState(actualPage());\r\n\r\n  React.useEffect(() => {\r\n    changeCurPage(actualPage());\r\n  }, [props.location]);\r\n\r\n  const navTo = (route: string) => {\r\n    props.history.push(route);\r\n    changeCurPage(actualPage());\r\n  };\r\n\r\n  const genLeftNav = (role: UserRole) => {\r\n    let leftNav: [string, string][] = [];\r\n    switch (role) {\r\n      case UserRole.Owner:\r\n      case UserRole.Admin:\r\n        leftNav = [\r\n          ['Home', '/'],\r\n          ['Judging', '/judging'],\r\n          ['Projects', '/projects'],\r\n          ['Admin', '/admin'],\r\n        ];\r\n        break;\r\n      case UserRole.Judge:\r\n        leftNav = [\r\n          ['Home', '/'],\r\n          ['Judging', '/judging'],\r\n          ['Projects', '/projects'],\r\n        ];\r\n        break;\r\n      case UserRole.Pending:\r\n        leftNav = [\r\n          ['Home', '/'],\r\n          ['Projects', '/projects'],\r\n        ];\r\n        break;\r\n      default:\r\n        leftNav = [\r\n          ['Projects', '/'],\r\n        ]\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <Nav className=\"mr-auto\">\r\n      {leftNav.map((navItem) => {\r\n        return (\r\n          <Nav.Link\r\n            key={navItem[0]}\r\n            eventKey={navItem[0]}\r\n            active={navItem[1] === curPage}\r\n            onSelect={() => navTo(navItem[1])}>\r\n            {navItem[0]}\r\n          </Nav.Link>\r\n        );\r\n      })}\r\n      </Nav>\r\n    )\r\n  };\r\n\r\n  let genRightNav = (role: UserRole) => {\r\n    if (role >= UserRole.Pending) {\r\n      return (\r\n        <Nav>\r\n          {/* <Nav.Link\r\n            active={PATH_PROFILE === curPage}\r\n            eventKey={'profile'}\r\n            onSelect={() => navTo(PATH_PROFILE)}>\r\n            Profile\r\n          </Nav.Link> */}\r\n          <Nav.Link\r\n            active={PATH_LOGOUT === curPage}\r\n            eventKey={'logout'}\r\n            onSelect={() => navTo(PATH_LOGOUT)}>\r\n            Logout\r\n          </Nav.Link>\r\n        </Nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <Nav>\r\n          <Nav.Link\r\n            active={PATH_LOGIN === curPage}\r\n            eventKey={'login'}\r\n            onSelect={() => navTo(PATH_LOGIN)}>\r\n            Login\r\n          </Nav.Link>\r\n        </Nav>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect bg='dark' variant='dark' expand=\"sm\" >\r\n      <Link\r\n        to={'/'}\r\n        style={{ textDecoration: 'none' }}\r\n        onClick={() => navTo('/')}>\r\n        <Navbar.Brand>HackGT Expo</Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"navigation\" />\r\n      <Navbar.Collapse>\r\n        {genLeftNav(props.account.role)}\r\n        {genRightNav(props.account.role)}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);","import * as qs from 'querystring';\r\nimport Axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\r\n\r\nimport User, { roleStringToEnum } from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { loginUser, updateSocket } from '../../state/Account';\r\nimport { UIError } from '../../types/Common';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    loginUser: (user: User) => dispatch(loginUser(user)),\r\n    updateSocket: () => {\r\n      dispatch(updateSocket());\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageLoginProps {\r\n  account: User;\r\n  loginUser: (user: User) => void;\r\n  updateSocket: () => void;\r\n}\r\n\r\ninterface Inputs {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ntype State = {\r\n  error: UIError;\r\n  inputs: Inputs;\r\n  requesting: boolean;\r\n  success: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'change-error', error: UIError }\r\n  | { type: 'change-inputs', inputs: Partial<Inputs> }\r\n  | { type: 'request-success' }\r\n  | { type: 'request-start' }\r\n  | { type: 'request-finish' };\r\n\r\nconst PageLoginComponent: React.FC<PageLoginProps> = (props) => {\r\n  const initialState = {\r\n    requesting: false,\r\n    inputs: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    error: {\r\n      name: '',\r\n      message: '',\r\n    },\r\n    success: false,\r\n  };\r\n\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'change-error':\r\n        return {\r\n          ...state,\r\n          error: action.error,\r\n          requesting: false,\r\n        };\r\n      case 'change-inputs':\r\n        return { ...state, inputs: {\r\n          ...state.inputs,\r\n          ...action.inputs,\r\n        }};\r\n      case 'request-start':\r\n        return {\r\n          ...state,\r\n          requesting: true,\r\n          error: { name: '', message: '' },\r\n        };\r\n      case 'request-finish':\r\n        return { ...state, requesting: false, success: false };\r\n      case 'request-success':\r\n        return { ...state, requesting: false, success: true };\r\n      default:\r\n        return state;\r\n    }\r\n  }, initialState, undefined);\r\n\r\n  const genErrorBox = () => {\r\n    return state.error.name\r\n      ? <Alert variant=\"danger\">\r\n          <strong>{state.error.name}</strong>\r\n          <div>{state.error.message}</div>\r\n        </Alert>\r\n      : null\r\n  };\r\n\r\n  const handleLogin = async (event: any) => {\r\n    event.preventDefault();\r\n    if (state.inputs.email.length === 0 || state.inputs.password.length === 0) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Logging In',\r\n          message: 'One or more fields were left blank.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: 'request-start' });\r\n    const loginResponse = await Axios.post('/auth/login', qs.stringify({\r\n      'email': state.inputs.email.toLowerCase(),\r\n      'password': state.inputs.password,\r\n    }), {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n    });\r\n    const payload = loginResponse.data;\r\n    if (\r\n      !loginResponse.status\r\n      || !payload.id\r\n      || !payload.name\r\n      || !payload.email\r\n      || !payload.role\r\n    ) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Logging In',\r\n          message: 'Incorrect email or password.',\r\n        },\r\n      });\r\n      dispatch({ type: 'request-finish' });\r\n      return;\r\n    }\r\n\r\n    props.loginUser({\r\n      id: payload.id,\r\n      name: payload.name,\r\n      email: payload.email,\r\n      company: payload.company,\r\n      role: roleStringToEnum(payload.role),\r\n      tags: payload.tags,\r\n    });\r\n    props.updateSocket();\r\n    dispatch({ type: 'request-success' });\r\n  };\r\n\r\n  if (state.success) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      margin: '0 auto',\r\n      maxWidth: 400,\r\n    }}>\r\n      <h1 style={{\r\n        textAlign: 'center',\r\n        paddingBottom: 10,\r\n      }}>Login</h1>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                email: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.email}\r\n            type='email'\r\n            placeholder='Email' />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            type='password'\r\n            placeholder='Password'\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                password: event.target.value,\r\n              },\r\n            })} />\r\n        </Form.Group>\r\n        <Button\r\n          variant='primary'\r\n          type='submit'\r\n          onClick={handleLogin}\r\n          block>\r\n          {state.requesting\r\n            ? <Spinner animation='border' role='status' size='sm' />\r\n            : 'Login'}\r\n        </Button>\r\n      </Form>\r\n      {genErrorBox()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageLogin = connect(mapStateToProps, mapDispatchToProps)(PageLoginComponent);\r\n\r\nexport default PageLogin;\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nimport User from '../../types/User';\r\nimport { logoutUser, updateSocket } from '../../state/Account';\r\n\r\nconst sleep = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    logoutUser: () => {\r\n      dispatch(logoutUser());\r\n    },\r\n    updateSocket: () => {\r\n      dispatch(updateSocket());\r\n    },\r\n  };\r\n};\r\n\r\ninterface LogoutProps {\r\n  account: User;\r\n  logoutUser: () => void;\r\n  updateSocket: () => void;\r\n}\r\n\r\nconst PageLogoutComponent: React.FC<LogoutProps> = (props) => {\r\n  const [success, changeSuccess] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const logout = async () => {\r\n      await Promise.all([Axios.get('/auth/logout'), sleep(500)])\r\n      props.logoutUser();\r\n      props.updateSocket();\r\n      changeSuccess(true);\r\n    };\r\n    logout();\r\n  }, [success]);\r\n\r\n  return success\r\n    ? <Redirect to='/' />\r\n    : <Spinner animation='grow' />\r\n};\r\n\r\nconst PageLogout = connect(null, mapDispatchToProps)(PageLogoutComponent);\r\n\r\nexport default PageLogout;\r\n","import React from 'react';\r\n\r\nimport User from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { loginUser } from '../../state/Account';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\taccount: state.account,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloginUser: (user: User) => {\r\n\t\t\tdispatch(loginUser(user));\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface PageProfileProps {\r\n\taccount: User;\r\n\tloginUser: (user: User) => void;\r\n}\r\n\r\ntype State = {\r\n\trequesting: boolean;\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'request-start'}\r\n\t| { type: 'request-finish'};\r\n\r\nconst PageProfileComponent: React.FC<PageProfileProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'request-start':\r\n\t\t\t\treturn { ...state, requesting: true };\r\n\t\t\tcase 'request-finish':\r\n\t\t\t\treturn { ...state, requesting: false };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n\t\trequesting: false,\r\n\t}, undefined);\r\n\r\n\treturn (\r\n\t\t<div>Profile</div>\r\n\t);\r\n};\r\n\r\nconst PageProfile = connect(mapStateToProps, mapDispatchToProps)(PageProfileComponent);\r\n\r\nexport default PageProfile;\r\n","import Project, { ProjectState } from '../types/Project';\r\nimport Axios from 'axios';\r\nimport { BallotObject } from \"../types/Ballot\";\r\nimport { fillBallots } from \"./Ballot\";\r\n\r\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\r\nexport const FILL_PROJECTS = 'FILL_PROJECTS';\r\nexport const APPEND_FILL_PROJECTS = 'APPEND_FILL_PROJECTS';\r\n\r\nexport function updateProject(project: Project) {\r\n  return { type: UPDATE_PROJECT, project };\r\n}\r\n\r\nexport function deleteProject(projectID: number) {\r\n  return { type: DELETE_PROJECT, projectID };\r\n}\r\n\r\nexport function fillProjects(projects: ProjectState) {\r\n  return { type: FILL_PROJECTS, projects };\r\n}\r\n\r\nexport function appendFillProjects(projects: ProjectState) {\r\n  return { type: APPEND_FILL_PROJECTS, projects };\r\n}\r\n\r\nexport function fetchProjects() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/projects/allProjects');\r\n      if (result.status) {\r\n        const payload: ProjectState = result.data;\r\n        dispatch(fillProjects(payload));\r\n      } else {\r\n        throw new Error('API Error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function changeProjectRound(project: Project, newRoundNumber: number) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.post('/api/projects/changeProjectRound', {\r\n        project,\r\n        newRoundNumber\r\n      });\r\n      if (result.status) {\r\n        const payload: Project = result.data;\r\n        dispatch(updateProject(payload));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n}\r\n\r\nexport default function projects(state: ProjectState = {}, action: any) {\r\n  switch (action.type) {\r\n    case UPDATE_PROJECT:\r\n      return {\r\n        ...state,\r\n        [action.project.id]: action.project,\r\n      };\r\n    case DELETE_PROJECT:\r\n      let {[action.projectID]: omit, ...res} = state;\r\n      return res;\r\n    case FILL_PROJECTS:\r\n      return action.projects;\r\n    case APPEND_FILL_PROJECTS:\r\n      return {\r\n        ...state,\r\n        ...action.projects,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Category, { Criteria, CategoryState, CategoryCriteriaState, CriteriaState } from '../types/Category';\r\nimport Axios from 'axios';\r\n\r\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\r\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY';\r\nexport const FILL_CATEGORIES = 'FILL_CATEGORIES';\r\n\r\nexport const UPDATE_CRITERIA = 'UPDATE_CRITERIA';\r\nexport const DELETE_CRITERIA = 'DELETE_CRITERIA';\r\nexport const FILL_CRITERIA = 'FILL_CRITERIA';\r\n\r\nexport function updateCategory(categories: CategoryState) {\r\n  return { type: UPDATE_CATEGORY, categories };\r\n}\r\n\r\nexport function deleteCategory(categoryID: number) {\r\n  return { type: DELETE_CATEGORY, categoryID };\r\n}\r\n\r\nexport function fillCategories(categories: { [id: number]: Category }) {\r\n  return { type: FILL_CATEGORIES, categories };\r\n}\r\n\r\nexport function updateCriteria(criteria: Criteria) {\r\n  return { type: UPDATE_CRITERIA, criteria };\r\n}\r\n\r\nexport function deleteCriteria(criteriaID: number) {\r\n  return { type: DELETE_CRITERIA, criteriaID };\r\n}\r\n\r\nexport function fillCriteria(criteria: { [id: number]: Criteria }) {\r\n  return { type: FILL_CRITERIA, criteria };\r\n}\r\n\r\nexport function fetchCategories() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/categories/allCategoriesCriteria');\r\n      if (result.status) {\r\n        const payload: CategoryState = result.data;\r\n        dispatch(fillCategories(payload));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport default function categories(state: CategoryCriteriaState = {\r\n  criteria: {},\r\n  categories: {}\r\n}, action: any) {\r\n  switch (action.type) {\r\n    case UPDATE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: {\r\n          ...state.categories,\r\n          ...action.categories,\r\n        },\r\n      };\r\n    case DELETE_CATEGORY:\r\n      let {[action.categoryID]: omitCategory, ...resCategory} = state.categories;\r\n      return {\r\n        ...state,\r\n        categories: resCategory,\r\n      };\r\n    case FILL_CATEGORIES:\r\n      const criteriaState: CriteriaState = {};\r\n      const categoryState: CategoryState = action.categories;\r\n      for (const cat of Object.values(categoryState)) {\r\n        const category: Category = cat;\r\n        for (const cri of Object.values(category.criteria)) {\r\n          const criteria: Criteria = cri;\r\n          criteriaState[criteria.id!] = {\r\n            ...criteria,\r\n            categoryID: category.id!,\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        criteria: criteriaState,\r\n        categories: action.categories,\r\n      };\r\n    case UPDATE_CRITERIA:\r\n      return {\r\n        categories: {\r\n          ...state.categories,\r\n          [action.critera.categoryID]: {\r\n            ...state.categories[action.critera.categoryID],\r\n            criteria: {\r\n              ...action.criteria,\r\n            },\r\n          }\r\n        },\r\n        criteria: {\r\n          ...state.criteria,\r\n          ...action.criteria,\r\n        },\r\n      };\r\n    case DELETE_CRITERIA:\r\n      let {[action.criteriaID]: omitCCriteria, ...resCCriteria} = state.categories[state.criteria[action.criteriaID].categoryID].criteria;\r\n      let {[action.criteriaID]: omitCriteria, ...resCriteria} = state.criteria;\r\n      return {\r\n        categories: {\r\n          ...state.categories,\r\n          [action.criteria.categoryID]: {\r\n            critera: resCCriteria,\r\n          },\r\n        },\r\n        criteria: resCriteria,\r\n      };\r\n    case FILL_CRITERIA:\r\n      return {\r\n        ...state,\r\n        categories: {\r\n          ...state.categories,\r\n          [action.criteria.categoryID]: {\r\n            ...state.categories[action.criteria.categoryID],\r\n            criteria: action.criteria,\r\n          },\r\n        },\r\n        criteria: {\r\n          ...state.criteria,\r\n          ...action.criteria,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { TableGroup, TableGroupState } from '../types/Project';\r\nimport Axios from 'axios';\r\n\r\nexport const UPDATE_TABLE_GROUP = 'UPDATE_TABLE_GROUP';\r\nexport const DELETE_TABLE_GROUP = 'DELETE_TABLE_GROUP';\r\nexport const FILL_TABLE_GROUPS = 'FILL_TABLE_GROUPS';\r\n\r\nexport function updateTableGroup(tableGroup: TableGroup) {\r\n  return { type: UPDATE_TABLE_GROUP, tableGroup };\r\n}\r\n\r\nexport function deleteTableGroup(tableGroupID: number) {\r\n  return { type: DELETE_TABLE_GROUP, tableGroupID };\r\n}\r\n\r\nexport function fillTableGroups(tableGroups: TableGroupState) {\r\n  return { type: FILL_TABLE_GROUPS, tableGroups };\r\n}\r\n\r\nexport function fetchTableGroups() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/tableGroups/allTableGroups');\r\n      if (result.status) {\r\n        const payload: TableGroupState = result.data;\r\n        dispatch(fillTableGroups(payload));\r\n      } else {\r\n        throw new Error('API Error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport default function tableGroups(state: TableGroupState = {}, action: any) {\r\n  switch (action.type) {\r\n    case UPDATE_TABLE_GROUP:\r\n      return {\r\n        ...state,\r\n        [action.tableGroup.id]: action.tableGroup,\r\n      };\r\n    case DELETE_TABLE_GROUP:\r\n      let {[action.tableGroupID]: omit, ...rest} = state;\r\n      return rest;\r\n    case FILL_TABLE_GROUPS:\r\n      return action.tableGroups;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Badge, Card, Button, Modal, Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Project, { ProjectState, TableGroupState } from '../../types/Project';\r\nimport { fetchProjects } from '../../state/Project';\r\nimport Category, { CategoryState, CategoryCriteriaState } from '../../types/Category';\r\nimport { fillCategories } from '../../state/Category';\r\nimport { AppState } from '../../state/Store';\r\nimport { fetchTableGroups } from '../../state/TableGroup';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\tcategories: state.categories,\r\n\t\tprojects: state.projects,\r\n\t\ttableGroups: state.tableGroups,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfetchTableGroups: () => {\r\n\t\t\tdispatch(fetchTableGroups());\r\n\t\t},\r\n\t\tfetchProjects: () => {\r\n\t\t\tdispatch(fetchProjects());\r\n\t\t},\r\n\t\tfillCategories: (categories: CategoryState) => {\r\n\t\t\tdispatch(fillCategories(categories));\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface PageProjectsProps {\r\n\tcategories: CategoryCriteriaState;\r\n\tprojects: ProjectState;\r\n\ttableGroups: TableGroupState;\r\n\tfillCategories: (categories: CategoryState) => void;\r\n\tfetchTableGroups: () => void;\r\n\tfetchProjects: () => void;\r\n}\r\n\r\ntype State = {\r\n\trequesting: boolean;\r\n\tfilterBy: number;\r\n\tmodalOpen: boolean;\r\n\tsearchText: string;\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'change-filterBy', categoryID: number }\r\n\t| { type: 'toggle-modal' }\r\n\t| { type: 'request-start'}\r\n\t| { type: 'request-finish'}\r\n\t| { type: 'change-search', search: string };\r\n\r\nconst PageProjectsComponent: React.FC<PageProjectsProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'toggle-modal':\r\n\t\t\t\treturn { ...state, modalOpen: !state.modalOpen };\r\n\t\t\tcase 'change-filterBy':\r\n\t\t\t\treturn { ...state, filterBy: action.categoryID };\r\n\t\t\tcase 'request-start':\r\n\t\t\t\treturn { ...state, requesting: true };\r\n\t\t\tcase 'request-finish':\r\n\t\t\t\treturn { ...state, requesting: false };\r\n\t\t\tcase 'change-search':\r\n\t\t\t\treturn { ...state, searchText: action.search };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n\t\trequesting: false,\r\n\t\tfilterBy: 0,\r\n\t\tmodalOpen: false,\r\n\t\tsearchText: '',\r\n\t}, undefined);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst initialFetch = async () => {\r\n\t\t\tdispatch({ type: 'request-start' });\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tprops.fetchTableGroups(),\r\n\t\t\t\tprops.fetchProjects(),\r\n\t\t\t\tfetchCategories(),\r\n\t\t\t]);\r\n\t\t\tdispatch({ type: 'request-finish' });\r\n\t\t};\r\n\r\n\t\tinitialFetch();\r\n\t}, []);\r\n\r\n\tconst fetchCategories = async () => {\r\n\t\tconst result = await Axios.get('/api/categories/allCategories');\r\n\t\tif (result.status) {\r\n\t\t\tconst payload: CategoryState = result.data;\r\n\t\t\tprops.fillCategories(payload);\r\n\t\t} else {\r\n\t\t\t// TODO error checking\r\n\t\t}\r\n\t};\r\n\r\n\tconst getProjectCards = () => {\r\n\t\tif (\r\n\t\t\tObject.values(props.categories.categories).length > 0\r\n\t\t\t&& Object.values(props.projects).length > 0\r\n\t\t\t&& Object.values(props.tableGroups).length > 0\r\n\t\t) {\r\n\t\t\treturn Object.values(props.projects)\r\n\t\t\t\t.filter((project: Project) => !state.filterBy || project.categoryIDs.includes(state.filterBy))\r\n\t\t\t\t.filter((project: Project) => project.name.toLowerCase().includes(state.searchText.toLowerCase()))\r\n\t\t\t\t.map((project: Project) => {\r\n\t\t\t\tconst categories = project.categoryIDs.filter((categoryID: number) => {\r\n\t\t\t\t\tif (props.categories.categories[categoryID] == null) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (props.categories.categories[categoryID].isHidden) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}).map((categoryID: number) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\tkey={categoryID}\r\n\t\t\t\t\t\t\tvariant='secondary'\r\n\t\t\t\t\t\t\tstyle={{ margin: '0 2px' }}>\r\n\t\t\t\t\t\t\t{props.categories.categories[categoryID].name}\r\n\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\tconst tableGroup = props.tableGroups[project.tableGroupID];\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\tkey={project.id!}\r\n\t\t\t\t\t\thref={project.devpostURL}\r\n\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttextDecoration: 'none',\r\n\t\t\t\t\t\t\twidth: '18rem',\r\n\t\t\t\t\t\t\tmargin: 6,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t<Card style={{ height: '100%', }}>\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<Card.Title style={{\r\n\t\t\t\t\t\t\t\tcolor: tableGroup.color\r\n\t\t\t\t\t\t\t}}>{project.name}</Card.Title>\r\n\t\t\t\t\t\t\t<Card.Subtitle className=\"mb-2 text-muted\">Expo {project.expoNumber}, Table: {tableGroup.name} {project.tableNumber}</Card.Subtitle>\r\n\t\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t\t{categories}\r\n\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst getCategoriesRadios = () => {\r\n\t\treturn Object.values(props.categories.categories).filter((category: Category) => {\r\n\t\t\tif (category.isHidden) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}).map((category: Category) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Form.Check\r\n\t\t\t\tchecked={state.filterBy === category.id!}\r\n\t\t\t\t\tkey={category.id!}\r\n\t\t\t\t\ttype='radio'\r\n\t\t\t\t\tname='prizeName'\r\n\t\t\t\t\tlabel={category.name}\r\n\t\t\t\t\tonChange={() => dispatch({ type: 'change-filterBy', categoryID: category.id! })}\r\n\t\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={{ width: '100%' }}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tmargin: '0 auto',\r\n\t\t\t\t\tmaxWidth: 1300,\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\tflexWrap: 'wrap', }}>\r\n\t\t\t\t\t<h1>Projects</h1>\r\n\t\t\t\t\t<div style={{ flexGrow: 2 }}></div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{ width: 130 }}\r\n\t\t\t\t\t\tvariant='outline-dark'\r\n\t\t\t\t\t\tonClick={() => dispatch({ type: 'toggle-modal' })}>\r\n\t\t\t\t\t\tCategories\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tstyle={{ maxWidth: 300, margin: '0 12px' }}\r\n\t\t\t\t\t\tvalue={state.searchText}\r\n\t\t\t\t\t\tonChange={(event: any) => dispatch({ type: 'change-search', search: event.target.value})}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Search for projects' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t\tmaxWidth: 1300,\r\n\t\t\t\t\tmargin: '12px auto 0',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t{getProjectCards()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Modal show={state.modalOpen} onHide={() => dispatch({ type: 'toggle-modal'})}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\tFilter Projects\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\tchecked={state.filterBy === 0}\r\n\t\t\t\t\t\t\tname='prizeName'\r\n\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\tlabel={'All Projects'}\r\n\t\t\t\t\t\t\tonChange={() => dispatch({ type: 'change-filterBy', categoryID: 0 })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{getCategoriesRadios()}\r\n\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst PageProjects = connect(mapStateToProps, mapDispatchToProps)(PageProjectsComponent);\r\n\r\nexport default PageProjects;\r\n","export enum BallotStatus {\r\n  Pending = 'pending',\r\n  Assigned = 'assigned',\r\n  Submitted = 'submitted',\r\n  Missing = 'missing',\r\n  Busy = 'busy',\r\n  Skipped = 'skipped',\r\n  Started = 'started',\r\n}\r\n\r\nexport default interface Ballot {\r\n  id?: number;\r\n  status: BallotStatus;\r\n  projectID: number;\r\n  criteriaID: number;\r\n  userID: number;\r\n  score: number;\r\n  roundNumber: number;\r\n  createdAt: number;\r\n  updatedAt: number;\r\n  pending?: boolean;\r\n}\r\n\r\nexport interface JudgeProjectBallotsMapping {\r\n  [judgeID: number]: {\r\n    [projectID: number]: Ballot[];\r\n  };\r\n}\r\n\r\nexport interface ProjectScoresMapping {\r\n  [projectID: number]: {\r\n    [judgeID: number]: Ballot[];\r\n  };\r\n}\r\n\r\nexport interface JudgeQueues {\r\n  [userID: number]: {\r\n    queuedProject: QueuedProject;\r\n    activeProjectID: number;\r\n    otherProjectIDs: number[];\r\n  }\r\n}\r\n\r\nexport interface QueuedProject {\r\n  id: number;\r\n  pending: boolean;\r\n}\r\n\r\nexport interface BallotObject {\r\n  [ballotID: number]: Ballot;\r\n}\r\n\r\nexport interface BallotState extends BallotObject {\r\n  dJudgeQueues: JudgeQueues;\r\n  dJudgeProjectBallotsMap: JudgeProjectBallotsMapping;\r\n  dProjectScores: ProjectScoresMapping;\r\n}\r\n","export default interface Project {\r\n  id?: number;\r\n  name: string;\r\n  devpostURL: string;\r\n  expoNumber: number;\r\n  roundNumber: number;\r\n  tableGroupID: number;\r\n  tableNumber: number;\r\n  roomUrl: string;\r\n  categoryIDs: number[];\r\n  tags: string[];\r\n}\r\n\r\nexport interface ProjectWithHealth extends Project {\r\n  health: number;\r\n}\r\n\r\nexport interface TableGroup {\r\n  id?: number;\r\n  name: string;\r\n  shortcode: string;\r\n  color: string;\r\n}\r\n\r\nexport interface ProjectState {\r\n  [id: number]: Project;\r\n}\r\n\r\nexport interface TableGroupState {\r\n  [id: number]: TableGroup;\r\n}\r\n\r\nexport const EMPTY_PROJECT = {\r\n  id: 0,\r\n  name: '',\r\n  devpostURL: '',\r\n  expoNumber: 0,\r\n  roundNumber: 0,\r\n  tableGroupID: 0,\r\n  tableNumber: 0,\r\n  roomUrl: '',\r\n  categoryIDs: [],\r\n  tags: [],\r\n}\r\n\r\nexport const EMPTY_TABLE_GROUP = {\r\n  id: -1,\r\n  name: '',\r\n  shortcode: '',\r\n  color: '',\r\n}\r\n","// Action Types\r\nexport const REQUEST_START = 'REQUEST_START';\r\nexport const REQUEST_FINISH = 'REQUEST_FINISH';\r\n\r\n// Action Creators\r\nexport function requestStart() {\r\n  return { type: REQUEST_START }\r\n}\r\n\r\nexport function requestFinish() {\r\n  return { type: REQUEST_FINISH }\r\n}\r\n\r\nexport default function request(state: boolean = false, action: any) {\r\n  switch (action.type) {\r\n    case REQUEST_START:\r\n      return true;\r\n    case REQUEST_FINISH:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import uuidv4 from 'uuid/v4';\r\n\r\nimport Ballot, { BallotState, JudgeProjectBallotsMapping, BallotStatus, JudgeQueues, BallotObject, ProjectScoresMapping } from \"../types/Ballot\";\r\nimport Axios from 'axios';\r\n\r\nexport const FILL_BALLOTS = 'FILL_BALLOTS';\r\nexport const UPDATE_BALLOTS = 'UPDATE_BALLOTS';\r\nexport const DELETE_BALLOTS = 'DELETE_BALLOTS';\r\nexport const CLEAR_BALLOTS = 'CLEAR_BALLOTS';\r\n\r\nexport const QUEUE_PROJECT = 'QUEUE_PROJECT';\r\nexport const QUEUED_PROJECT = 'QUEUED_PROJECT';\r\nexport const SCORE_PROJECT = 'SCORE_PROJECT';\r\nexport const GOT_PROJECT = 'GOT_PROJECT';\r\nexport const BUSY_PROJECT = 'BUSY_PROJECT';\r\nexport const SKIP_PROJECT = 'SKIP_PROJECT';\r\nexport const MISSING_PROJECT = 'MISSING_PROJECT';\r\n\r\nexport function subscribeQueueProject() {\r\n  return {\r\n    event: 'project-queue',\r\n    handle: QUEUE_PROJECT,\r\n  };\r\n}\r\n\r\nexport function unsubscribeQueueProject() {\r\n  return {\r\n    event: 'project-queue',\r\n    leave: true,\r\n  };\r\n}\r\n\r\nexport function subscribeQueuedProject() {\r\n  return {\r\n    event: 'project-queued',\r\n    handle: QUEUED_PROJECT,\r\n  };\r\n}\r\n\r\nexport function unsubscribeQueuedProject() {\r\n  return {\r\n    event: 'project-queued',\r\n    leave: true,\r\n  };\r\n}\r\n\r\nexport function subscribeGetProject() {\r\n  return {\r\n    event: 'project-got',\r\n    handle: GOT_PROJECT,\r\n  };\r\n}\r\n\r\nexport function subscribeScoreProject() {\r\n  return {\r\n    event: 'project-score',\r\n    handle: SCORE_PROJECT,\r\n  };\r\n}\r\n\r\nexport function subscribeSkipProject() {\r\n  return {\r\n    event: 'project-skip',\r\n    handle: SKIP_PROJECT,\r\n  };\r\n}\r\n\r\nexport function subscribeMissingProject() {\r\n  return {\r\n    event: 'project-missing',\r\n    handle: MISSING_PROJECT,\r\n  };\r\n}\r\n\r\nexport function subscribeBusyProject() {\r\n  return {\r\n    event: 'project-busy',\r\n    handle: BUSY_PROJECT,\r\n  };\r\n}\r\n\r\nexport function unsubscribeAll() {\r\n  return {\r\n    event: 'empty',\r\n    leave: true,\r\n  };\r\n}\r\n\r\nexport function fillBallots(ballots: BallotObject) {\r\n  return { type: FILL_BALLOTS, ballots };\r\n}\r\n\r\nexport function updateBallots(ballots: BallotObject) {\r\n  return { type: UPDATE_BALLOTS, ballots };\r\n}\r\n\r\nexport function deleteBallots(ballotIDs: number[]) {\r\n  return { type: DELETE_BALLOTS, ballotIDs };\r\n}\r\n\r\nexport function clearBallots() {\r\n  return { type: CLEAR_BALLOTS };\r\n}\r\n\r\nexport function fetchBallots() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/ballots/allBallots');\r\n      if (result.status) {\r\n        const payload: BallotObject = result.data;\r\n        dispatch(fillBallots(payload));\r\n      } else {\r\n        throw new Error('API Error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function startBallots(userID: number, projectID: number) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.post('/api/projects/startProject', {\r\n        userID,\r\n        projectID,\r\n      });\r\n      if (result.status) {\r\n        const payload: BallotObject = result.data;\r\n        dispatch(fillBallots(payload));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function scoreBallots(ballots: { [ballotID: number]: number }) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      console.log(ballots);\r\n      const result = await Axios.post('/api/projects/scoreProject', {\r\n        ballots,\r\n      });\r\n\r\n      console.log(result);\r\n      if (result.status) {\r\n        console.log('lsdkjflsdkjfsdljksdf');\r\n        dispatch(clearBallots());\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function skipBallots(userID: number, projectID: number) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.post('/api/projects/skip', {\r\n        userID,\r\n        projectID,\r\n      });\r\n      if (result.status) {\r\n        const payload: BallotObject = result.data\r\n        dispatch(clearBallots());\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function missingBallots(userID: number, projectID: number) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.post('/api/projects/missing', {\r\n        userID,\r\n        projectID,\r\n      });\r\n      if (result.status) {\r\n        const payload: BallotObject = result.data\r\n        dispatch(clearBallots());\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function busyBallots(userID: number, projectID: number) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.post('/api/projects/busy', {\r\n        userID,\r\n        projectID,\r\n      });\r\n      if (result.status) {\r\n        dispatch(clearBallots());\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function queueProject(projectID: number, userID: number) {\r\n  return {\r\n    type: 'QUEUE_PROJECT',\r\n    result: {\r\n      userID,\r\n      projectID,\r\n    }\r\n  };\r\n}\r\n\r\nexport function queueProjectEmit(projectID: number, userID: number) {\r\n  console.log('wow', projectID, userID);\r\n  return {\r\n    event: 'project-queue',\r\n    emit: true,\r\n    payload: {\r\n      eventID: uuidv4(),\r\n      projectID,\r\n      userID,\r\n    },\r\n  };\r\n}\r\n\r\nconst initialBallotState: BallotState = {\r\n  dJudgeQueues: {},\r\n  dJudgeProjectBallotsMap: {},\r\n  dProjectScores: {},\r\n}\r\n\r\nexport default function ballots(state: BallotState = initialBallotState, action: any) {\r\n  switch (action.type) {\r\n    case FILL_BALLOTS:\r\n      const dJudgeProjectBallotsMap: JudgeProjectBallotsMapping = state.dJudgeProjectBallotsMap ? state.dJudgeProjectBallotsMap : {};\r\n      const dJudgeQueues: JudgeQueues = state.dJudgeQueues ? state.dJudgeQueues : {};\r\n      const dProjectScores: ProjectScoresMapping = state.dProjectScores ? state.dProjectScores : {};\r\n      const ballots: { [ballotID: number]: Ballot } = action.ballots;\r\n      for (const ballot of Object.values(ballots)) {\r\n        if (!dJudgeProjectBallotsMap[ballot.userID]) {\r\n          dJudgeProjectBallotsMap[ballot.userID] = {};\r\n        }\r\n        if (!dJudgeProjectBallotsMap[ballot.userID][ballot.projectID]) {\r\n          dJudgeProjectBallotsMap[ballot.userID][ballot.projectID] = [];\r\n        }\r\n\r\n        if (!dProjectScores[ballot.projectID]) {\r\n          dProjectScores[ballot.projectID] = {};\r\n        }\r\n        if (!dProjectScores[ballot.projectID][ballot.userID] && ballot.status === BallotStatus.Submitted) {\r\n          dProjectScores[ballot.projectID][ballot.userID] = [];\r\n        }\r\n\r\n        dJudgeProjectBallotsMap[ballot.userID][ballot.projectID].push(ballot);\r\n        if (ballot.status === BallotStatus.Submitted) {\r\n          dProjectScores[ballot.projectID][ballot.userID].push(ballot);\r\n        }\r\n      }\r\n\r\n      for (const judgeID of Object.keys(dJudgeProjectBallotsMap)) {\r\n        dJudgeQueues[+judgeID] = {\r\n          queuedProject: {\r\n            id: 0,\r\n            pending: false,\r\n          },\r\n          activeProjectID: 0,\r\n          otherProjectIDs: [],\r\n        };\r\n        const orderedJudgeBallots = Object.keys(dJudgeProjectBallotsMap[+judgeID]).sort((a: string, b: string) => {\r\n          const dateA = new Date(dJudgeProjectBallotsMap[+judgeID][+a][0].updatedAt).getTime();\r\n          const dateB = new Date(dJudgeProjectBallotsMap[+judgeID][+b][0].updatedAt).getTime();\r\n          return dateA - dateB;\r\n        });\r\n        for (const projectID of orderedJudgeBallots) {\r\n          const firstBallot = dJudgeProjectBallotsMap[+judgeID][+projectID][0];\r\n          if (firstBallot.status === BallotStatus.Pending) {\r\n            dJudgeQueues[+judgeID].queuedProject.id = +projectID;\r\n          } else if (firstBallot.status === BallotStatus.Started || firstBallot.status === BallotStatus.Assigned) {\r\n            dJudgeQueues[+judgeID].activeProjectID = +projectID;\r\n          } else {\r\n            dJudgeQueues[+judgeID].otherProjectIDs.push(+projectID);\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log(dProjectScores);\r\n\r\n      return {\r\n        ...action.ballots,\r\n        dJudgeProjectBallotsMap,\r\n        dJudgeQueues,\r\n        dProjectScores,\r\n      };\r\n    case UPDATE_BALLOTS:\r\n      return {\r\n        ...state,\r\n        ...action.ballots,\r\n      };\r\n    case DELETE_BALLOTS:\r\n      return action.ballotIDs.forEach((ballotID: number) => delete state[ballotID]);\r\n    case QUEUE_PROJECT:\r\n      console.log('queue', action);\r\n      const judgeQueueObject = state.dJudgeQueues[action.result.userID];\r\n      let dJudgeProjectBallotsMap1 = state.dJudgeProjectBallotsMap;\r\n      if (!dJudgeProjectBallotsMap1[action.result.userID]) {\r\n        dJudgeProjectBallotsMap1[action.result.userID] = {};\r\n      }\r\n\r\n      dJudgeProjectBallotsMap1 = {\r\n        ...state.dJudgeProjectBallotsMap,\r\n        [action.result.userID]: {\r\n          ...state.dJudgeProjectBallotsMap[action.result.userID],\r\n          [action.result.projectID]: {\r\n            ...state.dJudgeProjectBallotsMap[action.result.userID][action.result.projectID],\r\n          }\r\n        }\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        dJudgeQueues: {\r\n          ...state.dJudgeQueues,\r\n          [action.result.userID]: {\r\n            ...judgeQueueObject,\r\n            activeProjectID: judgeQueueObject ? judgeQueueObject.activeProjectID : 0,\r\n            otherProjectIDs: judgeQueueObject ? judgeQueueObject.otherProjectIDs : [],\r\n            queuedProject: {\r\n              id: action.result.projectID,\r\n              pending: true,\r\n            }\r\n          },\r\n        },\r\n        dJudgeProjectBallotsMap: dJudgeProjectBallotsMap1,\r\n      };\r\n    case QUEUED_PROJECT:\r\n      const newState = {\r\n        ...state,\r\n        ...action.result.newBallots,\r\n        dJudgeQueues: {\r\n          ...state.dJudgeQueues,\r\n          [action.result.userID]: {\r\n            ...state.dJudgeQueues[action.result.userID],\r\n            queuedProject: {\r\n              id: action.result.projectID,\r\n              pending: false,\r\n            }\r\n          },\r\n        },\r\n        dJudgeProjectBallotsMap: {\r\n          ...state.dJudgeProjectBallotsMap,\r\n          [action.result.userID]: {\r\n            ...state.dJudgeProjectBallotsMap[action.result.userID],\r\n            [action.result.projectID]: {\r\n              ...state.dJudgeProjectBallotsMap[action.result.userID][action.result.projectID],\r\n              ...action.result.newBallots,\r\n            }\r\n          }\r\n        },\r\n      }\r\n      for (const removedBallotID of action.result.removedBallotIDs) {\r\n        delete newState[removedBallotID];\r\n      }\r\n\r\n      return newState;\r\n    case GOT_PROJECT:\r\n      console.log(action.result);\r\n      const firstKey = Object.keys(action.result.newBallots)[0];\r\n      const firstBallot = action.result.newBallots[firstKey];\r\n      const userID = firstBallot.userID;\r\n      const projectID = firstBallot.projectID;\r\n      return {\r\n        ...state,\r\n        ...action.result.newBallots,\r\n        dJudgeProjectBallotsMap: {\r\n          ...state.dJudgeProjectBallotsMap,\r\n          [userID]: {\r\n            ...state.dJudgeProjectBallotsMap[userID],\r\n            [projectID]: {\r\n              ...state.dJudgeProjectBallotsMap[userID][projectID],\r\n              ...action.result.newBallots,\r\n            },\r\n          },\r\n        },\r\n        dJudgeQueues: {\r\n          ...state.dJudgeQueues,\r\n          [userID]: {\r\n            ...state.dJudgeQueues[userID],\r\n            queuedProject: undefined,\r\n            activeProjectID: firstBallot.projectID,\r\n          },\r\n        },\r\n      };\r\n    case SCORE_PROJECT:\r\n      console.log(action.result);\r\n      const firstKey2 = Object.keys(action.result.newBallots)[0];\r\n      const ballotsArray: Ballot[] = Object.values(action.result.newBallots);\r\n      const firstBallot2 = action.result.newBallots[firstKey2];\r\n      const userID2 = firstBallot2.userID;\r\n      const projectID2 = firstBallot2.projectID;\r\n      const otherProjectIDs = state.dJudgeQueues[userID2].otherProjectIDs;\r\n      if (!otherProjectIDs.includes(projectID2)) {\r\n        otherProjectIDs.push(projectID2);\r\n      }\r\n\r\n      let newDProjectScores = state.dProjectScores;\r\n\r\n      if (!state.dProjectScores[projectID2]) {\r\n        newDProjectScores[projectID2] = {};\r\n      }\r\n\r\n      if (!state.dProjectScores[projectID2][userID2]) {\r\n        newDProjectScores[projectID2][userID2] = [];\r\n      }\r\n\r\n      newDProjectScores[projectID2][userID2].push(...ballotsArray);\r\n\r\n      return {\r\n        ...state,\r\n        ...action.result.newBallots,\r\n        dJudgeProjectBallotsMap: {\r\n          ...state.dJudgeProjectBallotsMap,\r\n          [userID2]: {\r\n            ...state.dJudgeProjectBallotsMap[userID2],\r\n            [projectID2]: {\r\n              ...state.dJudgeProjectBallotsMap[userID2][projectID2],\r\n              ...action.result.newBallots,\r\n            },\r\n          },\r\n        },\r\n        dJudgeQueues: {\r\n          ...state.dJudgeQueues,\r\n          [userID2]: {\r\n            ...state.dJudgeQueues[userID2],\r\n            activeProjectID: 0,\r\n            otherProjectIDs,\r\n          },\r\n        },\r\n        dProjectScores: newDProjectScores,\r\n      };\r\n    case SKIP_PROJECT:\r\n        console.log(action.result);\r\n        const firstKey3 = Object.keys(action.result.newBallots)[0];\r\n        const ballotsArray1: Ballot[] = Object.values(action.result.newBallots);\r\n        const firstBallot3 = action.result.newBallots[firstKey3];\r\n        const userID3 = firstBallot3.userID;\r\n        const projectID3 = firstBallot3.projectID;\r\n        const otherProjectIDs1 = state.dJudgeQueues[userID3].otherProjectIDs;\r\n        if (!otherProjectIDs1.includes(projectID3)) {\r\n          otherProjectIDs1.push(projectID3);\r\n        }\r\n\r\n        let newDProjectScores1 = state.dProjectScores;\r\n\r\n        if (!state.dProjectScores[projectID3]) {\r\n          newDProjectScores1[projectID3] = {};\r\n        }\r\n\r\n        if (!state.dProjectScores[projectID3][userID3]) {\r\n          newDProjectScores1[projectID3][userID3] = [];\r\n        }\r\n\r\n        newDProjectScores1[projectID3][userID3].push(...ballotsArray1);\r\n\r\n        return {\r\n          ...state,\r\n          ...action.result.newBallots,\r\n          dJudgeProjectBallotsMap: {\r\n            ...state.dJudgeProjectBallotsMap,\r\n            [userID3]: {\r\n              ...state.dJudgeProjectBallotsMap[userID3],\r\n              [projectID3]: {\r\n                ...state.dJudgeProjectBallotsMap[userID3][projectID3],\r\n                ...action.result.newBallots,\r\n              },\r\n            },\r\n          },\r\n          dJudgeQueues: {\r\n            ...state.dJudgeQueues,\r\n            [userID3]: {\r\n              ...state.dJudgeQueues[userID3],\r\n              activeProjectID: 0,\r\n              otherProjectIDs1,\r\n            },\r\n          },\r\n          dProjectScores: newDProjectScores1,\r\n        };\r\n    case BUSY_PROJECT:\r\n      console.log(action.result.ballotsToRemove, state);\r\n      const betterState = state;\r\n      action.result.ballotsToRemove.forEach((ballotID: number) => {\r\n        delete state.dJudgeProjectBallotsMap[state[ballotID].userID][state[ballotID].projectID][ballotID];\r\n        state.dJudgeQueues[state[ballotID].userID].activeProjectID = 0;\r\n        delete betterState[ballotID];\r\n      });\r\n      return {\r\n        ...betterState,\r\n        dJudgeProjectBallotsMap: state.dJudgeProjectBallotsMap,\r\n        dJudgeQueues: state.dJudgeQueues,\r\n      };\r\n    case MISSING_PROJECT:\r\n      const ballots1: BallotObject = action.result.newBallots;\r\n      const ballotIDs = Object.keys(ballots1).map((id) => parseInt(id));\r\n      for (const ballotID of ballotIDs) {\r\n        const userID = ballots1[ballotID].userID;\r\n        const projectID = ballots1[ballotID].projectID;\r\n        state.dJudgeProjectBallotsMap[userID][projectID] = Object.values(ballots1);\r\n        state.dJudgeQueues[userID].activeProjectID = 0;\r\n        state.dJudgeQueues[userID].otherProjectIDs.push(ballotID);\r\n      }\r\n      return {\r\n        ...state,\r\n        ...ballots1,\r\n        dJudgeProjectBallotsMap: state.dJudgeProjectBallotsMap,\r\n        dJudgeQueues: state.dJudgeQueues,\r\n      }\r\n    case SKIP_PROJECT:\r\n      console.log('implement state chage');\r\n      return state;\r\n    case CLEAR_BALLOTS:\r\n      return initialBallotState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Card, ButtonGroup, Form } from 'react-bootstrap';\r\n\r\nimport Ballot, { BallotObject, BallotStatus } from '../../types/Ballot';\r\nimport Category, { CategoryState, CriteriaState, Criteria, CategoryCriteriaState } from '../../types/Category';\r\nimport Project, { ProjectState, TableGroupState, EMPTY_PROJECT } from '../../types/Project';\r\nimport User from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { fetchCategories } from '../../state/Category';\r\nimport { fetchTableGroups } from '../../state/TableGroup';\r\nimport { requestStart, requestFinish } from '../../state/Request';\r\nimport { updateBallots, startBallots, scoreBallots, clearBallots, missingBallots, busyBallots, skipBallots } from '../../state/Ballot';\r\n// @ts-ignore\r\nimport { SvgLoader, SvgProxy } from 'react-svgmt';\r\n\r\nimport './PageJudging.css';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\taccount: state.account,\r\n\t\tballots: state.ballots,\r\n\t\tcategories: state.categories,\r\n\t\ttableGroups: state.tableGroups,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfetchTableGroups: () => {\r\n\t\t\tdispatch(fetchTableGroups());\r\n\t\t},\r\n\t\tfetchCategories: () => {\r\n\t\t\tdispatch(fetchCategories());\r\n\t\t},\r\n\t\tupdateBallots: (ballots: BallotObject) => {\r\n\t\t\tdispatch(updateBallots(ballots));\r\n\t\t},\r\n\t\tstartBallots: (userID: number, projectID: number) => {\r\n\t\t\tdispatch(startBallots(userID, projectID));\r\n\t\t},\r\n\t\tclearBallots: () => {\r\n\t\t\tdispatch(clearBallots());\r\n\t\t},\r\n\t\trequestFinish: () => {\r\n\t\t\tdispatch(requestFinish());\r\n\t\t},\r\n\t\trequestStart: () => {\r\n\t\t\tdispatch(requestStart());\r\n\t\t},\r\n\t\tmissingBallots: (userID: number, projectID: number) => {\r\n\t\t\tdispatch(missingBallots(userID, projectID));\r\n\t\t},\r\n\t\tbusyBallots: (userID: number, projectID: number) => {\r\n\t\t\tdispatch(busyBallots(userID, projectID));\r\n\t\t},\r\n\t\tskipBallots: (userID: number, projectID: number) => {\r\n\t\t\tdispatch(skipBallots(userID, projectID));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nenum JudgingState {\r\n\tLoading = 0,\r\n\tFindProject = 1,\r\n\tJudgeProject = 2,\r\n\tNextProject = 3,\r\n\tNoProject = 4,\r\n}\r\n\r\ninterface PageJudgingProps {\r\n\taccount: User;\r\n\tballots: BallotObject;\r\n\tcategories: CategoryCriteriaState;\r\n\ttableGroups: TableGroupState;\r\n\tfetchTableGroups: () => void;\r\n\tfetchCategories: () => void;\r\n\tstartBallots: (userID: number, projectID: number) => void;\r\n\tclearBallots: () => void;\r\n\tupdateBallots: (ballots: BallotObject) => void;\r\n\tmissingBallots: (userID: number, projectID: number) => void;\r\n\tbusyBallots: (userID: number, projectID: number) => void;\r\n\tskipBallots: (userID: number, projectID: number) => void;\r\n}\r\n\r\ntype State = {\r\n\tcriteria: CriteriaState;\r\n\tcurrentProject: Project | undefined;\r\n\tjudgingState: JudgingState;\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'update-current-project', project: Project | undefined }\r\n\t| { type: 'update-judging-state', state: JudgingState }\r\n\t| { type: 'update-criteria', criteria: CriteriaState };\r\n\r\nconst PageJudgingComponent: React.FC<PageJudgingProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'update-criteria':\r\n\t\t\t\treturn { ...state, criteria: action.criteria };\r\n\t\t\tcase 'update-current-project':\r\n\t\t\t\treturn { ...state, currentProject: action.project };\r\n\t\t\tcase 'update-judging-state':\r\n\t\t\t\treturn { ...state, judgingState: action.state };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n\t\tcriteria: {},\r\n\t\tcurrentProject: undefined,\r\n\t\tjudgingState: JudgingState.Loading,\r\n\t}, undefined);\r\n\r\n\tconst updateBallotState = (ballots: BallotObject) => {\r\n\t\tif (Object.values(ballots).length > 0) {\r\n\t\t\tconst firstBallot: Ballot = Object.values(ballots)[0];\r\n\r\n\t\t\tif (firstBallot.status === BallotStatus.Started) {\r\n\t\t\t\tdispatch({ type: 'update-judging-state', state: JudgingState.JudgeProject });\r\n\t\t\t} else if (firstBallot.status === BallotStatus.Assigned) {\r\n\t\t\t\tdispatch({ type: 'update-judging-state', state: JudgingState.FindProject });\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdispatch({ type: 'update-current-project', project: EMPTY_PROJECT });\r\n\t\t\tdispatch({ type: 'update-judging-state', state: JudgingState.NoProject });\r\n\t\t}\r\n\t}\r\n\r\n\tconst fetchNextProject = async (userID: number) => {\r\n\t\tconst result = await Axios.post('/api/projects/nextProject', {\r\n\t\t\tuserID,\r\n\t\t});\r\n\r\n\t\tif (Object.values(result.data.ballots).length > 0) {\r\n\t\t\tconst ballots: BallotObject = result.data.ballots;\r\n\t\t\tconst projects: ProjectState = result.data.project;\r\n\t\t\tprops.updateBallots(ballots);\r\n\t\t\tdispatch({ type: 'update-current-project', project: Object.values(projects)[0] });\r\n\t\t}\r\n\r\n\t\tupdateBallotState(result.data.ballots);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tprops.fetchTableGroups();\r\n\t\tprops.fetchCategories();\r\n\t\tfetchNextProject(props.account.id!);\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tupdateBallotState(props.ballots);\r\n\t}, [props.ballots])\r\n\r\n\tconst _getSkipButtons = () => {\r\n\t\tconst reset = () => {\r\n\t\t\tdispatch({ type: 'update-judging-state', state: JudgingState.NextProject });\r\n\t\t\tdispatch({ type: 'update-current-project', project: EMPTY_PROJECT });\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div style={{ marginTop: 20 }}>\r\n\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t{/* <Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.missingBallots(props.account.id!, state.currentProject!.id!);\r\n\t\t\t\t\t\t\treset();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant='outline-danger'>\r\n\t\t\t\t\t\tMissing\r\n\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t{/* <Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.busyBallots(props.account.id!, state.currentProject!.id!);\r\n\t\t\t\t\t\t\treset();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant='outline-danger'>\r\n\t\t\t\t\t\tBusy\r\n\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.skipBallots(props.account.id!, state.currentProject!.id!);\r\n\t\t\t\t\t\t\treset();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant='outline-danger'>\r\n\t\t\t\t\t\tSkip\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst _renderFindProject = () => {\r\n\t\tconst handleImHere = () => {\r\n\t\t\tprops.startBallots(props.account.id!, state.currentProject!.id!);\r\n\t\t};\r\n\r\n\t\tif (state.currentProject && state.currentProject.id !== 0) {\r\n\t\t\tconst slug = `${props.tableGroups[state.currentProject!.tableGroupID].name.toLowerCase()}_${state.currentProject!.tableNumber}`\r\n\t\t\tconsole.log(slug + \" > path\");\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<h6>Next Project</h6>\r\n\t\t\t\t\t<h1><a href={state.currentProject!.devpostURL} style={{ color: 'black', textDecoration: 'underline' }} target='_blank'>{state.currentProject!.name}</a></h1>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\tAt <span style={{ color: props.tableGroups[state.currentProject!.tableGroupID].color }}>{props.tableGroups[state.currentProject!.tableGroupID].name}</span> {state.currentProject!.tableNumber}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{ marginTop: 20, padding: '10px 30px', fontSize: 25 }}\r\n\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\tonClick={handleImHere}>\r\n\t\t\t\t\t\tI'm Here\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{_getSkipButtons()}\r\n\t\t\t\t\t<SvgLoader width=\"350\" path={\"judging_map.svg\"}>\r\n\t\t\t\t\t\t<SvgProxy selector={\"#\" + slug + \" > path\"} fill={props.tableGroups[state.currentProject!.tableGroupID].color} />\r\n\t\t\t\t\t</SvgLoader>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst _renderJudgeProject = () => {\r\n\t\tconst _renderScoreRange = (ballotID: number, min: number, max: number) => {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'row' }}>\r\n\t\t\t\t\t\t{min}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='range'\r\n\t\t\t\t\t\t\tmin={min}\r\n\t\t\t\t\t\t\tmax={max}\r\n\t\t\t\t\t\t\tclassName='slider'\r\n\t\t\t\t\t\t\tvalue={props.ballots[ballotID].score}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tprops.updateBallots({\r\n\t\t\t\t\t\t\t\t\t[ballotID]: {\r\n\t\t\t\t\t\t\t\t\t\t...props.ballots[ballotID],\r\n\t\t\t\t\t\t\t\t\t\tscore: +event.target.value,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t{max}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<strong>{props.ballots[ballotID].score}</strong>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\tconst _renderBallots = () => {\r\n\t\t\treturn Object.values(props.ballots).map((ballot: Ballot) => {\r\n\t\t\t\tif (!ballot.criteriaID) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst category: Category = props.categories.categories[props.categories.criteria[ballot.criteriaID].categoryID];\r\n\t\t\t\tconst criteria = props.categories.criteria[ballot.criteriaID];\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey={ballot.id}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmargin: '12px auto',\r\n\t\t\t\t\t\t\tmaxWidth: \"560px\"\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<Card.Title>{criteria.name}</Card.Title>\r\n\t\t\t\t\t\t\t<Card.Subtitle>{category.name}</Card.Subtitle>\r\n\t\t\t\t\t\t\t<Card.Text style={{ textAlign: 'left', whiteSpace: 'pre-wrap' }}>{criteria.rubric}</Card.Text>\r\n\t\t\t\t\t\t\t{_renderScoreRange(ballot.id!, criteria.minScore, criteria.maxScore)}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tconst _handleScoreBallots = async () => {\r\n\t\t\tconst scoreObject = Object.values(props.ballots).reduce((dict, ballot: Ballot) => {\r\n\t\t\t\tdict[ballot.id!] = ballot.score;\r\n\t\t\t\treturn dict;\r\n\t\t\t}, {});\r\n\r\n\t\t\tconst result = await Axios.post('api/projects/scoreProject', {\r\n\t\t\t\tballots: scoreObject,\r\n\t\t\t});\r\n\r\n\t\t\tif (result.status) {\r\n\t\t\t\tprops.clearBallots();\r\n\t\t\t\tdispatch({ type: 'update-judging-state', state: JudgingState.NextProject });\r\n\t\t\t\tdispatch({ type: 'update-current-project', project: EMPTY_PROJECT });\r\n\t\t\t} else {\r\n\t\t\t\t// TODO error checking.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (state.currentProject && state.currentProject.id !== 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ textAlign: 'center', margin: '0 auto' }}>\r\n\t\t\t\t\t<h1>{state.currentProject!.name}</h1>\r\n\t\t\t\t\t<h3><a href={state.currentProject!.devpostURL} style={{ textDecoration: 'underline' }} target='_blank'>View DevPost Submission</a></h3>\r\n\t\t\t\t\t<h6><span style={{ color: props.tableGroups[state.currentProject!.tableGroupID].color }}>{props.tableGroups[state.currentProject!.tableGroupID].name}</span> {state.currentProject!.tableNumber}</h6>\r\n\t\t\t\t\t<iframe\r\n\t\t\t\t\t\tsrc={state.currentProject!.roomUrl + \"?name=[Judge] \" + props.account.name}\r\n\t\t\t\t\t\tallow=\"camera; microphone; fullscreen; speaker\"\r\n\t\t\t\t\t\twidth=\"90%\"\r\n\t\t\t\t\t\tstyle={{ height: \"75vh\" }}>\r\n\t\t\t\t\t</iframe>\r\n\t\t\t\t\t<h6>Note: If the above video call does not work, please open it in a different tab <a href={state.currentProject!.roomUrl} target=\"_blank\">here</a></h6>\r\n\t\t\t\t\t{_renderBallots()}\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\tonClick={() => _handleScoreBallots()}\r\n\t\t\t\t\t>Submit Scores</Button>\r\n\t\t\t\t\t{ _getSkipButtons()}\r\n\t\t\t\t</div >\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst _renderNextProject = () => {\r\n\t\tconst exclamations = [\r\n\t\t\t'You are out of control!',\r\n\t\t\t'Absolutely incredible!',\r\n\t\t\t'Congratulations!',\r\n\t\t\t`You're on a roll!`,\r\n\t\t\t`Keep it going!`,\r\n\t\t\t`Just a couple hundred projects left to go!`,\r\n\t\t\t`Great Job`,\r\n\t\t];\r\n\t\treturn (\r\n\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t<h3>{exclamations[Math.floor(Math.random() * exclamations.length)]}</h3>\r\n\t\t\t\t<p>Your scores have been submitted!</p>\r\n\t\t\t\t<Button onClick={() => fetchNextProject(props.account.id!)}>Next Project</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst _renderNoProject = () => {\r\n\t\treturn (\r\n\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t<p>There are currently no projects assigned to you.</p>\r\n\t\t\t\t<Button onClick={() => fetchNextProject(props.account.id!)}>Refresh</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tif (\r\n\t\tObject.values(props.tableGroups).length === 0\r\n\t\t|| !state.currentProject\r\n\t\t|| Object.values(props.categories.criteria).length === 0) {\r\n\t\treturn null;\r\n\t\t// TODO loading\r\n\t}\r\n\r\n\t// TODO replace showImHere with round properties\r\n\tlet showImHere = false;\r\n\r\n\tswitch (state.judgingState) {\r\n\t\tcase JudgingState.FindProject:\r\n\t\t\tif (!showImHere) {\r\n\t\t\t\tprops.startBallots(props.account.id!, state.currentProject!.id!);\r\n\t\t\t\treturn _renderJudgeProject();\r\n\t\t\t}\r\n\t\t\treturn _renderFindProject();\r\n\t\tcase JudgingState.JudgeProject:\r\n\t\t\treturn _renderJudgeProject();\r\n\t\tcase JudgingState.NextProject:\r\n\t\t\treturn _renderNextProject();\r\n\t\tcase JudgingState.NoProject:\r\n\t\t\treturn _renderNoProject();\r\n\t}\r\n\r\n\treturn null;\r\n};\r\n\r\nconst PageJudging = connect(mapStateToProps, mapDispatchToProps)(PageJudgingComponent);\r\n\r\nexport default PageJudging;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { adminRoute } from './PageAdmin';\r\n\r\ninterface AdminNavigationProps {\r\n  history: any;\r\n  location: any;\r\n  match: any;\r\n}\r\n\r\nconst AdminNavigation: React.FC<AdminNavigationProps> = (props) => {\r\n  const actualPage = () => {\r\n    const pageString = props.location.pathname.split('/')[2];\r\n    return pageString ? `/${pageString}` : '/';\r\n  };\r\n\r\n  const [curPage, changeCurPage] = React.useState(actualPage());\r\n\r\n  React.useEffect(() => {\r\n    changeCurPage(actualPage());\r\n  });\r\n\r\n  const navTo = (link: string) => {\r\n    props.history.push(link);\r\n    changeCurPage(actualPage());\r\n  };\r\n\r\n  return (\r\n    <Nav\r\n      variant='tabs'\r\n      activeKey={curPage}>\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={`/`}\r\n          onClick={() => navTo(`${adminRoute}`)}>\r\n          Projects\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      {/* <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={`/projects`}\r\n          onClick={() => navTo(`${adminRoute}/projects`)}>\r\n          Projects\r\n        </Nav.Link>\r\n      </Nav.Item> */}\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={`/categories`}\r\n          onClick={() => navTo(`${adminRoute}/categories`)}>\r\n          Categories\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={`/users`}\r\n          onClick={() => navTo(`${adminRoute}/users`)}>\r\n          Users\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={`/dashboard`}\r\n          onClick={() => navTo(`${adminRoute}/dashboard`)}>\r\n          Dashboard\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n    // <Menu pointing secondary>\r\n    //   <Menu.Item\r\n    //     active={props.location.pathname === '/admin'}\r\n    //     onClick={() => navTo('/admin')}>Epicenter</Menu.Item>\r\n    //   <Menu.Item\r\n    //     active={props.location.pathname.startsWith('/admin/projects')}\r\n    //     onClick={() => navTo('/admin/projects')}>Projects</Menu.Item>\r\n    //   <Menu.Item\r\n    //     active={props.location.pathname.startsWith('/admin/categories')}\r\n    //     onClick={() => navTo('/admin/categories')}>Categories</Menu.Item>\r\n    //   <Menu.Item\r\n    //     active={props.location.pathname.startsWith('/admin/users')}\r\n    //     onClick={() => navTo('/admin/users')}>Users</Menu.Item>\r\n    // </Menu>\r\n  );\r\n}\r\n\r\nexport default withRouter(AdminNavigation);","import User, { UserState, roleStringToEnum } from '../types/User';\r\nimport Axios from 'axios';\r\n\r\n// Action Types\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const FILL_USERS = 'FILL_USERS';\r\n\r\n// Action Creators\r\nexport function addUser(newUser: User) {\r\n  return { type: ADD_USER, user: newUser };\r\n}\r\n\r\nexport function deleteUser(userID: number) {\r\n  return { type: DELETE_USER, id: userID };\r\n}\r\n\r\nexport function updateUser(updatedUser: User) {\r\n  return { type: UPDATE_USER, user: updatedUser };\r\n}\r\n\r\nexport function fillUsers(users: UserState) {\r\n  return { type: FILL_USERS, users }\r\n}\r\n\r\nexport function fetchUsers() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/users/allUsers');\r\n      if (result.status) {\r\n        const payload: UserState = result.data;\r\n        const toFill: UserState = {};\r\n        for (const user of Object.values(payload)) {\r\n          toFill[user.id] = {\r\n            ...user,\r\n            role: roleStringToEnum(user.role),\r\n          };\r\n        };\r\n        dispatch(fillUsers(toFill));\r\n      } else {\r\n        throw new Error('API Error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\n// Reducer\r\nexport default function users(state: UserState = {}, action: any) {\r\n  switch (action.type) {\r\n    case ADD_USER:\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        [action.user.id]: action.user,\r\n      };\r\n    case DELETE_USER:\r\n      const newState = state;\r\n      delete newState[action.id];\r\n      return newState;\r\n    case FILL_USERS:\r\n      return action.users;\r\n    default:\r\n      return state;\r\n  }\r\n}","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Form, ButtonToolbar, ToggleButtonGroup, ToggleButton, Button, Modal } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AppState } from '../../state/Store';\r\nimport User, { UserRole, serverDataToClientUser, clientUserToServerUser } from '../../types/User';\r\nimport { updateUser } from '../../state/User';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\nimport { fetchCompanies } from '../../state/Company';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n    account: state.account,\r\n    companies: state.companies,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tupdateUser: (user: User) => {\r\n\t\t\tdispatch(updateUser(user));\r\n    },\r\n    requestFinish: () => {\r\n      dispatch(requestFinish());\r\n    },\r\n    requestStart: () => {\r\n      dispatch(requestStart());\r\n    },\r\n\t};\r\n};\r\n\r\ninterface PageAdminUsersModalProps {\r\n  account: User;\r\n  companies: string[];\r\n  modalOpen: boolean;\r\n  user: User;\r\n  closeModal: () => void;\r\n  updateUser: (user: User) => void;\r\n  requestFinish: () => void;\r\n  requestStart: () => void;\r\n}\r\n\r\ntype State = {\r\n  requesting: boolean;\r\n  user: User;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'update-user', user: User };\r\n\r\nconst PageAdminUsersModalComponent: React.FC<PageAdminUsersModalProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n      case 'update-user':\r\n        return { ...state, user: action.user };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n    requesting: false,\r\n    user: props.user,\r\n  }, undefined);\r\n\r\n  const user = props.user;\r\n\r\n  React.useEffect(() => {\r\n    dispatch({ type: 'update-user', user: props.user });\r\n  }, [user]);\r\n\r\n  const _handleSaveChanges = async () => {\r\n    try {\r\n      props.requestStart();\r\n      const result = await Axios.post('/api/users/update', {\r\n        user: clientUserToServerUser(state.user),\r\n      });\r\n      if (result.status) {\r\n        const data = result.data;\r\n        props.requestFinish();\r\n        props.closeModal();\r\n        props.updateUser(serverDataToClientUser(data));\r\n      } else {\r\n        // TODO add error checking.\r\n      }\r\n    } catch(error) {\r\n      // TODO improve error handling.\r\n      alert('Server error. Please try again.');\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const _getCompanyList = () => {\r\n    return props.companies.map((company: string) => {\r\n      return (\r\n        <option key={company}>{company}</option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const _getForm = () => {\r\n    return (\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-user',\r\n              user: {\r\n                ...state.user,\r\n                name: event.target.value,\r\n              },\r\n            })}\r\n            value={state.user.name}\r\n            type=\"text\"\r\n            placeholder=\"Name\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n        <Form.Label>Permission Level</Form.Label>\r\n          <ButtonToolbar>\r\n            <ToggleButtonGroup\r\n              name='role'\r\n              onChange={(value: any) => dispatch({\r\n                type: 'update-user',\r\n                user: {\r\n                  ...state.user,\r\n                  role: value,\r\n                }\r\n              })}\r\n              type='radio'\r\n              value={state.user.role} >\r\n              <ToggleButton\r\n                disabled={state.requesting}\r\n                value={UserRole.Pending}>\r\n                Pending\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                disabled={state.requesting}\r\n                value={UserRole.Judge}>\r\n                Judge\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                disabled={state.requesting}\r\n                value={UserRole.Admin}>\r\n                Admin\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                disabled={state.requesting}\r\n                value={UserRole.Owner}>\r\n                Owner\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </ButtonToolbar>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Company/Group Name</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-user',\r\n              user: {\r\n                ...state.user,\r\n                company: event.target.value,\r\n              },\r\n            })}\r\n            value={state.user.company}\r\n            type=\"text\"\r\n            placeholder=\"Company\">\r\n            {_getCompanyList()}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Button variant='outline-danger'>Reset Password</Button>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n\treturn (\r\n\t\t<Modal show={props.modalOpen} onHide={props.closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit User {props.user.id}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {_getForm()}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.closeModal}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={_handleSaveChanges}>\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\t);\r\n};\r\n\r\nconst PageAdminUsersModal = connect(mapStateToProps, mapDispatchToProps)(PageAdminUsersModalComponent);\r\n\r\nexport default PageAdminUsersModal;\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Badge, Card, ButtonGroup, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport User, { UserRole, clientUserToServerUser, serverDataToClientUser, getRoleString } from '../../types/User';\r\nimport { updateUser } from '../../state/User';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\nimport { AppState } from '../../state/Store';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    requesting: state.requesting,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n    requestFinish: () => {\r\n\t\t\tdispatch(requestFinish());\r\n\t\t},\r\n\t\trequestStart: () => {\r\n\t\t\tdispatch(requestStart());\r\n\t\t},\r\n\t\tupdateUser: (user: User) => {\r\n      dispatch(updateUser(user));\r\n    },\r\n\t};\r\n};\r\n\r\ninterface PageAdminUserCardProps {\r\n  requesting: boolean;\r\n  user: User;\r\n  openModal: (event: any, user: User) => void;\r\n  requestFinish: () => void;\r\n\trequestStart: () => void;\r\n\tupdateUser: (user: User) => void;\r\n}\r\n\r\nconst PageAdminUserCardComponent: React.FC<PageAdminUserCardProps> = (props) => {\r\n  const approve = async (event: any, user: User) => {\r\n    try {\r\n      event.preventDefault();\r\n      props.requestStart();\r\n      user.role = UserRole.Judge;\r\n      user.isJudging = true;\r\n      const result = await Axios.post('/api/users/update', {\r\n        user: clientUserToServerUser(user),\r\n      });\r\n      if (result.status) {\r\n        props.updateUser(serverDataToClientUser(result.data));\r\n        props.requestFinish();\r\n      } else {\r\n        // TODO add error checking.\r\n      }\r\n    } catch(error) {\r\n      // TODO improve error handling.\r\n      alert('Server error. Please try again.');\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const includeExclude = async (event: any, user: User, include: boolean) => {\r\n    try {\r\n      event.preventDefault();\r\n      props.requestStart();\r\n      user.isJudging = include;\r\n      const result = await Axios.post('/api/users/update', {\r\n        user: clientUserToServerUser(user),\r\n      });\r\n      if (result.status) {\r\n        props.updateUser(serverDataToClientUser(result.data));\r\n        props.requestFinish();\r\n      } else {\r\n        // TODO add error checking.\r\n      }\r\n    } catch(error) {\r\n      // TODO improve error handling.\r\n      alert('Server error. Please try again.');\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const getActionButtons = (user: User) => {\r\n    if (user.role === UserRole.Pending) {\r\n      return (\r\n        <Button\r\n          disabled={props.requesting}\r\n          onClick={(event: any) => approve(event, props.user)}\r\n          size='sm'\r\n          variant='outline-success'>\r\n          Approve\r\n        </Button>\r\n      );\r\n    } else if (user.isJudging) {\r\n      return (\r\n        <Button\r\n          disabled={props.requesting}\r\n          onClick={(event: any) => includeExclude(event, props.user, false)}\r\n          size='sm'\r\n          variant='outline-danger'>\r\n          Exclude From Judging\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          disabled={props.requesting}\r\n          onClick={(event: any) => includeExclude(event, props.user, true)}\r\n          size='sm'\r\n          variant='outline-success'>\r\n          Include In Judging\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n\treturn (\r\n\t\t<Card\r\n      key={props.user.id}\r\n      style={{\r\n        width: '18rem',\r\n        margin: '12px',\r\n      }}>\r\n      <Card.Body>\r\n        <Card.Title>{props.user.name}</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          {getRoleString(props.user.role)}\r\n          <Badge variant={props.user.isJudging ? 'success' : 'light'} style={{ margin: 5 }}>{props.user.isJudging ? 'Included In Judging' : 'Excluded From Judging'}</Badge>\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          {props.user.email}<br />\r\n          {props.user.company}<br />\r\n          {props.user.tags && props.user.tags.length > 0 ? <span>{props.user.tags}</span> : <span>No tags</span>}\r\n        </Card.Text>\r\n        <ButtonGroup>\r\n          <Button\r\n            disabled={props.requesting}\r\n            onClick={(event: any) => props.openModal(event, props.user)}\r\n            size='sm'\r\n            variant='primary'>\r\n            Edit\r\n          </Button>\r\n          {getActionButtons(props.user)}\r\n        </ButtonGroup>\r\n      </Card.Body>\r\n    </Card>\r\n\t);\r\n};\r\n\r\nconst PageAdminUserCard = connect(mapStateToProps, mapDispatchToProps)(PageAdminUserCardComponent);\r\n\r\nexport default PageAdminUserCard;\r\n","import Axios from \"axios\";\r\n\r\nexport const UPDATE_COMPANIES = 'UPDATE_COMPANIES';\r\n\r\nexport function updateCompanies(companies: string[]) {\r\n  return { type: UPDATE_COMPANIES, companies };\r\n}\r\n\r\nexport function fetchCompanies() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/categories/companies');\r\n      if (result.status) {\r\n        const payload: string[] = result.data;\r\n        dispatch(updateCompanies(payload));\r\n      } else {\r\n        throw new Error('API Error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport default function companies(state: string[] = [], action: any) {\r\n  switch (action.type) {\r\n    case UPDATE_COMPANIES:\r\n      return action.companies;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport User, { EMPTY_USER, UserState } from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { fetchUsers } from '../../state/User';\r\n\r\nimport PageAdminUsersModal from './PageAdminUsersModal';\r\nimport PageAdminUserCard from './PageAdminUserCard';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\nimport { fetchCompanies } from '../../state/Company';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    account: state.account,\r\n    requesting: state.requesting,\r\n    users: state.users,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    fetchCompanies: () => {\r\n      dispatch(fetchCompanies());\r\n    },\r\n    fetchUsers: () => {\r\n      dispatch(fetchUsers());\r\n    },\r\n    requestFinish: () => {\r\n      dispatch(requestFinish());\r\n    },\r\n    requestStart: () => {\r\n      dispatch(requestStart());\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageAdminUsersProps {\r\n  account: User;\r\n  requesting: boolean;\r\n  users: UserState;\r\n  fetchCompanies: () => void;\r\n  requestFinish: () => void;\r\n  requestStart: () => void;\r\n  fetchUsers: () => void;\r\n}\r\n\r\ntype State = {\r\n  newUser: User;\r\n  modalOpen: boolean;\r\n  modalUser: User;\r\n};\r\n\r\ntype Action =\r\n  | { type: 'change-newUser', newUser: Partial<User> }\r\n  | { type: 'modal-open', user: User }\r\n  | { type: 'modal-close' };\r\n\r\nconst PageAdminUsersComponent: React.FC<PageAdminUsersProps> = (props) => {\r\n  const initialState = {\r\n    newUser: EMPTY_USER,\r\n    modalOpen: false,\r\n    modalUser: EMPTY_USER,\r\n  };\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'modal-open':\r\n        return { ...state, modalOpen: true, modalUser: action.user };\r\n      case 'modal-close':\r\n        return { ...state, modalOpen: false };\r\n      case 'change-newUser':\r\n        return {\r\n          ...state,\r\n          newUser: {\r\n            ...state.newUser,\r\n            ...action.newUser,\r\n          }\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }, initialState, undefined);\r\n\r\n  React.useEffect(() => {\r\n    fetchUsers();\r\n    props.fetchCompanies();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    props.requestStart();\r\n    props.fetchUsers();\r\n    props.requestFinish();\r\n  };\r\n\r\n  const getUserCards = () => {\r\n    const openModal = (event: any, user: User) => {\r\n      event.preventDefault();\r\n      dispatch({ type: 'modal-open', user });\r\n    };\r\n\r\n    return Object.values(props.users).map((user: User) => {\r\n      return (\r\n        <PageAdminUserCard key={user.id} user={user} openModal={openModal} />\r\n      )\r\n    });\r\n  };\r\n\r\n  if (Object.keys(props.users).length > 0) {\r\n    return (\r\n      <div style={{ margin: '12px' }}>\r\n        <h1 style={{ textAlign: 'center' }}>Users</h1>\r\n        <div style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          flexWrap: 'wrap',\r\n          maxWidth: 1300,\r\n          margin: '12px auto 0',\r\n        }}>\r\n          {getUserCards()}\r\n          <PageAdminUsersModal\r\n            modalOpen={state.modalOpen}\r\n            closeModal={() => dispatch({ type: 'modal-close' })}\r\n            user={state.modalUser} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.requesting) {\r\n      return <div>Fetching users.</div>;\r\n      // TODO replace with spinner.\r\n    } else {\r\n      return <div>Error fetching users.</div>;\r\n      // TODO add try again button.\r\n    }\r\n  }\r\n};\r\n\r\nconst PageAdminUsers = connect(mapStateToProps, mapDispatchToProps)(PageAdminUsersComponent);\r\n\r\nexport default PageAdminUsers;\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fillProjects } from '../../state/Project';\r\nimport Project, { ProjectState, TableGroupState, TableGroup } from '../../types/Project';\r\nimport Papa from 'papaparse';\r\nimport { AppState } from '../../state/Store';\r\nimport Category, { CategoryState, NameToCategoryMapping, CategoryCriteriaState } from '../../types/Category';\r\nimport { updateCategory, fillCategories } from '../../state/Category';\r\nimport { clearBallots } from '../../state/Ballot';\r\nimport { string } from 'prop-types';\r\n\r\nconst requiredHeaders = [\r\n  'Submission Title',\r\n  'Submission Url',\r\n  'Plain Description',\r\n  'Built With',\r\n  'Desired Prizes',\r\n];\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    tableGroups: state.tableGroups,\r\n    categories: state.categories,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    fillCategories: (categories: CategoryState) => {\r\n      dispatch(fillCategories(categories));\r\n    },\r\n    updateCategory: (categories: CategoryState) => {\r\n      dispatch(updateCategory(categories));\r\n    },\r\n    fillProjects: (projects: ProjectState) => {\r\n      dispatch(fillProjects(projects));\r\n    },\r\n    clearBallots: () => {\r\n      dispatch(clearBallots());\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageAdminProjectsUploadModalProps {\r\n  categories: CategoryCriteriaState;\r\n  modalOpen: boolean;\r\n  tableGroups: TableGroupState;\r\n  closeModal: () => void;\r\n  clearBallots: () => void;\r\n  updateCategory: (categories: CategoryState) => void;\r\n  fillProjects: (projects: ProjectState) => void;\r\n  fillCategories: (categories: CategoryState) => void;\r\n}\r\n\r\ntype State = {\r\n  csv: string[][];\r\n  csvHeaderIndicies: { [header: string]: number };\r\n  requesting: boolean;\r\n  totalProjectsToAccountFor: number;\r\n  totalProjectsAccountedFor: number;\r\n  inputNumberExpos: number;\r\n  inputTableGroups: { [tableGroupID: number]: number };\r\n  useSelfAssign: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'use-self-assign', enabled: boolean }\r\n  | { type: 'adjust-totals', numberExpos: number }\r\n  | { type: 'adjust-counts', tableGroups: { [tableGroupID: number]: number } }\r\n  | { type: 'update-csv', csv: string[][], csvHeaderIndicies: { [header: string]: number } }\r\n  | { type: 'request-start' }\r\n  | { type: 'request-finish' };\r\n\r\nconst PageAdminProjectsUploadModalComponent: React.FC<PageAdminProjectsUploadModalProps> = (props) => {\r\n  const initialState = {\r\n    csv: [],\r\n    csvHeaderIndicies: {},\r\n    totalProjectsToAccountFor: -1,\r\n    totalProjectsAccountedFor: 0,\r\n    inputNumberExpos: 1,\r\n    inputTableGroups: {},\r\n    requesting: false,\r\n    useSelfAssign: false,\r\n  }\r\n\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'use-self-assign':\r\n        return {\r\n          ...state,\r\n          useSelfAssign: action.enabled,\r\n        };\r\n      case 'adjust-totals':\r\n        return {\r\n          ...state,\r\n          inputNumberExpos: action.numberExpos > 0 ? action.numberExpos : 1,\r\n          totalProjectsToAccountFor: Math.ceil(state.csv.length / action.numberExpos)\r\n        };\r\n      case 'adjust-counts':\r\n        const inputTableGroups = {\r\n          ...state.inputTableGroups,\r\n          ...action.tableGroups,\r\n        };\r\n        return {\r\n          ...state,\r\n          inputTableGroups,\r\n          totalProjectsAccountedFor: Object.values(inputTableGroups).reduce((counter, curVal) => counter + curVal, 0),\r\n        };\r\n      case 'update-csv':\r\n        return {\r\n          ...state,\r\n          csv: action.csv,\r\n          csvHeaderIndicies: action.csvHeaderIndicies,\r\n          totalProjectsToAccountFor: action.csv.length\r\n        };\r\n      case 'request-start':\r\n        return { ...state, requesting: true };\r\n      case 'request-finish':\r\n        return { ...state, requesting: false };\r\n      default:\r\n        return state;\r\n    }\r\n  }, initialState, undefined);\r\n\r\n  const effectInputTableGroups = props.tableGroups;\r\n\r\n  React.useEffect(() => {\r\n    const initialTableGroups: { [tableGroupID: number]: number } = {};\r\n    for (const tableGroup of Object.values(props.tableGroups)) {\r\n      initialTableGroups[tableGroup.id!] = 10;\r\n    }\r\n    dispatch({ type: 'adjust-counts', tableGroups: initialTableGroups });\r\n  }, [effectInputTableGroups]);\r\n\r\n  React.useEffect(() => {\r\n    const initialFetch = async () => {\r\n      // Fetch categories into state, just in case.\r\n      const fetchCategoriesResult = await Axios.get('/api/categories/allCategoriesCriteria');\r\n      if (fetchCategoriesResult.status) {\r\n        const payload: CategoryState = fetchCategoriesResult.data;\r\n        props.fillCategories(payload);\r\n      } else {\r\n        // TODO error checking\r\n      }\r\n    };\r\n\r\n    initialFetch();\r\n  }, []);\r\n\r\n  const handleUpload = async () => {\r\n    dispatch({ type: 'request-start' });\r\n\r\n    props.fillProjects({});\r\n\r\n    // Generate a set of all categories for optional prizes.\r\n    const generatedCategories = new Set<string>();\r\n    for (const row of state.csv) {\r\n      const categoriesString = row[state.csvHeaderIndicies['Desired Prizes']];\r\n      if (categoriesString.length > 0) {\r\n        const splitCategories = categoriesString.split(',');\r\n        for (const category of splitCategories) {\r\n          generatedCategories.add(category.trim());\r\n        }\r\n      }\r\n    }\r\n\r\n    // Check if the any of the generated categories is a preexisting nongenerated category.\r\n    const existingCategoriesArray = Object.values(props.categories.categories).reduce((array: string[], category: Category) => {\r\n      if (!category.generated) {\r\n        array.push(category.name);\r\n      }\r\n      return array;\r\n    }, []);\r\n    for (const generatedCategory of Array.from(generatedCategories)) {\r\n      for (const existingCategory of existingCategoriesArray) {\r\n        if (existingCategory === generatedCategory) {\r\n          generatedCategories.delete(generatedCategory);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Delete all generated categories.\r\n    const deleteGeneratedCategoriesResult = await Axios.delete('/api/categories/deleteGenerated');\r\n    if (!deleteGeneratedCategoriesResult) {\r\n      return;\r\n      // TODO throw error couldn't reset generated categories.\r\n    }\r\n\r\n    // Create new generated categories.\r\n    const categoriesToSend: Category[] = Array.from(generatedCategories).map((categoryName) => {\r\n      return {\r\n        name: categoryName,\r\n        isDefault: false,\r\n        generated: true,\r\n        isHidden: false,\r\n        description: `Sponsor prize generated when projects were uploaded. Do not remove. - ${categoryName}`,\r\n        company: '',\r\n        criteria: [],\r\n      };\r\n    });\r\n    const addGeneratedCategoriesResult = await Axios.post('/api/categories/update', {\r\n      categories: categoriesToSend,\r\n    });\r\n    if (!addGeneratedCategoriesResult.status) {\r\n      return;\r\n      // TODO throw error couldn't generate new categories.\r\n    }\r\n    const payload: CategoryState = addGeneratedCategoriesResult.data;\r\n    const onlyNonGenerated: CategoryState = Object.values(props.categories.categories).reduce((dict: CategoryState, currentCategory: Category) => {\r\n      if (!currentCategory.generated) {\r\n        dict[currentCategory.id!] = currentCategory;\r\n      }\r\n      return dict;\r\n    }, {});\r\n    console.log('nongenerated', onlyNonGenerated, payload);\r\n    const newCategories = {\r\n      ...onlyNonGenerated,\r\n      ...payload,\r\n    };\r\n    props.fillCategories({\r\n      ...onlyNonGenerated,\r\n      ...payload,\r\n    });\r\n\r\n    // Create category name to category mapping\r\n    const nameToCategoryMapping: NameToCategoryMapping = Object.values(newCategories).reduce((dict: NameToCategoryMapping, currentCategory: Category) => {\r\n      dict[currentCategory.name] = currentCategory;\r\n      return dict;\r\n    }, {});\r\n    const defaultCategoryIDs: number[] = Object.values(newCategories).reduce((array: number[], category: Category) => {\r\n      if (category.isDefault) {\r\n        array.push(category.id!);\r\n      }\r\n      return array;\r\n    }, []);\r\n\r\n    const projectsToSend: Project[] = [];\r\n    const tableGroups: TableGroup[] = Object.values(props.tableGroups);\r\n    const tableGroupNameMapping = tableGroups.map((tableGroup) => tableGroup.name);\r\n    const allocatedTables: { [table: string]: number } = {};\r\n\r\n    if (state.useSelfAssign) {\r\n      for (let i = 0; i < state.csv.length; i++) {\r\n        const csvRow = state.csv[i];\r\n        const tableNumber = csvRow[state.csvHeaderIndicies['Table Number']];\r\n        if (tableNumber) {\r\n          const tableParts = tableNumber.split(' ');\r\n          if (tableParts.length !== 3) {\r\n            throw new Error('Need 3 parts: expo, group, number');\r\n          }\r\n\r\n          if (allocatedTables[tableNumber]) {\r\n            throw new Error('Duplicate table');\r\n          }\r\n\r\n          if (!tableGroupNameMapping.includes(tableParts[1])) {\r\n            throw new Error('Invalid table group name');\r\n          }\r\n\r\n          allocatedTables[tableNumber] = i;\r\n        }\r\n      }\r\n    }\r\n\r\n    const allocatedRows = Object.values(allocatedTables);\r\n    let csvRowNumber = 0;\r\n\r\n    // Pass 2 allocate rest.\r\n    for (let expoNumber = 1; expoNumber <= state.inputNumberExpos; expoNumber++) {\r\n      for (const tableGroup of tableGroups) {\r\n        for (let tableNumber = 1; tableNumber <= state.inputTableGroups[tableGroup.id!]; tableNumber++) {\r\n          const finalTableGroupName = `${expoNumber} ${tableGroup.name} ${tableNumber}`;\r\n          if (allocatedTables[finalTableGroupName] === undefined) {\r\n            while (allocatedRows.includes(csvRowNumber)) {\r\n              csvRowNumber++;\r\n            }\r\n\r\n            let csvRow = state.csv[csvRowNumber];\r\n            // console.log(csvRow);\r\n            if (csvRow) {\r\n              allocatedTables[finalTableGroupName] = csvRowNumber;\r\n              allocatedRows.push(csvRowNumber);\r\n              csvRowNumber++;\r\n            }\r\n          } else {\r\n            console.log('thegame', finalTableGroupName);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(allocatedTables, allocatedRows.sort((a: number, b: number) => a - b));\r\n    const tableGroupNameToObject: { [name: string]: TableGroup } = Object.values(props.tableGroups).reduce((dict, tableGroup: TableGroup) => {\r\n      dict[tableGroup.name] = tableGroup;\r\n      return dict;\r\n    }, {});\r\n\r\n    for (const tableKey of Object.keys(allocatedTables)) {\r\n      const csvRow = state.csv[allocatedTables[tableKey]];\r\n      const parts = tableKey.split(' ');\r\n      const devpostDesiredCategories: number[] = csvRow[state.csvHeaderIndicies['Desired Prizes']].split(',').reduce((array: number[], categoryName: string) => {\r\n        categoryName = categoryName.trim();\r\n        if (categoryName) {\r\n          array.push(nameToCategoryMapping[categoryName.trim()].id!);\r\n        }\r\n        return array;\r\n      }, []);\r\n      projectsToSend.push({\r\n        name: csvRow[state.csvHeaderIndicies['Submission Title']],\r\n        devpostURL: csvRow[state.csvHeaderIndicies['Submission Url']],\r\n        expoNumber: parseInt(parts[0]),\r\n        roundNumber: 1,\r\n        tableGroupID: tableGroupNameToObject[parts[1]].id!,\r\n        tableNumber: parseInt(parts[2]),\r\n        roomUrl: '',\r\n        categoryIDs: devpostDesiredCategories.concat(defaultCategoryIDs),\r\n        tags: [],\r\n      });\r\n    }\r\n\r\n    console.log(projectsToSend);\r\n\r\n    const batchUploadResult = await Axios.post('/api/projects/upload', {\r\n      projects: projectsToSend,\r\n    });\r\n    if (batchUploadResult.status) {\r\n      const data = batchUploadResult.data;\r\n      // console.log(data);\r\n      props.fillProjects(data);\r\n      props.clearBallots();\r\n      props.closeModal();\r\n      dispatch({ type: 'request-finish' });\r\n    }\r\n  };\r\n\r\n  const getFileUploadForm = () => {\r\n    const throwError = (message: string) => {\r\n      dispatch({ type: 'update-csv', csv: [], csvHeaderIndicies: {} });\r\n      // console.log(message);\r\n      // TODO throw real error.\r\n      return;\r\n    };\r\n\r\n    const parseResult = (result: Papa.ParseResult) => {\r\n      const csvData: string[][] = result.data;\r\n      if (csvData.length < 1) {\r\n        return throwError('Empty');\r\n      }\r\n      if (csvData.length === 1) {\r\n        return throwError('No content');\r\n      }\r\n      const csvHeaders = csvData[0];\r\n      const csvHeaderIndicies: { [header: string]: number } = {};\r\n      for (const header of requiredHeaders) {\r\n        const headerIndex = csvHeaders.indexOf(header);\r\n        if (headerIndex === -1) {\r\n          return throwError('Required headers missing');\r\n        }\r\n        csvHeaderIndicies[header] = headerIndex;\r\n      }\r\n      csvHeaderIndicies['Table Number'] = csvHeaders.indexOf('Table Number');\r\n      csvData.splice(0, 1)\r\n      dispatch({ type: 'update-csv', csv: csvData, csvHeaderIndicies });\r\n    };\r\n\r\n    const handleFileUpload = (event: any) => {\r\n      const target = event.target;\r\n      const fileList: FileList = target.files;\r\n      if (fileList.length !== 1) {\r\n        return throwError('No file or too many files.');\r\n      }\r\n      const file = fileList[0];\r\n      if (!file.name.endsWith('.csv')) {\r\n        return throwError('Not CSV');\r\n      }\r\n      Papa.parse(file, {\r\n        complete: parseResult,\r\n        skipEmptyLines: true,\r\n      });\r\n    };\r\n\r\n    return (\r\n      <Form.Group>\r\n        <Form.Label>Devpost CSV</Form.Label>\r\n        <Form.Control\r\n          disabled={state.requesting}\r\n          onChange={handleFileUpload}\r\n          type='file' />\r\n        <Form.Text className=\"text-muted\">\r\n          Please download the CSV containing all projects from Devpost and upload it here.\r\n        </Form.Text>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  const getPropertiesForm = () => {\r\n    if (state.csv.length > 0) {\r\n      return (\r\n        <div>\r\n          <Form.Group>\r\n            <Form.Label>Number of Expos</Form.Label>\r\n            <Form.Control\r\n              disabled={state.requesting}\r\n              name='numberExpos'\r\n              onChange={(event: any) => {\r\n                dispatch({ type: 'adjust-totals', numberExpos: event.target.value })\r\n              }}\r\n              type='number'\r\n              value={\"\" + state.inputNumberExpos} />\r\n            <Form.Text className=\"text-muted\">\r\n              How many expos will there be at this event?\r\n            </Form.Text>\r\n          </Form.Group>\r\n          {Object.values(props.tableGroups).map((tableGroup: TableGroup) => {\r\n            return (\r\n              <Form.Group key={tableGroup.id}>\r\n                <Form.Label># <strong>{tableGroup.name}</strong> Tables</Form.Label>\r\n                <Form.Control\r\n                  disabled={state.requesting}\r\n                  onChange={(event: any) => {\r\n                    dispatch({\r\n                      type: 'adjust-counts', tableGroups: {\r\n                        [tableGroup.id!]: +event.target.value\r\n                      }\r\n                    });\r\n                  }}\r\n                  type='number'\r\n                  value={\"\" + state.inputTableGroups[tableGroup.id!]} />\r\n                <Form.Text className=\"text-muted\">\r\n                  How many tables are available in the {tableGroup.name} group in each expo?\r\n                  </Form.Text>\r\n              </Form.Group>\r\n            )\r\n          })}\r\n          <p>Projects Accounted For: {state.totalProjectsAccountedFor} / {state.totalProjectsToAccountFor}</p>\r\n          <Form.Group>\r\n            <Form.Check\r\n              disabled={state.requesting}\r\n              onChange={(event: any) => dispatch({\r\n                type: 'use-self-assign',\r\n                enabled: event.target.value === 'on',\r\n              })}\r\n              type=\"checkbox\"\r\n              label=\"Use Table Self-Assign\" />\r\n            <Form.Text className=\"text-muted\">\r\n              Check if you want to use the \"Table Number\" column in the Devpost submission.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch({ type: 'update-csv', csv: [], csvHeaderIndicies: {} });\r\n    props.closeModal();\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.modalOpen} onHide={closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Upload Projects</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          {getFileUploadForm()}\r\n          {getPropertiesForm()}\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={closeModal}\r\n          variant=\"secondary\">\r\n          Close & Discard\r\n        </Button>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={handleUpload}\r\n          variant=\"primary\">\r\n          Upload Projects\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst PageAdminProjectsUploadModal = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PageAdminProjectsUploadModalComponent);\r\n\r\nexport default PageAdminProjectsUploadModal;\r\n\r\n","import React from 'react';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\n\r\nimport { TableGroup } from '../../types/Project';\r\n\r\ninterface PageAdminProjectsManageTableGroupsModalGroupRowProps {\r\n  tableGroup: TableGroup;\r\n  requesting: boolean;\r\n  updateTableGroup: (tableGroup: TableGroup) => void;\r\n  deleteTableGroup: (tableGroupID: number) => void;\r\n}\r\n\r\nconst PageAdminProjectsManageTableGroupsModalGroupRow: React.FC<PageAdminProjectsManageTableGroupsModalGroupRowProps> = (props) => {\r\n  const handleChange = (event: any) => {\r\n    const target = event.target;\r\n    props.updateTableGroup({\r\n      ...props.tableGroup,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n\treturn (\r\n\t\t<div style={{ marginBottom: 12 }}>\r\n      <hr />\r\n      <Form.Row>\r\n        <Form.Group as={Col} md=\"7\">\r\n          <Form.Label>Table Group Name</Form.Label>\r\n          <Form.Control\r\n            disabled={props.requesting}\r\n            name='name'\r\n            onChange={handleChange}\r\n            value={props.tableGroup.name}\r\n            placeholder='Name' />\r\n        </Form.Group>\r\n        <Form.Group as={Col} md=\"2\">\r\n          <Form.Label>Shortcode</Form.Label>\r\n          <Form.Control\r\n            disabled={props.requesting}\r\n            name='shortcode'\r\n            onChange={handleChange}\r\n            value={props.tableGroup.shortcode}\r\n            placeholder='Code' />\r\n        </Form.Group>\r\n        <Form.Group as={Col} md=\"3\">\r\n          <Form.Label>Color</Form.Label>\r\n          <Form.Control\r\n            disabled={props.requesting}\r\n            name='color'\r\n            onChange={handleChange}\r\n            placeholder='#000000'\r\n\r\n            style={{\r\n              backgroundColor: /^#[0-9A-F]{6}$/i.test(props.tableGroup.color) ? props.tableGroup.color : '',\r\n              color: /^#[0-9A-F]{6}$/i.test(props.tableGroup.color) ? '#FFFFFF' : '#000000',\r\n            }}\r\n            value={props.tableGroup.color} />\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Button\r\n        disabled={props.requesting}\r\n        size='sm'\r\n        variant='outline-danger'\r\n        onClick={() => props.deleteTableGroup(props.tableGroup.id!)}>\r\n        Delete\r\n      </Button>\r\n    </div>\r\n\t);\r\n};\r\n\r\nexport default PageAdminProjectsManageTableGroupsModalGroupRow;\r\n\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { TableGroupState, TableGroup, EMPTY_TABLE_GROUP } from '../../types/Project';\r\nimport { AppState } from '../../state/Store';\r\n\r\nimport PageAdminProjectsManageTableGroupsModalGroupRow from './PageAdminProjectsManageTableGroupsModalGroupRow';\r\nimport { fillTableGroups } from '../../state/TableGroup';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    tableGroups: state.tableGroups,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfillTableGroups: (tableGroups: TableGroupState) => {\r\n\t\t\tdispatch(fillTableGroups(tableGroups));\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface PageAdminProjectsManageTableGroupsModalProps {\r\n  modalOpen: boolean;\r\n  tableGroups: TableGroupState;\r\n  closeModal: () => void;\r\n\tfillTableGroups: (tableGroups: TableGroupState) => void;\r\n}\r\n\r\ntype State = {\r\n  currentNewID: number;\r\n  tableGroups: TableGroupState;\r\n  requesting: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'increase-new-id' }\r\n  | { type: 'update-table-group', tableGroups: TableGroupState }\r\n\t| { type: 'request-start'}\r\n  | { type: 'request-finish'};\r\n\r\nconst PageAdminProjectsManageTableGroupsModalComponent: React.FC<PageAdminProjectsManageTableGroupsModalProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n      case 'increase-new-id':\r\n        return { ...state, currentNewID: state.currentNewID - 1 }\r\n      case 'update-table-group':\r\n        return { ...state, tableGroups: action.tableGroups };\r\n\t\t\tcase 'request-start':\r\n\t\t\t\treturn { ...state, requesting: true };\r\n\t\t\tcase 'request-finish':\r\n        return { ...state, requesting: false };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n    currentNewID: -1,\r\n    tableGroups: {},\r\n    requesting: false,\r\n  }, undefined);\r\n\r\n  const tableGroupsEffect = props.tableGroups;\r\n\r\n  React.useEffect(() => {\r\n    dispatch({ type: 'update-table-group', tableGroups: props.tableGroups });\r\n  }, [tableGroupsEffect]);\r\n\r\n  const handleSaveChanges = async () => {\r\n    try {\r\n      dispatch({ type: 'request-start' });\r\n      const result = await Axios.post('/api/tableGroups/update', {\r\n        tableGroups: Object.values(state.tableGroups),\r\n      });\r\n      if (result.status) {\r\n        const data = result.data;\r\n        props.fillTableGroups(data);\r\n        props.closeModal();\r\n        dispatch({ type: 'request-finish' });\r\n      } else {\r\n        // TODO add error checking.\r\n      }\r\n    } catch(error) {\r\n      // TODO improve error handling.\r\n      alert('Server error. Please try again.');\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const getForm = () => {\r\n    const updateTableGroup = (tableGroup: TableGroup) => {\r\n      dispatch({\r\n        type: 'update-table-group',\r\n        tableGroups: {\r\n          ...state.tableGroups,\r\n          [tableGroup.id!]: tableGroup,\r\n        },\r\n      });\r\n    };\r\n    const deleteTableGroup = (tableGroupID: number) => {\r\n      let {[tableGroupID]: omit, ...rest} = state.tableGroups;\r\n      dispatch({\r\n        type: 'update-table-group',\r\n        tableGroups: rest,\r\n      });\r\n    };\r\n\r\n    if (Object.values(state.tableGroups).length > 0) {\r\n      return Object.values(state.tableGroups).map((tableGroup: TableGroup) => {\r\n        return <PageAdminProjectsManageTableGroupsModalGroupRow\r\n          key={tableGroup.id}\r\n          tableGroup={tableGroup}\r\n          requesting={state.requesting}\r\n          updateTableGroup={updateTableGroup}\r\n          deleteTableGroup={deleteTableGroup} />\r\n      });\r\n    }\r\n    return <div>No Table Groups</div>;\r\n  };\r\n\r\n  const handleNewTableGroup = () => {\r\n    const newGroup = {\r\n      ...EMPTY_TABLE_GROUP,\r\n      id: state.currentNewID,\r\n    };\r\n    dispatch({ type: 'increase-new-id' });\r\n    dispatch({\r\n      type: 'update-table-group',\r\n      tableGroups: {\r\n        ...state.tableGroups,\r\n        [newGroup.id]: newGroup,\r\n      }\r\n    });\r\n  };\r\n\r\n\treturn (\r\n\t\t<Modal show={props.modalOpen} onHide={props.closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Manage Table Groups</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>Table groups are how your expo will be organized. Table groups can be a color, some fancy name, or a room number. You must have at least one table group in order to upload projects. </p>\r\n        <Form>\r\n          {getForm()}\r\n        </Form>\r\n        <Button\r\n          disabled={state.requesting}\r\n          variant='outline-primary'\r\n          onClick={handleNewTableGroup}>\r\n          New Table Group\r\n        </Button>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={props.closeModal}\r\n          variant=\"secondary\">\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={handleSaveChanges}\r\n          variant=\"primary\">\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\t);\r\n};\r\n\r\nconst PageAdminProjectsManageTableGroupsModal = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PageAdminProjectsManageTableGroupsModalComponent);\r\n\r\nexport default PageAdminProjectsManageTableGroupsModal;\r\n\r\n","import React, { ReactElement } from 'react';\r\nimport { InputGroup, Card, FormControl, Accordion } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PageAdminProjectsEpicenterProjectDot from './PageAdminProjectsEpicenterProjectDot';\r\nimport PageAdminProjectsEpicenterEmptyDot from './PageAdminProjectsEpicenterEmptyDot';\r\nimport Project, { ProjectState, TableGroupState, ProjectWithHealth } from '../../types/Project';\r\nimport User from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport Ballot, { BallotState, BallotStatus } from '../../types/Ballot';\r\nimport Category, { CategoryState, CategoryCriteriaState } from '../../types/Category';\r\nimport { queueProjectEmit, subscribeQueuedProject, subscribeQueueProject, queueProject, subscribeGetProject, subscribeScoreProject, unsubscribeAll, subscribeSkipProject, subscribeMissingProject, subscribeBusyProject } from '../../state/Ballot';\r\nimport { requestStart, requestFinish } from '../../state/Request';\r\nimport { UserState } from '../../types/User';\r\nimport { Button } from 'react-bootstrap';\r\nimport Axios from \"axios\";\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    account: state.account,\r\n    ballots: state.ballots,\r\n    categories: state.categories,\r\n    tableGroups: state.tableGroups,\r\n    projects: state.projects,\r\n    users: state.users,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    queueProject: (projectID: number, userID: number) => {\r\n      dispatch(queueProject(projectID, userID));\r\n    },\r\n    queueProjectEmit: (projectID: number, userID: number) => {\r\n      dispatch(queueProjectEmit(projectID, userID));\r\n    },\r\n    subscribeQueueProject: () => {\r\n      dispatch(subscribeQueueProject());\r\n    },\r\n    subscribeQueuedProject: () => {\r\n      dispatch(subscribeQueuedProject());\r\n    },\r\n    subscribeGotProject: () => {\r\n      dispatch(subscribeGetProject());\r\n    },\r\n    subscribeScoreProject: () => {\r\n      dispatch(subscribeScoreProject());\r\n    },\r\n    subscribeSkipProject: () => {\r\n      dispatch(subscribeSkipProject());\r\n    },\r\n    subscribeMissingProject: () => {\r\n      dispatch(subscribeMissingProject());\r\n    },\r\n    subscribeBusyProject: () => {\r\n      dispatch(subscribeBusyProject());\r\n    },\r\n    unsubscribeAll: () => {\r\n      dispatch(unsubscribeAll());\r\n    },\r\n    requestFinish: () => {\r\n      dispatch(requestFinish());\r\n    },\r\n    requestStart: () => {\r\n      dispatch(requestStart());\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageAdminProjectsEpicenterProps {\r\n  account: User;\r\n  ballots: BallotState;\r\n  categories: CategoryCriteriaState;\r\n  projects: ProjectState;\r\n  tableGroups: TableGroupState;\r\n  users: UserState;\r\n  queueProject: (projectID: number, userID: number) => void;\r\n  queueProjectEmit: (projectID: number, userID: number) => void;\r\n  subscribeQueueProject: () => void;\r\n  subscribeQueuedProject: () => void;\r\n  subscribeGotProject: () => void;\r\n  subscribeScoreProject: () => void;\r\n  subscribeMissingProject: () => void;\r\n  subscribeBusyProject: () => void;\r\n  subscribeSkipProject: () => void;\r\n  unsubscribeAll: () => void;\r\n  requestFinish: () => void;\r\n  requestStart: () => void;\r\n}\r\n\r\nenum SortType {\r\n  Location,\r\n  AverageScore,\r\n  ProjectHealth,\r\n  TimesJudged,\r\n}\r\n\r\ntype State = {\r\n  selectedProject: string;\r\n  judgeSelectedProject: string;\r\n  currentExpo: number;\r\n  currentRound: number;\r\n  powerGoodness: number;\r\n  powerVariance: number;\r\n  powerSkip: number;\r\n  projects: { [projectID: number]: ProjectWithHealth };\r\n  sortBy: SortType;\r\n  filterBy: number | undefined;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'change-current-expo', currentExpo: number }\r\n  | { type: 'change-current-round', currentRound: number }\r\n  | { type: 'change-selected-project', projectID: string }\r\n  | { type: 'change-judge-selected-project', projectID: string }\r\n  | { type: 'change-parameters', goodness: number, variance: number, skip: number }\r\n  | { type: 'change-sort-by', sortBy: SortType }\r\n  | { type: 'change-filter-by', filterBy: number | undefined }\r\n  | { type: 'update-projects', projects: { [projectID: number]: ProjectWithHealth } };\r\n\r\nconst PageAdminProjectsEpicenterComponent: React.FC<PageAdminProjectsEpicenterProps> = (props) => {\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'change-current-expo':\r\n        return { ...state, currentExpo: action.currentExpo > 0 ? action.currentExpo : 1 };\r\n      case 'change-current-round':\r\n        return { ...state, currentRound: action.currentRound > 0 ? action.currentRound : 1 };\r\n      case 'change-selected-project':\r\n        return { ...state, selectedProject: action.projectID, judgeSelectedProject: '' };\r\n      case 'change-judge-selected-project':\r\n        return { ...state, selectedProject: '', judgeSelectedProject: action.projectID };\r\n      case 'change-sort-by':\r\n        return { ...state, sortBy: action.sortBy };\r\n      case 'change-filter-by':\r\n        return { ...state, filterBy: action.filterBy };\r\n      case 'update-projects':\r\n        return { ...state, projects: action.projects };\r\n      case 'change-parameters':\r\n        return {\r\n          ...state,\r\n          powerGoodness: action.goodness > 0 ? action.goodness : 0,\r\n          powerVariance: action.variance > 0 ? action.variance : 0,\r\n          powerSkip: action.skip > 0 ? action.skip : 0,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }, {\r\n    currentExpo: 1,\r\n    currentRound: 1,\r\n    selectedProject: '',\r\n    judgeSelectedProject: '',\r\n    powerGoodness: 0.5,\r\n    powerSkip: 0.5,\r\n    powerVariance: 0.5,\r\n    projects: {},\r\n    sortBy: SortType.Location,\r\n    filterBy: undefined,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const projectsWithHealth: { [projectID: number]: ProjectWithHealth } = {};\r\n    for (const projectID of Object.keys(props.projects)) {\r\n      projectsWithHealth[+projectID] = {\r\n        ...props.projects[+projectID],\r\n        health: calculateProjectHealth(props.projects[+projectID]),\r\n      }\r\n    }\r\n    dispatch({ type: 'update-projects', projects: projectsWithHealth });\r\n  }, [props.projects, state.powerGoodness, state.powerSkip, state.powerVariance, props.ballots]);\r\n\r\n  const calculateProjectHealth = (project: Project) => {\r\n    let totalHealth = 0;\r\n\r\n    /* \r\n    // This block checks the number of times a project has been judged for the default category\r\n\r\n    // If project has already been judged\r\n    if (props.ballots.dProjectScores[project.id!] && Object.values(props.ballots.dProjectScores[project.id!]).length > 0) {\r\n      const categoryScoreArrays: { [userID: number]: number } = {};\r\n      const allUserBallots = Object.values(props.ballots.dProjectScores[project.id!]);\r\n      // The default prize category\r\n      let defaultCategoryID = Object.values(props.categories.categories).filter((category: Category) => {\r\n        return category.isDefault\r\n      })[0].id;\r\n      console.log('default', defaultCategoryID);\r\n      // Iterate over all ballots for project\r\n      for (const userBallots of allUserBallots) {\r\n        // Get the ballot associated with that judgement\r\n        for (const ballot of userBallots) {\r\n          // If the judge was for the default category (i.e. overall hackgt or how all judging is in healthtech)\r\n          if (props.categories.criteria[ballot.criteriaID].categoryID === defaultCategoryID) {\r\n            // If the judge hasn't been put into the map\r\n            if (!categoryScoreArrays[ballot.userID]) {\r\n              categoryScoreArrays[ballot.userID] = 0;\r\n            }\r\n            // Add the judge's id -> score into the map\r\n            categoryScoreArrays[ballot.userID] += ballot.score;\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log('calcProjectHe', categoryScoreArrays);\r\n      // Add the number of times the project has been judged\r\n      totalHealth += Object.values(categoryScoreArrays).length;\r\n    }\r\n    */\r\n\r\n    for (const judgeQueue of Object.values(props.ballots.dJudgeQueues)) {\r\n      // If project is in the queue increase the health by 1\r\n      if (judgeQueue.queuedProject && judgeQueue.queuedProject.id === project.id!) {\r\n        totalHealth++;\r\n      }\r\n\r\n      // If project is currently being judged increase health by 2\r\n      if (judgeQueue.activeProjectID === project.id!) {\r\n        totalHealth += 2;\r\n      }\r\n\r\n      // If judge already judged this project\r\n      if (judgeQueue.otherProjectIDs.includes(project.id!)) {\r\n        totalHealth += 2;\r\n      }\r\n    }\r\n\r\n    return totalHealth;\r\n  }\r\n\r\n  const autoAssign = () => {\r\n    // get users who are judges\r\n    const userIDs = Object.keys(props.users).map((value) => parseInt(value)).reduce((judgingUsers: number[], userID) => {\r\n      // check that user ID is an approved judge\r\n      if (props.users[userID].isJudging!) {\r\n        // check that judge's user ID is not in judge queues\r\n        // or does not have a queued project\r\n        // or has a queued project with ID = 0\r\n        if (!props.ballots.dJudgeQueues[userID]\r\n          || props.ballots.dJudgeQueues[userID].queuedProject === undefined\r\n          || props.ballots.dJudgeQueues[userID].queuedProject.id === 0) {\r\n          judgingUsers.push(userID);\r\n        }\r\n      }\r\n      return judgingUsers;\r\n    }, []);\r\n    console.log(\"User IDS\", userIDs);\r\n    // check that there is at least one judge that we can assign the project to\r\n    if (userIDs.length > 0) {\r\n      // pick a random judge\r\n      const randomUserID = userIDs[Math.floor(Math.random() * userIDs.length)];\r\n      console.log(\"Random judge\", randomUserID);\r\n      let judgeCompany = props.users[randomUserID].company!\r\n      // get projects that can be assigned to a judge\r\n      const canAssignProjects = Object.values(state.projects).filter((project: Project) => {\r\n        // check that project is in current expo & round\r\n        if (project.expoNumber != state.currentExpo || project.roundNumber !== state.currentRound) {\r\n          return false;\r\n        }\r\n\r\n        // check that project is not currently assigned to the judge or in the judge's queue\r\n        if (props.ballots.dJudgeQueues[randomUserID]) {\r\n          if (project.id! === props.ballots.dJudgeQueues[randomUserID].activeProjectID\r\n            || props.ballots.dJudgeQueues[randomUserID].otherProjectIDs.includes(project.id!)) {\r\n            return false;\r\n          }\r\n        }\r\n        // map projects to companies\r\n        const projectCompanyList = project.categoryIDs.map((categoryID: number) => {\r\n          return props.categories.categories[categoryID].company;\r\n        });\r\n        // return projects that match the judge's company\r\n        return projectCompanyList.includes(props.users[randomUserID].company!);\r\n        // sort projects by health\r\n      }).sort((a: ProjectWithHealth, b: ProjectWithHealth) => {\r\n        // return a.health - b.health;\r\n        return calculateProjectCompanyHealth(a, judgeCompany) - calculateProjectCompanyHealth(b, judgeCompany)\r\n      });\r\n      console.log(\"Projects to be assigned\", canAssignProjects);\r\n\r\n      if (canAssignProjects.length > 0) {\r\n        // get lowest health value\r\n        // const lowestHealth = canAssignProjects[0].health;\r\n        const lowestHealth = calculateProjectCompanyHealth(canAssignProjects[0], judgeCompany);\r\n        // get projects with health = lowest health value\r\n        const sameLowestHealthProjects = canAssignProjects.filter((project: ProjectWithHealth) => {\r\n          // return project.health === lowestHealth;\r\n          return calculateProjectCompanyHealth(project, judgeCompany) === lowestHealth;\r\n        });\r\n\r\n        // randomly pick project to assign from among projects with health = lowest health value\r\n        // assign project to judge\r\n        queueProject(sameLowestHealthProjects[Math.floor(Math.random() * sameLowestHealthProjects.length)].id!, randomUserID);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Calculates the health of a project for a certain company\r\n  const calculateProjectCompanyHealth = (project: Project, company: string): number => {\r\n    let categoryHealth = 0;\r\n\r\n    // Iterate over all judges\r\n    for (const judgeID of Object.keys(props.ballots.dJudgeQueues).map(Number)) {\r\n      // If the judge is not of the same company\r\n      if (props.users[judgeID].company! !== company) {\r\n        continue\r\n      }\r\n      let judgeQueue = props.ballots.dJudgeQueues[judgeID];\r\n      // If project is in the queue increase the health by 1\r\n      if (judgeQueue.queuedProject && judgeQueue.queuedProject.id === project.id!) {\r\n        categoryHealth++;\r\n      }\r\n\r\n      // If project is currently being judged increase health by 2\r\n      if (judgeQueue.activeProjectID === project.id!) {\r\n        categoryHealth += 2;\r\n      }\r\n\r\n      // If judge already judged this project\r\n      if (judgeQueue.otherProjectIDs.includes(project.id!)) {\r\n        categoryHealth += 2;\r\n      }\r\n    }\r\n    return categoryHealth;\r\n  }\r\n\r\n  const calculateProjectScore = (projectId: number): number => {\r\n    if (!props.ballots.dProjectScores[projectId!]) {\r\n      return 0;\r\n    }\r\n\r\n    const categoryScoreArrays: { [projectID: number]: { [userID: number]: number } } = {\r\n      [projectId!]: {}\r\n    };\r\n    const defaultCategoryID = Object.values(props.categories.categories).filter((category: Category) => {\r\n      return state.filterBy ? category.id! === state.filterBy : category.isDefault;\r\n    })[0].id;\r\n    const allUserBallots = Object.values(props.ballots.dProjectScores[projectId!]);\r\n    for (const userBallots of allUserBallots) {\r\n      for (const ballot of userBallots) {\r\n        if (ballot.status === BallotStatus.Submitted) {\r\n          if (props.categories.criteria[ballot.criteriaID].categoryID === defaultCategoryID) {\r\n            if (!categoryScoreArrays[ballot.projectID][ballot.userID]) {\r\n              categoryScoreArrays[ballot.projectID][ballot.userID] = 0;\r\n            }\r\n\r\n            categoryScoreArrays[ballot.projectID][ballot.userID] += ballot.score;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const catScoreArrays = Object.values(categoryScoreArrays[projectId!]);\r\n    const score = catScoreArrays.reduce((total, score) => total + score, 0) / (catScoreArrays.length > 0 ? catScoreArrays.length : 1);\r\n    console.log(score);\r\n    return score;\r\n  }\r\n\r\n  const moveProjectsToRound2 = async () => {\r\n    const projects = [];\r\n    for (const projectId of Object.keys(props.projects)) {\r\n      if (calculateProjectScore(parseInt(projectId)) >= 0.5) {\r\n        projects.push(props.projects[parseInt(projectId)]);\r\n      }\r\n    }\r\n    const newRoundNumber = 2;\r\n    try {\r\n      const result = await Axios.post('/api/projects/changeProjectRounds', {\r\n        projects,\r\n        newRoundNumber\r\n      });\r\n      if (result.status) {\r\n        alert('Projects moved to round 2!');\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      alert('Error moving projects!');\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  document.onkeypress = (event: any) => {\r\n    if (event.key === ' ') {\r\n      event.preventDefault();\r\n      autoAssign();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const onClick = (event: any) => {\r\n      console.log(event.target.className);\r\n      if (event.target.className !== 'dot' && !event.target.className.includes('judge')) {\r\n        dismissPopover();\r\n      }\r\n    };\r\n    const keydown = (event: any) => {\r\n      if (event.key === 'Escape') {\r\n        dismissPopover();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', onClick);\r\n    document.addEventListener('keydown', keydown);\r\n    props.subscribeQueueProject();\r\n    props.subscribeQueuedProject();\r\n    props.subscribeGotProject();\r\n    props.subscribeScoreProject();\r\n    props.subscribeBusyProject();\r\n    props.subscribeMissingProject();\r\n    props.subscribeSkipProject();\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', onClick);\r\n      document.removeEventListener('keydown', keydown);\r\n      props.unsubscribeAll();\r\n    };\r\n  }, []);\r\n\r\n  const queueProject = (projectID: number, userID: number) => {\r\n    props.queueProject(projectID, userID);\r\n    props.queueProjectEmit(projectID, userID);\r\n  };\r\n\r\n  const dismissPopover = () => {\r\n    dispatch({\r\n      type: 'change-selected-project',\r\n      projectID: '',\r\n    });\r\n  };\r\n\r\n  const _getProjects = () => {\r\n    const _handleSelectedProjectChange = async (projectID: string) => {\r\n      if (state.selectedProject === projectID) {\r\n        dispatch({ type: 'change-selected-project', projectID: '' });\r\n      } else {\r\n        dispatch({ type: 'change-selected-project', projectID });\r\n      }\r\n    };\r\n\r\n    if (Object.values(props.tableGroups).length > 0 && Object.values(state.projects).length > 0) {\r\n      // TODO sort projects by health, instead of just score.\r\n      const projectCircles = Object.values(state.projects)\r\n        .filter((project: ProjectWithHealth) => {\r\n          return state.filterBy ? project.categoryIDs.includes(state.filterBy) : true;\r\n        })\r\n        .sort((a: ProjectWithHealth, b: ProjectWithHealth) => {\r\n          switch (state.sortBy) {\r\n            case SortType.AverageScore:\r\n              if (!props.ballots.dProjectScores[a.id!] && !props.ballots.dProjectScores[b.id!]) {\r\n                return 0;\r\n              }\r\n              if (!props.ballots.dProjectScores[b.id!]) {\r\n                return -1;\r\n              }\r\n              if (!props.ballots.dProjectScores[a.id!]) {\r\n                return 1;\r\n              }\r\n\r\n              const categoryScoreArrays: { [projectID: number]: { [userID: number]: number } } = {\r\n                [a.id!]: {},\r\n                [b.id!]: {},\r\n              };\r\n              const defaultCategoryID = Object.values(props.categories.categories).filter((category: Category) => {\r\n                return state.filterBy ? category.id! === state.filterBy : category.isDefault;\r\n              })[0].id;\r\n              const allUserBallots = Object.values(props.ballots.dProjectScores[a.id!]).concat(Object.values(props.ballots.dProjectScores[b.id!]));\r\n              for (const userBallots of allUserBallots) {\r\n                for (const ballot of userBallots) {\r\n                  if (ballot.status === BallotStatus.Submitted) {\r\n                    if (props.categories.criteria[ballot.criteriaID].categoryID === defaultCategoryID) {\r\n                      if (!categoryScoreArrays[ballot.projectID][ballot.userID]) {\r\n                        categoryScoreArrays[ballot.projectID][ballot.userID] = 0;\r\n                      }\r\n\r\n                      categoryScoreArrays[ballot.projectID][ballot.userID] += ballot.score;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n\r\n              const aCatScoreArrays = Object.values(categoryScoreArrays[a.id!]);\r\n              const bCatScoreArrays = Object.values(categoryScoreArrays[b.id!]);\r\n              console.log(aCatScoreArrays, bCatScoreArrays);\r\n\r\n              const aScore = aCatScoreArrays.reduce((total, score) => total + score, 0) / (aCatScoreArrays.length > 0 ? aCatScoreArrays.length : 1);\r\n              const bScore = bCatScoreArrays.reduce((total, score) => total + score, 0) / (bCatScoreArrays.length > 0 ? bCatScoreArrays.length : 1);\r\n              // console.log(Object.values(categoryScoreArrays[a.id!]).length);\r\n              console.log(aScore, bScore);\r\n              return aScore < bScore ? 1 : -1;\r\n            case SortType.ProjectHealth:\r\n              return a.health - b.health;\r\n            default:\r\n              return ((a.tableGroupID * 1000) + a.tableNumber) - ((b.tableGroupID * 1000) + b.tableNumber);\r\n          }\r\n        })\r\n        .reduce((output: ReactElement[], project: ProjectWithHealth) => {\r\n          const tableGroup = props.tableGroups[project.tableGroupID];\r\n          if (project.expoNumber === state.currentExpo && project.roundNumber === state.currentRound) {\r\n            output.push(\r\n              <PageAdminProjectsEpicenterProjectDot\r\n                key={project.id!}\r\n                dimmed={false}\r\n                loading={false}\r\n                userID={0}\r\n                project={project}\r\n                tableGroup={tableGroup}\r\n                selectedProject={state.selectedProject + ' 0'}\r\n                handleSelectedProjectChange={_handleSelectedProjectChange}\r\n              />\r\n            );\r\n          }\r\n          return output;\r\n        }, []);\r\n\r\n      if (projectCircles.length === 0) {\r\n        return <p>No projects in this expo/round.</p>;\r\n      }\r\n\r\n      return projectCircles;\r\n    }\r\n  };\r\n\r\n  const _getJudges = () => {\r\n    const _handleJudgeSelection = (userID: number) => {\r\n      console.log(state.selectedProject);\r\n      if (state.selectedProject.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      if (\r\n        props.ballots.dJudgeQueues[userID]\r\n        && props.ballots.dJudgeQueues[userID].activeProjectID === +state.selectedProject\r\n        || props.ballots.dJudgeQueues[userID]\r\n        && props.ballots.dJudgeQueues[userID].otherProjectIDs.includes(+state.selectedProject)\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      if (props.projects[+state.selectedProject].categoryIDs.map((categoryID: number) => {\r\n        return props.categories.categories[categoryID].company === props.users[userID].company!;\r\n      }).includes(true)) {\r\n        queueProject(+state.selectedProject, userID);\r\n        dismissPopover();\r\n      } else {\r\n        // TOOD error\r\n      }\r\n    };\r\n\r\n    const _handleJudgeSelectedProject = async (projectID: string) => {\r\n      if (state.judgeSelectedProject === projectID) {\r\n        dispatch({ type: 'change-judge-selected-project', projectID: '' });\r\n      } else {\r\n        dispatch({ type: 'change-judge-selected-project', projectID });\r\n      }\r\n    };\r\n\r\n    const _getDerivedProjects = (userID: number) => {\r\n      const toReturn = [];\r\n      if (props.ballots.dJudgeQueues[userID]) {\r\n\r\n        const queuedProject = props.ballots.dJudgeQueues[userID].queuedProject;\r\n        if (queuedProject && queuedProject.id !== 0 && props.projects[queuedProject.id]) {\r\n          toReturn.push(\r\n            <PageAdminProjectsEpicenterProjectDot\r\n              key={queuedProject.id}\r\n              dimmed={false}\r\n              loading={queuedProject.pending}\r\n              tableGroup={props.tableGroups[props.projects[queuedProject.id].tableGroupID]}\r\n              project={state.projects[queuedProject.id]}\r\n              userID={userID}\r\n              selectedProject={state.judgeSelectedProject}\r\n              onContextMenu={(event) => {\r\n                console.log(event.type);\r\n                event.preventDefault();\r\n                // TODO dequeue project here.\r\n                return false;\r\n              }}\r\n              handleSelectedProjectChange={() => _handleJudgeSelectedProject(queuedProject.id + ' ' + userID)}\r\n            />\r\n          );\r\n        } else {\r\n          toReturn.push(\r\n            <PageAdminProjectsEpicenterEmptyDot solid key={-1} />\r\n          )\r\n        }\r\n\r\n        const activeProjectID = props.ballots.dJudgeQueues[userID].activeProjectID;\r\n        if (activeProjectID && props.projects[activeProjectID]) {\r\n          toReturn.push(\r\n            <PageAdminProjectsEpicenterProjectDot\r\n              key={activeProjectID}\r\n              dimmed={false}\r\n              loading={false}\r\n              tableGroup={props.tableGroups[props.projects[activeProjectID].tableGroupID]}\r\n              project={state.projects[activeProjectID]}\r\n              selectedProject={state.judgeSelectedProject}\r\n              userID={userID}\r\n              handleSelectedProjectChange={() => _handleJudgeSelectedProject(activeProjectID + ' ' + userID)}\r\n            />\r\n          );\r\n        } else {\r\n          toReturn.push(\r\n            <PageAdminProjectsEpicenterEmptyDot solid={false} key={-2} />\r\n          )\r\n        }\r\n\r\n        const otherProjectIDs = props.ballots.dJudgeQueues[userID].otherProjectIDs;\r\n        if (otherProjectIDs) {\r\n          const other = [];\r\n          for (const projectID of otherProjectIDs) {\r\n            if (props.projects[projectID]) {\r\n              other.push(\r\n                <PageAdminProjectsEpicenterProjectDot\r\n                  key={'' + projectID + ' ' + userID}\r\n                  dimmed={true}\r\n                  loading={false}\r\n                  tableGroup={props.tableGroups[props.projects[projectID].tableGroupID]}\r\n                  project={state.projects[projectID]}\r\n                  userID={userID}\r\n                  selectedProject={state.judgeSelectedProject}\r\n                  handleSelectedProjectChange={() => _handleJudgeSelectedProject(projectID + ' ' + userID)}\r\n                />\r\n              );\r\n            }\r\n          }\r\n          toReturn.push(other.reverse());\r\n        }\r\n      } else {\r\n        toReturn.push([\r\n          <PageAdminProjectsEpicenterEmptyDot solid key={-1} />,\r\n          <PageAdminProjectsEpicenterEmptyDot solid={false} key={-2} />,\r\n        ]);\r\n      }\r\n\r\n      return toReturn;\r\n    };\r\n\r\n    return Object.values(props.users).sort((a: User, b: User) => {\r\n      return a.company! < b.company! ? -1 : 1;\r\n    }).reduce((toShow: ReactElement[], user: User) => {\r\n      if (user.isJudging) {\r\n        toShow.push(\r\n          <Card\r\n            key={user.id}\r\n            className={'judge'}\r\n            style={{\r\n              width: 220,\r\n              margin: 5,\r\n              cursor: 'pointer',\r\n            }}\r\n            onClick={() => _handleJudgeSelection(user.id!)}>\r\n            <Card.Body className={'judge'}>\r\n              <Card.Title className={'judge'}>{user.name}</Card.Title>\r\n              <Card.Subtitle className=\"mb-2 text-muted\">\r\n                {user.company}\r\n              </Card.Subtitle>\r\n              <div style={{ display: 'flex', flexFlow: 'wrap' }}>\r\n                {_getDerivedProjects(user.id!)}\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n      }\r\n      return toShow;\r\n    }, []);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Accordion>\r\n        <Card>\r\n          <Accordion.Toggle as={Card.Header} eventKey='0'>\r\n            Filter/Sort\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey='0'>\r\n            <Card.Body>\r\n              <h2>Sort</h2>\r\n              <Button size='sm' onClick={() => dispatch({ type: 'change-sort-by', sortBy: SortType.Location})}>By Location</Button>\r\n              <Button size='sm' onClick={() => dispatch({ type: 'change-sort-by', sortBy: SortType.AverageScore})}>By Average Score</Button>\r\n              <Button size='sm' onClick={() => dispatch({ type: 'change-sort-by', sortBy: SortType.ProjectHealth})}>By Project Health</Button>\r\n              <Button size='sm' onClick={() => dispatch({ type: 'change-sort-by', sortBy: SortType.TimesJudged})}>By Times Judged (Includes Pending/Assigned)</Button>\r\n              <p style={{whiteSpace: 'pre-wrap'}}>\r\n                  Currently sorting <strong>By {SortType[state.sortBy]}</strong>\r\n              </p>\r\n              <h2>Filter</h2>\r\n              {Object.values(props.categories.categories).reduce((buttons: ReactElement[], category: Category) => {\r\n                if (!category.generated) {\r\n                  buttons.push(\r\n                    <Button\r\n                      key={category.id}\r\n                      size='sm'\r\n                      onClick={() => dispatch({\r\n                        type: 'change-filter-by',\r\n                        filterBy: category.id,\r\n                      })}>By {category.name}</Button>\r\n                  );\r\n                }\r\n                return buttons;\r\n              }, [])}\r\n              {state.filterBy &&\r\n              <p style={{whiteSpace: 'pre-wrap'}}>\r\n                Currently filtering <strong>By {Object.values(props.categories.categories)\r\n                  .find((category: Category) => {return category.id === state.filterBy}).name}</strong>\r\n              </p>\r\n              }\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Accordion.Toggle as={Card.Header} eventKey='1'>\r\n            Expo {state.currentExpo} | Round {state.currentRound}\r\n            {/* | Goodness {state.powerGoodness} | Variance {state.powerVariance} | Skip {state.powerSkip} */}\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey='1'>\r\n            <Card.Body>\r\n              <InputGroup className=\"mb-3\" style={{\r\n                maxWidth: 150,\r\n                marginRight: 10,\r\n              }}>\r\n                <InputGroup.Text>Expo #</InputGroup.Text>\r\n                <FormControl\r\n                  onChange={(event: any) => dispatch({ type: 'change-current-expo', currentExpo: +event.target.value })}\r\n                  type='number'\r\n                  value={\"\" + state.currentExpo} />\r\n              </InputGroup>\r\n              <InputGroup className=\"mb-3\" style={{\r\n                maxWidth: 150,\r\n                marginRight: 10,\r\n              }}>\r\n                <InputGroup.Text>Round #</InputGroup.Text>\r\n                <FormControl\r\n                  onChange={(event: any) => dispatch({ type: 'change-current-round', currentRound: +event.target.value })}\r\n                  type='number'\r\n                  value={\"\" + state.currentRound} />\r\n              </InputGroup>\r\n              {/* <InputGroup className=\"mb-3\" style={{\r\n                maxWidth: 350,\r\n                marginRight: 10,\r\n              }}>\r\n                <InputGroup.Text>Goodness Power</InputGroup.Text>\r\n                <FormControl\r\n                  onChange={(event: any) => dispatch({\r\n                    type: 'change-parameters',\r\n                    goodness: +event.target.value,\r\n                    variance: state.powerVariance,\r\n                    skip: state.powerSkip,\r\n                  })}\r\n                  step='0.1'\r\n                  type='number'\r\n                  value={\"\" + state.powerGoodness} />\r\n              </InputGroup>\r\n              <p>Good projects with >= 2 judges have lower health. Multiplier is taken to the (times judged * goodness power) power. 0 to disable.</p>\r\n              <InputGroup className=\"mb-3\" style={{\r\n                maxWidth: 350,\r\n                marginRight: 10,\r\n              }}>\r\n                <InputGroup.Text>Variance Power</InputGroup.Text>\r\n                <FormControl\r\n                  onChange={(event: any) => dispatch({\r\n                    type: 'change-parameters',\r\n                    goodness: state.powerGoodness,\r\n                    variance: +event.target.value,\r\n                    skip: state.powerSkip,\r\n                  })}\r\n                  step='0.1'\r\n                  type='number'\r\n                  value={\"\" + state.powerVariance} />\r\n              </InputGroup>\r\n              <p>Higher-variance projects with >= 2 judges have lower health. (5 / (5 + sstdev)) to the variancePower. 0 to disable.</p>\r\n              <InputGroup className=\"mb-3\" style={{\r\n                maxWidth: 350,\r\n                marginRight: 10,\r\n              }}>\r\n                <InputGroup.Text>Skip Power</InputGroup.Text>\r\n                <FormControl\r\n                  onChange={(event: any) => dispatch({\r\n                    type: 'change-parameters',\r\n                    goodness: state.powerGoodness,\r\n                    variance: state.powerVariance,\r\n                    skip: +event.target.value,\r\n                  })}\r\n                  step='0.1'\r\n                  type='number'\r\n                  value={\"\" + state.powerSkip} />\r\n              </InputGroup>\r\n              <p>Twice-skipped projects have lower health. Multiplier is (# skipped) to the skipPower. 0 to disable.</p> */}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Accordion.Toggle as={Card.Header} eventKey='2'>\r\n            Bulk Move Projects\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey='2'>\r\n            <Card.Body>\r\n              <Button size='sm' onClick={() => {\r\n                if (window.confirm('This operation will move all projects with score >=0.5 to round 2. Continue?')) {\r\n                  moveProjectsToRound2()\r\n                }\r\n              }}>Move Projects to Round 2</Button>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        margin: '12px auto 0',\r\n      }}>\r\n        {_getProjects()}\r\n      </div>\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        margin: '12px auto 0',\r\n      }}>\r\n        {_getJudges()}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst PageAdminProjectsEpicenter = connect(mapStateToProps, mapDispatchToProps)(PageAdminProjectsEpicenterComponent);\r\n\r\nexport default PageAdminProjectsEpicenter;\r\n","import React from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fillProjects } from '../../state/Project';\r\nimport { ProjectState } from '../../types/Project';\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfillProjects: (projects: ProjectState) => {\r\n\t\t\tdispatch(fillProjects(projects));\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface PageAdminProjectsAddProjectModalProps {\r\n  modalOpen: boolean;\r\n  closeModal: () => void;\r\n\tfillProjects: (projects: ProjectState) => void;\r\n}\r\n\r\ntype State = {\r\n  requesting: boolean;\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'request-start'}\r\n  | { type: 'request-finish'};\r\n\r\nconst PageAdminProjectsAddProjectModalComponent: React.FC<PageAdminProjectsAddProjectModalProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'request-start':\r\n\t\t\t\treturn { ...state, requesting: true };\r\n\t\t\tcase 'request-finish':\r\n        return { ...state, requesting: false };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n    requesting: false,\r\n  }, undefined);\r\n\r\n  const handleSaveChanges = async () => {\r\n    dispatch({ type: 'request-start' });\r\n    // const result = await Axios.post('/api/categories/update', {\r\n    // });\r\n    // if (result.status) {\r\n    //   const data = result.data;\r\n    //   props.closeModal();\r\n    //   dispatch({ type: 'request-finish' });\r\n    // } else {\r\n    //   // TODO add error checking.\r\n    // }\r\n  };\r\n\r\n  const getForm = () => {\r\n    return (\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Devpost CSV</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            type='file' />\r\n          <Form.Text className=\"text-muted\">\r\n            Please download the CSV containing all projects from Devpost and upload it here.\r\n          </Form.Text>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n\treturn (\r\n\t\t<Modal show={props.modalOpen} onHide={props.closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Project</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {getForm()}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={props.closeModal}\r\n          variant=\"secondary\">\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={handleSaveChanges}\r\n          variant=\"primary\">\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\t);\r\n};\r\n\r\nconst PageAdminProjectsAddProjectModal = connect(null, mapDispatchToProps)(PageAdminProjectsAddProjectModalComponent);\r\n\r\nexport default PageAdminProjectsAddProjectModal;\r\n\r\n","import React, { ReactElement } from 'react';\r\nimport { Badge, Button, Overlay, Popover, Spinner } from 'react-bootstrap';\r\nimport Project, { ProjectWithHealth, TableGroup } from '../../types/Project';\r\nimport { AppState } from '../../state/Store';\r\nimport { connect } from 'react-redux';\r\nimport { CategoryCriteriaState } from '../../types/Category';\r\nimport { BallotState } from '../../types/Ballot';\r\nimport { changeProjectRound } from \"../../state/Project\";\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    categories: state.categories,\r\n    ballots: state.ballots,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    changeProjectRound: (project: Project, newRoundNumber: number) => {\r\n      dispatch(changeProjectRound(project, newRoundNumber));\r\n    }\r\n  }\r\n}\r\n\r\ninterface PageAdminProjectsEpicenterProjectDotProps {\r\n  ballots: BallotState;\r\n  dimmed: boolean;\r\n  categories: CategoryCriteriaState;\r\n  loading: boolean;\r\n  tableGroup: TableGroup;\r\n  project: ProjectWithHealth;\r\n  selectedProject: string;\r\n  userID: number;\r\n  onClick?: (event: any) => void;\r\n  onContextMenu?: (event: any) => void;\r\n  handleSelectedProjectChange: (projectID: string) => void;\r\n  changeProjectRound: (project: Project, newRoundNumber: number) => void;\r\n}\r\n\r\nconst PageAdminProjectsEpicenterProjectDotComponent: React.FC<PageAdminProjectsEpicenterProjectDotProps> = (props) => {\r\n  const ref: any = React.useRef(React.createRef());\r\n\r\n  const _getOverlay = () => {\r\n    const categoryScoreArrays: {\r\n      [categoryID: number]: {\r\n        [userID: number]: number;\r\n      };\r\n    } = {};\r\n    if (props.ballots.dProjectScores[props.project.id!] && Object.values(props.ballots.dProjectScores[props.project.id!]).length > 0 && Object.values(props.categories.criteria).length > 0) {\r\n      const allUserBallots = Object.values(props.ballots.dProjectScores[props.project.id!]);\r\n      for (const userBallots of allUserBallots) {\r\n        for (const ballot of userBallots) {\r\n          if (!categoryScoreArrays[props.categories.criteria[ballot.criteriaID].categoryID]) {\r\n            categoryScoreArrays[props.categories.criteria[ballot.criteriaID].categoryID] = {};\r\n          }\r\n\r\n          if (!categoryScoreArrays[props.categories.criteria[ballot.criteriaID].categoryID][ballot.userID]) {\r\n            categoryScoreArrays[props.categories.criteria[ballot.criteriaID].categoryID][ballot.userID] = 0;\r\n          }\r\n\r\n          categoryScoreArrays[props.categories.criteria[ballot.criteriaID].categoryID][ballot.userID] += ballot.score;\r\n        }\r\n      }\r\n    }\r\n\r\n    const _changeRound = (difference: number) => {\r\n      props.changeProjectRound(props.project, props.project.roundNumber + difference);\r\n    }\r\n\r\n    return (\r\n      <Overlay\r\n        show={props.selectedProject === props.project.id! + ' ' + props.userID}\r\n        target={ref.current.current}>\r\n        <Popover id={'popover' + props.project.id}>\r\n          <strong>{props.project.name}</strong>\r\n          <p><a href={props.project.devpostURL} target='_blank'>{props.project.devpostURL}</a><br />\r\n            {props.project.categoryIDs.reduce((badges: ReactElement[], categoryID: number) => {\r\n              if (props.categories.categories[categoryID]) {\r\n                const badgeVariant =\r\n                  props.categories.categories[categoryID].generated\r\n                    ? 'secondary'\r\n                    : props.categories.categories[categoryID].isDefault\r\n                      ? 'success' : 'primary';\r\n                badges.push(\r\n                  <Badge\r\n                    key={categoryID}\r\n                    variant={badgeVariant}\r\n                    style={{ margin: '0 2px' }}>\r\n                    {props.categories.categories[categoryID].name}\r\n                  </Badge>\r\n                );\r\n              }\r\n              return badges;\r\n            }, [])}\r\n          </p>\r\n          <p>Health: {props.project.health}</p>\r\n          {Object.keys(categoryScoreArrays).length > 0\r\n            ? Object.keys(categoryScoreArrays).map((categoryID: string) => {\r\n              const scoresArray = Object.values(categoryScoreArrays[+categoryID])\r\n              return (\r\n                <p style={{ margin: 0 }} key={categoryID}>\r\n                  {props.categories.categories[+categoryID].name} -\r\n                  AVG: {scoresArray.reduce((total, value) => total + value, 0) / scoresArray.length} [{scoresArray.join(', ')}]\r\n                </p>\r\n              )\r\n            })\r\n            : 'No Scores'}\r\n          <p><br /><a href={props.project.roomUrl} target=\"_blank\">Join Meeting Room</a></p>\r\n          <p>Change Round</p>\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"sm\"\r\n            onClick={() => _changeRound(-1)}\r\n            disabled={props.project.roundNumber == 1}\r\n          >\r\n            Move Back 1\r\n          </Button>\r\n          {' '}\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"sm\"\r\n            onClick={() => _changeRound(1)}\r\n          >\r\n            Move Up 1\r\n          </Button>\r\n        </Popover>\r\n      </Overlay>\r\n    );\r\n  };\r\n\r\n  if (!props.project) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div key={props.project.id + ' ' + props.userID} onClick={props.onClick} onContextMenu={props.onContextMenu}>\r\n      <div\r\n        ref={ref.current}\r\n        key={props.project.id! + ' ' + props.userID}\r\n        id={props.project.id! + ' ' + props.userID}\r\n        className='dot'\r\n        style={{\r\n          margin: 2,\r\n          width: 60,\r\n          height: 60,\r\n          background: props.tableGroup.color,\r\n          opacity: props.dimmed ? 0.5 : 1,\r\n          color: 'white',\r\n          textAlign: 'center',\r\n          lineHeight: '40px',\r\n          filter: props.selectedProject === props.project.id! + ' ' + props.userID ? 'invert(30%)' : '',\r\n          userSelect: 'none',\r\n          MozUserSelect: 'none',\r\n          cursor: 'pointer',\r\n        }}\r\n        onClick={() => props.handleSelectedProjectChange('' + props.project.id!)}>\r\n        <div style={{\r\n          display: 'flex',\r\n          flexDirection: \"column\",\r\n          alignItems: 'center',\r\n          justifyContent: 'space-evenly',\r\n          width: 60,\r\n          height: 60,\r\n          fontWeight: \"bold\",\r\n          lineHeight: \"initial\"\r\n        }} className='dot'>\r\n          {props.loading ? <Spinner animation=\"border\" style={{ gridRow: 1, gridColumn: 1 }} /> : null}\r\n          <span style={{ fontSize: 10 }}>E: {props.project.expoNumber}</span>\r\n          <span style={{ fontSize: 10 }}>R: {props.project.roundNumber}</span>\r\n          <span>{props.tableGroup.shortcode}{props.project.tableNumber}</span>\r\n        </div>\r\n      </div>\r\n      {_getOverlay()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageAdminProjectsEpicenterProjectDot = connect(mapStateToProps, mapDispatchToProps)(PageAdminProjectsEpicenterProjectDotComponent);\r\n\r\nexport default PageAdminProjectsEpicenterProjectDot;\r\n\r\n","import React from 'react';\r\n\r\ninterface PageAdminProjectsEpicenterEmptyDotProps {\r\n  solid: boolean;\r\n}\r\n\r\nconst PageAdminProjectsEpicenterEmptyDot: React.FC<PageAdminProjectsEpicenterEmptyDotProps> = (props) => {\r\n  return (\r\n    <div\r\n      className='dot'\r\n      style={{\r\n        display: 'inline-block',\r\n        margin: 2,\r\n        minWidth: 60,\r\n        width: 60,\r\n        height: 60,\r\n        borderWidth: 2,\r\n        lineHeight: '40px',\r\n        userSelect: 'none',\r\n        MozUserSelect: 'none',\r\n        cursor: 'pointer',\r\n        opacity: 0.5,\r\n        borderStyle: props.solid ? 'solid' : 'dashed',\r\n      }} />\r\n  )\r\n}\r\n\r\nexport default PageAdminProjectsEpicenterEmptyDot;\r\n","import React from 'react';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AppState } from '../../state/Store';\r\nimport { TableGroupState, ProjectState } from '../../types/Project';\r\nimport { fetchTableGroups } from '../../state/TableGroup';\r\nimport { fetchProjects } from '../../state/Project';\r\n\r\nimport PageAdminProjectsUploadModal from './PageAdminProjectsUploadModal';\r\nimport PageAdminProjectsManageTableGroupsModal from './PageAdminProjectsManageTableGroupsModal';\r\nimport PageAdminProjectsAddProjectModal from './PageAdminProjectsAddProjectModal';\r\nimport PageAdminProjectsEpicenter from './PageAdminProjectsEpicenter';\r\nimport { fetchUsers } from '../../state/User';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\nimport { UserState } from '../../types/User';\r\nimport { fetchBallots } from '../../state/Ballot';\r\nimport { CategoryCriteriaState } from '../../types/Category';\r\nimport Axios from \"axios\";\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\tcategories: state.categories,\r\n\t\trequesting: state.requesting,\r\n\t\ttableGroups: state.tableGroups,\r\n\t\tprojects: state.projects,\r\n\t\tusers: state.users,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfetchBallots: () => dispatch(fetchBallots()),\r\n\t\tfetchTableGroups: () => dispatch(fetchTableGroups()),\r\n\t\tfetchProjects: () => dispatch(fetchProjects()),\r\n\t\tfetchUsers: () => dispatch(fetchUsers()),\r\n\t\trequestFinish: () => dispatch(requestFinish()),\r\n\t\trequestStart: () => dispatch(requestStart()),\r\n\t};\r\n};\r\n\r\ninterface PageAdminProjectsProps {\r\n\tcategories: CategoryCriteriaState;\r\n\trequesting: boolean;\r\n\ttableGroups: TableGroupState;\r\n\tprojects: ProjectState;\r\n\tusers: UserState;\r\n\tfetchBallots: () => void;\r\n\tfetchTableGroups: () => void;\r\n\tfetchProjects: () => void;\r\n\tfetchUsers: () => void;\r\n\trequestFinish: () => void;\r\n\trequestStart: () => void;\r\n}\r\n\r\nenum ModalType {\r\n\tUploadProjects,\r\n\tAddProject,\r\n\tManageTableGroups,\r\n\tNone,\r\n}\r\n\r\ntype State = {\r\n\tmodalOpen: ModalType,\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'modal-close' }\r\n\t| { type: 'modal-open', modal: ModalType };\r\n\r\nconst PageAdminProjectsComponent: React.FC<PageAdminProjectsProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'modal-close':\r\n\t\t\t\treturn { ...state, modalOpen: ModalType.None }\r\n\t\t\tcase 'modal-open':\r\n\t\t\t\treturn { ...state, modalOpen: action.modal }\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n\t\tmodalOpen: ModalType.None,\r\n\t}, undefined);\r\n\tconst closeModal = () => dispatch({ type: 'modal-close' });\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst initialFetch = async () => {\r\n\t\t\tprops.requestStart();\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tprops.fetchBallots(),\r\n\t\t\t\tprops.fetchTableGroups(),\r\n\t\t\t\tprops.fetchProjects(),\r\n\t\t\t\tprops.fetchUsers(),\r\n\t\t\t]);\r\n\t\t\tprops.requestFinish();\r\n\t\t};\r\n\r\n\t\tif (!(Object.values(props.users).length > 0\r\n\t\t\t&& Object.values(props.projects).length > 0\r\n\t\t\t&& Object.values(props.tableGroups).length > 0)) {\r\n\t\t\tinitialFetch();\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst getInnerContent = () => {\r\n\t\tif (props.requesting) {\r\n\t\t\treturn 'Loading';\r\n\t\t}\r\n\r\n\t\tif (Object.values(props.users).length === 0) {\r\n\t\t\treturn 'Loading';\r\n\t\t\t// TODO add real spinner\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<ButtonGroup>\r\n            <Button\r\n              onClick={async () => {\r\n                if (window.confirm('This operation will replace all existing projects and generated categories. Continue?')) {\r\n                  const projects = await Axios.get('/api/submit/import/true/false');\r\n                  if (projects.status) {\r\n                    const data = projects.data;\r\n                    console.log(data);\r\n                    alert('Projects and categories imported!');\r\n                    window.location.reload();\r\n                  } else {\r\n                    alert('Import error!');\r\n                  }\r\n\t\t\t\t\t\t\t\t}\r\n              }}\r\n              size='sm'>\r\n              Import Projects and Categories\r\n            </Button>\r\n            <Button\r\n              onClick={async () => {\r\n                if (window.confirm('This operation will replace all existing projects. Continue?')) {\r\n                  const projects = await Axios.get('/api/submit/import/false/false');\r\n                  if (projects.status) {\r\n                    const data = projects.data;\r\n                    console.log(data);\r\n                    alert('Projects imported!');\r\n                    window.location.reload();\r\n                  } else {\r\n                    alert('Import error!');\r\n                  }\r\n                }\r\n              }}\r\n              size='sm'>\r\n              Import Projects\r\n            </Button>\r\n            <Button\r\n              onClick={async () => {\r\n                if (window.confirm('This operation will replace all existing projects and generated categories. Continue?')) {\r\n                  const projects = await Axios.get('/api/submit/import/true/true');\r\n                  if (projects.status) {\r\n                    const data = projects.data;\r\n                    console.log(data);\r\n                    alert('Projects and categories imported!');\r\n                    window.location.reload();\r\n                  } else {\r\n                    alert('Import error!');\r\n                  }\r\n                }\r\n              }}\r\n              size='sm'>\r\n              Import Accepted Projects and Categories\r\n            </Button>\r\n            <Button\r\n              onClick={async () => {\r\n                if (window.confirm('This operation will replace all existing projects. Continue?')) {\r\n                  const projects = await Axios.get('/api/submit/import/false/true');\r\n                  if (projects.status) {\r\n                    const data = projects.data;\r\n                    console.log(data);\r\n                    alert('Projects imported!');\r\n                    window.location.reload();\r\n                  } else {\r\n                    alert('Import error!');\r\n                  }\r\n                }\r\n              }}\r\n              size='sm'>\r\n              Import Accepted Projects\r\n            </Button>\r\n            <Button\r\n              onClick={async () => {\r\n                if (window.confirm('This operation will accept projects in Submit. Continue?')) {\r\n                  const projects = await Axios.get('/api/submit/accept');\r\n                  if (projects.status) {\r\n                    const data = projects.data;\r\n                    console.log(data);\r\n                    alert('Projects accepted!');\r\n                  } else {\r\n                    alert('Acceptance error!');\r\n                  }\r\n                }\r\n              }}\r\n              size='sm'>\r\n              Accept Projects to Submit\r\n            </Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={() => dispatch({\r\n\t\t\t\t\t\t\t\ttype: 'modal-open',\r\n\t\t\t\t\t\t\t\tmodal: ModalType.UploadProjects,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tsize='sm'>\r\n\t\t\t\t\t\t\tUpload Projects\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={() => dispatch({\r\n\t\t\t\t\t\t\t\ttype: 'modal-open',\r\n\t\t\t\t\t\t\t\tmodal: ModalType.ManageTableGroups,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\tObject.values(props.tableGroups).length > 0 || props.requesting\r\n\t\t\t\t\t\t\t\t\t? 'outline-primary'\r\n\t\t\t\t\t\t\t\t\t: 'danger'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsize='sm'>\r\n\t\t\t\t\t\t\tManage Table Groups\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={() => dispatch({\r\n\t\t\t\t\t\t\t\ttype: 'modal-open',\r\n\t\t\t\t\t\t\t\tmodal: ModalType.AddProject,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tvariant='outline-primary'\r\n\t\t\t\t\t\t\tsize='sm'>\r\n\t\t\t\t\t\t\tAdd Project\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tmargin: '12px auto 0',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t{Object.values(props.projects).length !== 0\r\n\t\t\t\t\t\t&& Object.values(props.tableGroups).length !== 0\r\n\t\t\t\t\t\t&& Object.values(props.categories.criteria).length !== 0\r\n\t\t\t\t\t\t? <PageAdminProjectsEpicenter />\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={{ margin: '12px' }}>\r\n\t\t\t<h1 style={{ textAlign: 'center' }}>Projects</h1>\r\n\t\t\t{getInnerContent()}\r\n\t\t\t<PageAdminProjectsUploadModal\r\n\t\t\t\tmodalOpen={state.modalOpen === ModalType.UploadProjects}\r\n\t\t\t\tcloseModal={closeModal} />\r\n\t\t\t<PageAdminProjectsManageTableGroupsModal\r\n\t\t\t\tmodalOpen={state.modalOpen === ModalType.ManageTableGroups}\r\n\t\t\t\tcloseModal={closeModal} />\r\n\t\t\t<PageAdminProjectsAddProjectModal\r\n\t\t\t\tmodalOpen={state.modalOpen === ModalType.AddProject}\r\n\t\t\t\tcloseModal={closeModal} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst PageAdminProjects = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(PageAdminProjectsComponent);\r\n\r\nexport default PageAdminProjects;\r\n","export default interface Category {\r\n  id?: number;\r\n  name: string;\r\n  isDefault: boolean;\r\n  generated: boolean;\r\n  isHidden: boolean;\r\n  description: string;\r\n  company: string;\r\n  criteria: CriteriaState;\r\n}\r\n\r\nexport interface Criteria {\r\n  id?: number;\r\n  name: string;\r\n  rubric: string;\r\n  minScore: number;\r\n  maxScore: number;\r\n  categoryID: number;\r\n}\r\n\r\nexport interface CategoryCriteriaState {\r\n  categories: CategoryState;\r\n  criteria: CriteriaState;\r\n}\r\n\r\nexport interface CategoryState {\r\n  [ id: number ]: Category;\r\n}\r\n\r\nexport interface CriteriaState {\r\n  [ id: number ]: Criteria;\r\n}\r\n\r\nexport interface NameToCategoryMapping {\r\n  [ categoryName: string]: Category;\r\n}\r\n\r\nconst createPlaceholderCriteria = () => {\r\n\tconst criteriaDict: { [id: number]: Criteria} = {};\r\n\tcriteriaDict[-1] = createEmptyCriteria(-1);\r\n\treturn criteriaDict;\r\n};\r\n\r\nexport const EMPTY_CATEGORY = {\r\n  name: '',\r\n  isDefault: false,\r\n  generated: false,\r\n  isHidden: false,\r\n  description: '',\r\n  company: '',\r\n  criteria: createPlaceholderCriteria(),\r\n};\r\n\r\nexport function createEmptyCriteria(id: number) {\r\n  return {\r\n    id,\r\n\t\tname: '',\r\n\t\trubric: '',\r\n\t\tminScore: 1,\r\n\t\tmaxScore: 10,\r\n\t\tcategoryID: -1,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\n\r\nimport { Criteria } from '../../types/Category';\r\n\r\ninterface PageAdminCategoriesModalCriteriaProps {\r\n  criteria: Criteria;\r\n  requesting: boolean;\r\n  updateCriteria: (criteria: Criteria) => void;\r\n  deleteCriteria: (criteriaID: number) => void;\r\n}\r\n\r\nconst PageAdminCategoriesModalCriteria: React.FC<PageAdminCategoriesModalCriteriaProps> = (props) => {\r\n  const handleChange = (event: any) => {\r\n    const target = event.target;\r\n    props.updateCriteria({\r\n      ...props.criteria,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: 12 }}>\r\n      <hr />\r\n      <Form.Group>\r\n        <Form.Label>Criteria Name</Form.Label>\r\n        <Form.Control\r\n          disabled={props.requesting}\r\n          name='name'\r\n          onChange={handleChange}\r\n          value={props.criteria.name}\r\n          placeholder='Name' />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Rubric</Form.Label>\r\n        <Form.Control\r\n          as='textarea'\r\n          disabled={props.requesting}\r\n          name='rubric'\r\n          onChange={handleChange}\r\n          value={props.criteria.rubric}\r\n          placeholder='Rubric' />\r\n      </Form.Group>\r\n      <Form.Row>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Min Score</Form.Label>\r\n          <Form.Control\r\n            disabled={props.requesting}\r\n            name='minScore'\r\n            onChange={handleChange}\r\n            type='number'\r\n            value={\"\" + props.criteria.minScore} />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Max Score</Form.Label>\r\n          <Form.Control\r\n            disabled={props.requesting}\r\n            name='maxScore'\r\n            onChange={handleChange}\r\n            type='number'\r\n            value={\"\" + props.criteria.maxScore} />\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Button\r\n        disabled={props.requesting}\r\n        onClick={() => props.deleteCriteria(props.criteria.id!)}\r\n        size='sm'\r\n        variant='outline-danger'>\r\n        Delete Criteria\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageAdminCategoriesModalCriteria;\r\n","import React from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Category, { Criteria, createEmptyCriteria, CategoryState } from '../../types/Category';\r\nimport { updateCategory } from '../../state/Category';\r\nimport PageAdminCategoriesModalCriteria from './PageAdminCategoriesModalCriteria';\r\nimport Axios from 'axios';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tupdateCategory: (categories: CategoryState) => {\r\n\t\t\tdispatch(updateCategory(categories));\r\n    },\r\n    requestFinish: () => {\r\n      dispatch(requestFinish());\r\n    },\r\n    requestStart: () => {\r\n      dispatch(requestStart());\r\n    },\r\n\t};\r\n};\r\n\r\ninterface PageAdminCategoriesModalProps {\r\n  modalOpen: boolean;\r\n  category: Category;\r\n  closeModal: () => void;\r\n  updateCategory: (category: CategoryState) => void;\r\n  requestFinish: () => void;\r\n  requestStart: () => void;\r\n}\r\n\r\ntype State = {\r\n  category: Category;\r\n  currentNewCategoryID: number;\r\n  requesting: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'increase-new-category-id' }\r\n  | { type: 'update-category', category: Category };\r\n\r\nconst PageAdminCategoriesModalComponent: React.FC<PageAdminCategoriesModalProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n      case 'increase-new-category-id':\r\n        return { ...state, currentNewCategoryID: state.currentNewCategoryID - 1}\r\n      case 'update-category':\r\n        return { ...state, category: action.category };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n    requesting: false,\r\n    category: props.category,\r\n    currentNewCategoryID: -2,\r\n  }, undefined);\r\n\r\n  const category = props.category;\r\n\r\n  React.useEffect(() => {\r\n    dispatch({ type: 'update-category', category: props.category });\r\n  }, [category]);\r\n\r\n  const handleSaveChanges = async () => {\r\n    try {\r\n      props.requestStart();\r\n      const result = await Axios.post('/api/categories/update', {\r\n        categories: [{\r\n          ...state.category,\r\n          criteria: Object.values(state.category.criteria).map((criteria: Criteria) => {\r\n            const { name, rubric, minScore, maxScore } = criteria;\r\n            return { name, rubric, minScore, maxScore };\r\n          }),\r\n        }],\r\n      });\r\n      if (result.status) {\r\n        const data = result.data;\r\n        props.updateCategory(data);\r\n        props.closeModal();\r\n        props.requestFinish();\r\n      } else {\r\n        // TODO add error checking.\r\n      }\r\n    } catch(error) {\r\n    // TODO improve error handling.\r\n    alert('Server error. Please try again.');\r\n    window.location.reload();\r\n    }\r\n  };\r\n\r\n  const getCriteriaRows = () => {\r\n    const updateCriteria = (criteria: Criteria) => {\r\n      dispatch({\r\n        type: 'update-category',\r\n        category: {\r\n          ...state.category,\r\n          criteria: {\r\n            ...state.category.criteria,\r\n            [criteria.id!]: criteria,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    const deleteCriteria = (criteriaID: number) => {\r\n      let {[criteriaID]: omitCategory, ...rest} = state.category.criteria;\r\n      dispatch({\r\n        type: 'update-category',\r\n        category: {\r\n          ...state.category,\r\n          criteria: rest,\r\n        },\r\n      });\r\n    };\r\n\r\n    return Object.values(state.category.criteria).map((criteria) => {\r\n      return <PageAdminCategoriesModalCriteria\r\n        key={criteria.id}\r\n        criteria={criteria}\r\n        requesting={state.requesting}\r\n        updateCriteria={updateCriteria}\r\n        deleteCriteria={deleteCriteria} />\r\n    });\r\n  };\r\n\r\n  const handleNewCriteria = () => {\r\n    const criteria = state.category.criteria;\r\n    criteria[state.currentNewCategoryID] = createEmptyCriteria(state.currentNewCategoryID);\r\n    dispatch({ type: 'increase-new-category-id' });\r\n    dispatch({\r\n      type: 'update-category',\r\n      category: {\r\n        ...state.category,\r\n        criteria,\r\n      }\r\n    });\r\n  };\r\n\r\n  const getForm = () => {\r\n    return (\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Category Name</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-category',\r\n              category: {\r\n                ...state.category,\r\n                name: event.target.value,\r\n              },\r\n            })}\r\n            value={state.category.name}\r\n            type='text'\r\n            placeholder='Name' />\r\n          <Form.Text className=\"text-muted\">\r\n            If you are using Ballot for optional prizes, this name needs to match the Devpost output.\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Check\r\n            disabled={state.requesting}\r\n            checked={state.category.isDefault}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-category',\r\n              category: {\r\n                ...state.category,\r\n                isDefault: event.target.checked,\r\n              }\r\n            })}\r\n            type=\"checkbox\"\r\n            label=\"Default Category\" />\r\n          <Form.Text className=\"text-muted\">\r\n            Check this box if all submissions are eligible for this category.\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Check\r\n            disabled={state.requesting}\r\n            checked={state.category.isHidden}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-category',\r\n              category: {\r\n                ...state.category,\r\n                isHidden: event.target.checked,\r\n              }\r\n            })}\r\n            type=\"checkbox\"\r\n            label=\"Hidden Category\" />\r\n          <Form.Text className=\"text-muted\">\r\n            Check this box if this is a hidden category.\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Company</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            name='company'\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-category',\r\n              category: {\r\n                ...state.category,\r\n                company: event.target.value,\r\n              }\r\n            })}\r\n            value={state.category.company}\r\n            placeholder='Company' />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Category Description</Form.Label>\r\n          <Form.Control\r\n            as='textarea'\r\n            disabled={state.requesting}\r\n            name='description'\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-category',\r\n              category: {\r\n                ...state.category,\r\n                description: event.target.value,\r\n              }\r\n            })}\r\n            value={state.category.description}\r\n            placeholder='Description' />\r\n        </Form.Group>\r\n        {getCriteriaRows()}\r\n        <Button\r\n          disabled={state.requesting}\r\n          variant='outline-primary'\r\n          onClick={handleNewCriteria}>New Criteria</Button>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n\treturn (\r\n\t\t<Modal show={props.modalOpen} onHide={props.closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Category</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {getForm()}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={props.closeModal}\r\n          variant=\"secondary\">\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={handleSaveChanges}\r\n          variant=\"primary\">\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\t);\r\n};\r\n\r\nconst PageAdminCategoriesModal = connect(null, mapDispatchToProps)(PageAdminCategoriesModalComponent);\r\n\r\nexport default PageAdminCategoriesModal;\r\n\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Card, ListGroup, ListGroupItem, ButtonGroup, Button, Badge } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deleteCategory } from '../../state/Category';\r\nimport Category, { Criteria } from '../../types/Category';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\nimport { AppState } from '../../state/Store';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\trequesting: state.requesting,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tdeleteCategory: (categoryID: number) => {\r\n\t\t\tdispatch(deleteCategory(categoryID));\r\n\t\t},\r\n\t\trequestFinish: () => {\r\n      dispatch(requestFinish());\r\n    },\r\n    requestStart: () => {\r\n      dispatch(requestStart());\r\n    },\r\n\t};\r\n};\r\n\r\ninterface PageAdminCategoriesProps {\r\n\tcategory: Category;\r\n\trequesting: boolean;\r\n\topenModal: (event: any, category: Category) => void;\r\n\tdeleteCategory: (categoryID: number) => void;\r\n\trequestFinish: () => void;\r\n  requestStart: () => void;\r\n}\r\n\r\nconst PageAdminCategoriesComponent: React.FC<PageAdminCategoriesProps> = (props) => {\r\n\tconst handleDelete = async (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tprops.requestStart();\r\n\t\tconst result = await Axios.post('/api/categories/delete', {\r\n\t\t\tcategoryID: props.category.id!,\r\n\t\t});\r\n\t\tif (result.status) {\r\n\t\t\tprops.deleteCategory(props.category.id!);\r\n\t\t\tprops.requestFinish();\r\n\t\t}\r\n\t};\r\n\r\n\tconst getCriteriaRows = () => {\r\n\t\tif (props.category.criteria) {\r\n\t\t\treturn Object.values(props.category.criteria).map((criteria: Criteria) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ListGroupItem key={criteria.id}>\r\n\t\t\t\t\t\t<h6>{criteria.name}</h6>\r\n\t\t\t\t\t\t<p style={{\r\n\t\t\t\t\t\t\twhiteSpace: 'pre-wrap',\r\n\t\t\t\t\t\t}}>Scored: {criteria.minScore} - {criteria.maxScore}<br />\r\n\t\t\t\t\t\t{criteria.rubric}</p>\r\n\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card style={{\r\n      width: '44rem',\r\n      margin: '12px',\r\n    }}>\r\n      <Card.Body>\r\n\t\t\t\t<Card.Title>\r\n\t\t\t\t\t{props.category.name}\r\n\t\t\t\t\t<span style={{ margin: '0 5px'}}>{props.category.isDefault ? <Badge variant=\"primary\">Default</Badge>: <></>}{props.category.generated ? <Badge variant=\"secondary\">Generated</Badge> : <></>}</span>\r\n\t\t\t\t\t<span>{props.category.isHidden ? <Badge variant=\"primary\">Hidden</Badge>: <></>}</span>\r\n\t\t\t\t\t<br /><h6>{props.category.company}</h6>\r\n\t\t\t\t</Card.Title>\r\n\t\t\t\t<Card.Text style={{\r\n\t\t\t\t\twhiteSpace: 'pre-wrap',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t{props.category.description}\r\n\t\t\t\t</Card.Text>\r\n      </Card.Body>\r\n      <ListGroup className=\"list-group-flush\">\r\n        {getCriteriaRows()}\r\n      </ListGroup>\r\n      <Card.Body>\r\n\t\t\t\t<ButtonGroup>\r\n          <Button\r\n            disabled={props.requesting}\r\n            onClick={(event: any) => props.openModal(event, props.category)}\r\n            size='sm'\r\n            variant='primary'>\r\n            Edit\r\n          </Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tdisabled={props.requesting}\r\n\t\t\t\t\t\tonClick={handleDelete}\r\n\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\tvariant='outline-danger'>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Button>\r\n        </ButtonGroup>\r\n      </Card.Body>\r\n    </Card>\r\n\t);\r\n};\r\n\r\nconst PageAdminCategories = connect(mapStateToProps, mapDispatchToProps)(PageAdminCategoriesComponent);\r\n\r\nexport default PageAdminCategories;\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AppState } from '../../state/Store';\r\nimport Category, { CategoryState, EMPTY_CATEGORY, CategoryCriteriaState } from '../../types/Category';\r\nimport { fillCategories } from '../../state/Category';\r\n\r\nimport PageAdminCategoriesModal from './PageAdminCategoriesModal';\r\nimport PageAdminCategoriesCard from './PageAdminCategoriesCard';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\tcategories: state.categories,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfillCategories: (categories: CategoryState) => {\r\n\t\t\tdispatch(fillCategories(categories));\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface PageAdminCategoriesProps {\r\n\tcategories: CategoryCriteriaState;\r\n\tfillCategories: (categories: CategoryState) => void;\r\n}\r\n\r\ntype State = {\r\n\tmodalCategory: Category;\r\n\tmodalOpen: boolean;\r\n\trequesting: boolean;\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'modal-open', modalCategory: Category }\r\n\t| { type: 'modal-close' }\r\n\t| { type: 'request-start'}\r\n\t| { type: 'request-finish'};\r\n\r\nconst PageAdminCategoriesComponent: React.FC<PageAdminCategoriesProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'modal-open':\r\n        return { ...state, modalOpen: true, modalCategory: action.modalCategory };\r\n      case 'modal-close':\r\n        return { ...state, modalOpen: false };\r\n\t\t\tcase 'request-start':\r\n\t\t\t\treturn { ...state, requesting: true };\r\n\t\t\tcase 'request-finish':\r\n\t\t\t\treturn { ...state, requesting: false };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n\t\tmodalCategory: EMPTY_CATEGORY,\r\n\t\tmodalOpen: false,\r\n\t\trequesting: false,\r\n\t}, undefined);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tfetchCategories();\r\n\t}, []);\r\n\r\n\tconst fetchCategories = async () => {\r\n\t\tdispatch({ type: 'request-start' });\r\n\t\tconst result = await Axios.get('/api/categories/allCategoriesCriteria');\r\n\r\n\t\tif (result.status) {\r\n\t\t\tconst payload: CategoryState = result.data;\r\n\t\t\tprops.fillCategories(payload);\r\n\t\t\tdispatch({ type: 'request-finish' });\r\n\t\t} else {\r\n\t\t\t// TODO error checking\r\n\t\t}\r\n\t};\r\n\r\n\tconst getCategoryCards = () => {\r\n\t\tconst openModal = (event: any, modalCategory: Category) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdispatch({ type: 'modal-open', modalCategory });\r\n\t\t};\r\n\r\n\t\tconst createdCategories:any[] = [];\r\n\t\tconst generatedCategories:any[] = [];\r\n\r\n\t\tfor (const category of Object.values(props.categories.categories)) {\r\n\t\t\tif (category.generated) {\r\n\t\t\t\tgeneratedCategories.push(\r\n\t\t\t\t\t<PageAdminCategoriesCard\r\n\t\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\topenModal={openModal} />\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tcreatedCategories.push(\r\n\t\t\t\t\t<PageAdminCategoriesCard\r\n\t\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\topenModal={openModal} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{createdCategories}\r\n\t\t\t\t{generatedCategories}\r\n\t\t\t</>\r\n\t\t)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={{ margin: '12px' }}>\r\n\t\t\t<h1 style={{ textAlign: 'center' }}>Categories</h1>\r\n\t\t\t<div style={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center'\r\n\t\t\t}}>\r\n\t\t\t\t<Button size='sm' onClick={() => dispatch({ type: 'modal-open', modalCategory: EMPTY_CATEGORY })}>New Category</Button>\r\n\t\t\t</div>\r\n\t\t\t<div style={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\tmaxWidth: 1000,\r\n\t\t\t\tmargin: '12px auto 0',\r\n\t\t\t}}>\r\n\t\t\t\t{getCategoryCards()}\r\n\t\t\t\t<PageAdminCategoriesModal\r\n\t\t\t\t\tmodalOpen={state.modalOpen}\r\n\t\t\t\t\tcategory={state.modalCategory}\r\n\t\t\t\t\tcloseModal={() => dispatch({ type: 'modal-close' })} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst PageAdminCategories = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(PageAdminCategoriesComponent);\r\n\r\nexport default PageAdminCategories;\r\n","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AppState } from '../../state/Store';\r\nimport Project, { TableGroupState, ProjectState } from '../../types/Project';\r\nimport { fetchTableGroups } from '../../state/TableGroup';\r\nimport { fetchProjects } from '../../state/Project';\r\n\r\nimport { fetchUsers } from '../../state/User';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\nimport { UserState } from '../../types/User';\r\nimport { fetchBallots } from '../../state/Ballot';\r\nimport { CategoryCriteriaState } from '../../types/Category';\r\nimport Ballot, { BallotState } from \"../../types/Ballot\";\r\nimport { fetchCategories } from \"../../state/Category\";\r\nimport { fetchCompanies } from \"../../state/Company\";\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\tballots: state.ballots,\r\n\t\tcategories: state.categories,\r\n\t\trequesting: state.requesting,\r\n\t\ttableGroups: state.tableGroups,\r\n\t\tprojects: state.projects,\r\n\t\tusers: state.users,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfetchBallots: () => dispatch(fetchBallots()),\r\n\t\tfetchTableGroups: () => dispatch(fetchTableGroups()),\r\n\t\tfetchProjects: () => dispatch(fetchProjects()),\r\n\t\tfetchUsers: () => dispatch(fetchUsers()),\r\n\t\tfetchCategories: () => dispatch(fetchCategories()),\r\n\t\tfetchCompanies: () => dispatch(fetchCompanies()),\r\n\t\trequestFinish: () => dispatch(requestFinish()),\r\n\t\trequestStart: () => dispatch(requestStart()),\r\n\t};\r\n};\r\n\r\ninterface PageAdminDashboardProps {\r\n\tballots: BallotState;\r\n\tcategories: CategoryCriteriaState;\r\n\trequesting: boolean;\r\n\ttableGroups: TableGroupState;\r\n\tprojects: ProjectState;\r\n\tusers: UserState;\r\n\tfetchBallots: () => void;\r\n\tfetchTableGroups: () => void;\r\n\tfetchProjects: () => void;\r\n\tfetchUsers: () => void;\r\n\tfetchCategories: () => void;\r\n\tfetchCompanies: () => void;\r\n\trequestFinish: () => void;\r\n\trequestStart: () => void;\r\n}\r\n\r\nconst PageAdminDashboardComponent: React.FC<PageAdminDashboardProps> = (props) => {\r\n\tReact.useEffect(() => {\r\n\t\tconst initialFetch = async () => {\r\n\t\t\tprops.requestStart();\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tprops.fetchBallots(),\r\n\t\t\t\tprops.fetchTableGroups(),\r\n\t\t\t\tprops.fetchProjects(),\r\n\t\t\t\tprops.fetchUsers(),\r\n\t\t\t\tprops.fetchCompanies(),\r\n\t\t\t\tprops.fetchCategories()\r\n\t\t\t]);\r\n\t\t\tprops.requestFinish();\r\n\t\t};\r\n\r\n\t\tif (!(Object.values(props.users).length > 0\r\n\t\t\t&& Object.values(props.projects).length > 0\r\n\t\t\t&& Object.values(props.tableGroups).length > 0)) {\r\n\t\t\tinitialFetch();\r\n\t\t}\r\n\t}, []);\r\n\r\n\tif (props.requesting) {\r\n\t\treturn <h1>Loading</h1>;\r\n\t}\r\n\r\n\tconsole.log(props);\r\n\r\n\treturn (\r\n\t\t<div style={{ margin: '12px' }}>\r\n\t\t\t<h1 style={{ textAlign: 'center' }}>Dashboard</h1>\r\n\t\t\t{Object.values(props.projects).map((project: Project) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3>{project.id} - {project.name}</h3>\r\n\t\t\t\t\t\t{project.categoryIDs.map((categoryID: number) => {\r\n\t\t\t\t\t\t\tif (!props.categories.categories[categoryID]) {\r\n\t\t\t\t\t\t\t\treturn <h5>Category ID: {categoryID}</h5>\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (!props.ballots.dProjectScores[project.id!]) {\r\n\t\t\t\t\t\t\t\treturn <h5>{props.categories.categories[categoryID].name}</h5>;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst criteriaIDs: number[] = Object.values(props.categories.categories[categoryID].criteria).map((criteria) => criteria.id);\r\n\t\t\t\t\t\t\tconst criteriaNames: string[] = Object.values(props.categories.categories[categoryID].criteria).map((criteria) => criteria.name);\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h5>{props.categories.categories[categoryID].name}</h5>\r\n\t\t\t\t\t\t\t\t\t<Table striped bordered hover size=\"sm\">\r\n\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Judge</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{criteriaNames.map((name) => <th>{name}</th>)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t{Object.values(props.ballots.dProjectScores[project.id!]).map((ballots: Ballot[]) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet scores: number[] = [];\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let criteriaID of criteriaIDs) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet foundBallot = ballots.find(ballot => ballot.criteriaID == criteriaID);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (foundBallot) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscores.push(foundBallot.score);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (scores.length == criteriaIDs.length) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{props.users[ballots[0].userID].name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{scores.map(score => <td>{score}</td>)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{scores.reduce((a, b) => a + b, 0)}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nconst PageAdminDashboard = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(PageAdminDashboardComponent);\r\n\r\nexport default PageAdminDashboard;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport User from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { loginUser } from '../../state/Account';\r\n\r\nimport AdminNavigation from './AdminNavigation';\r\nimport PageAdminUsers from './PageAdminUsers';\r\nimport PageAdminProjects from './PageAdminProjects';\r\nimport PageAdminCategories from './PageAdminCategories';\r\nimport PageAdminDashboard from \"./PageAdminDashboard\";\r\n\r\nexport const adminRoute = '/admin';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    loginUser: (user: User) => {\r\n      dispatch(loginUser(user));\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageAdminProps {\r\n  account: User;\r\n  loginUser: (user: User) => void;\r\n}\r\n\r\ntype State = {\r\n  requesting: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'request-start'}\r\n  | { type: 'request-finish'};\r\n\r\nconst PageAdminComponent: React.FC<PageAdminProps> = (props) => {\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'request-start':\r\n        return { ...state, requesting: true };\r\n      case 'request-finish':\r\n        return { ...state, requesting: false };\r\n      default:\r\n        return state;\r\n    }\r\n  }, {\r\n    requesting: false,\r\n  }, undefined);\r\n\r\n  return (\r\n    <div>\r\n      <AdminNavigation />\r\n      <Switch>\r\n        <Route path={`${adminRoute}/users`} component={PageAdminUsers} />\r\n        <Route path={`${adminRoute}/categories`} component={PageAdminCategories} />\r\n        <Route path={`${adminRoute}/dashboard`} component={PageAdminDashboard} />\r\n        <Route exact path={`${adminRoute}`} component={PageAdminProjects} />\r\n        <Redirect to={`${adminRoute}`} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageAdmin = connect(mapStateToProps, mapDispatchToProps)(PageAdminComponent);\r\n\r\nexport default PageAdmin;\r\n","import * as qs from 'querystring';\r\nimport Axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport User from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { loginUser } from '../../state/Account';\r\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\r\nimport { UIError } from '../../types/Common';\r\nimport { Redirect } from 'react-router';\r\nimport { fetchCompanies } from '../../state/Company';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    account: state.account,\r\n    companies: state.companies,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    fetchCompanies: () => {\r\n      dispatch(fetchCompanies());\r\n    },\r\n    loginUser: (user: User) => {\r\n      dispatch(loginUser(user));\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageRegisterProps {\r\n  account: User;\r\n  companies: string[];\r\n  loginUser: (user: User) => void;\r\n  fetchCompanies: () => void;\r\n}\r\n\r\ninterface Inputs {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  passwordConfirm: string;\r\n  company: string;\r\n}\r\n\r\ntype State = {\r\n  requesting: boolean;\r\n  inputs: Inputs;\r\n  error: UIError;\r\n  success: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'change-error', error: UIError }\r\n  | { type: 'change-inputs', inputs: Partial<Inputs> }\r\n  | { type: 'request-start'}\r\n  | { type: 'request-success'}\r\n  | { type: 'request-finish'};\r\n\r\nconst PageRegisterComponent: React.FC<PageRegisterProps> = (props) => {\r\n  const initialState = {\r\n    requesting: false,\r\n    inputs: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      passwordConfirm: '',\r\n      company: '',\r\n    },\r\n    error: {\r\n      name: '',\r\n      message: '',\r\n    },\r\n    success: false,\r\n  };\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'change-error':\r\n        return {\r\n          ...state,\r\n          error: action.error,\r\n          requesting: false,\r\n        };\r\n      case 'change-inputs':\r\n        return { ...state, inputs: {\r\n          ...state.inputs,\r\n          ...action.inputs,\r\n        }};\r\n      case 'request-start':\r\n        return {\r\n          ...state,\r\n          requesting: true,\r\n          error: { name: '', message: '' },\r\n        };\r\n      case 'request-success':\r\n        return { ...state, success: true, requesting: false };\r\n      case 'request-finish':\r\n        return { ...state, requesting: false, success: false };\r\n      default:\r\n        return state;\r\n    }\r\n  }, initialState, undefined);\r\n\r\n  React.useEffect(() => {\r\n    props.fetchCompanies();\r\n  }, []);\r\n\r\n  const handleRegister = async (event: any) => {\r\n    event.preventDefault();\r\n    const pattern = /^[a-zA-Z0-9\\-_]+(\\.[a-zA-Z0-9\\-_]+)*@[a-z0-9]+(-[a-z0-9]+)*(\\.[a-z0-9]+(-[a-z0-9]+)*)*\\.[a-z]{2,4}$/;\r\n    if (state.inputs.name.length === 0\r\n      || state.inputs.email.length === 0\r\n      || state.inputs.password.length === 0\r\n      || state.inputs.passwordConfirm.length === 0) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Creating Account',\r\n          message: 'One or more fields were left blank.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    if (!pattern.test(state.inputs.email)) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Creating Account',\r\n          message: 'Your email is invalid.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    if (state.inputs.password !== state.inputs.passwordConfirm) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Creating Account',\r\n          message: 'Your passwords do not match.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: 'request-start' });\r\n    const registerResult = await Axios.post('/auth/signup', qs.stringify({\r\n      'name': state.inputs.name,\r\n      'email': state.inputs.email,\r\n      'password': state.inputs.password,\r\n      'company': state.inputs.company,\r\n    }), {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n    });\r\n\r\n    if (!registerResult.data.status) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Creating Account',\r\n          message: 'Account already exists.',\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: 'request-success' });\r\n  }\r\n\r\n  const genErrorBox = () => {\r\n    return state.error.name\r\n      ? <Alert variant=\"danger\">\r\n          <strong>{state.error.name}</strong>\r\n          <div>{state.error.message}</div>\r\n        </Alert>\r\n      : null\r\n  };\r\n\r\n\r\n  if (state.success) {\r\n    return <Redirect to='/login' />;\r\n  }\r\n\r\n  const _getCompanyList = () => {\r\n    return props.companies.map((company: string) => {\r\n      return (\r\n        <option key={company}>{company}</option>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      margin: '0 auto',\r\n      maxWidth: 400,\r\n    }}>\r\n      <h1 style={{\r\n        textAlign: 'center',\r\n        paddingBottom: 10,\r\n      }}>Register</h1>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                name: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.name}\r\n            type=\"text\"\r\n            placeholder=\"George P. Beardell\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                email: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.email}\r\n            type=\"email\"\r\n            placeholder=\"beardell@hack.gt\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                password: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.password}\r\n            type=\"password\"\r\n            placeholder=\"******\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Password (confirm)</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                passwordConfirm: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.passwordConfirm}\r\n            type=\"password\"\r\n            placeholder=\"******\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Company/Group Name</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                company: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.company}\r\n            type=\"text\"\r\n            placeholder=\"Company\">\r\n            {_getCompanyList()}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleRegister}\r\n          block>{state.requesting\r\n            ? <Spinner animation='border' role='status' size='sm' />\r\n            : 'Register'}</Button>\r\n        {genErrorBox()}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageRegister = connect(mapStateToProps, mapDispatchToProps)(PageRegisterComponent);\r\n\r\nexport default PageRegister;\r\n","import React from 'react';\r\nimport { AppState } from '../state/Store';\r\nimport User, { UserRole, getRoleString } from '../types/User';\r\nimport { loginUser } from '../state/Account';\r\nimport { connect } from 'react-redux';\r\nimport PageProjects from './expo/PageProjects';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    loginUser: (user: User) => {\r\n      dispatch(loginUser(user));\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageHomeProps {\r\n  account: User;\r\n  loginUser: (user: User) => void;\r\n}\r\n\r\ntype State = {\r\n  requesting: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'request-start'}\r\n  | { type: 'request-finish'};\r\n\r\nconst containerStyle: React.CSSProperties = {\r\n  maxWidth: 720,\r\n  margin: '0 auto',\r\n};\r\n\r\nconst PageHomeComponent: React.FC<PageHomeProps> = (props) => {\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'request-start':\r\n        return { ...state, requesting: true };\r\n      case 'request-finish':\r\n        return { ...state, requesting: false };\r\n      default:\r\n        return state;\r\n    }\r\n  }, {\r\n    requesting: false,\r\n  }, undefined);\r\n\r\n  const header = <h1>Welcome To Ballot!</h1>;\r\n  const yourRole = <strong>Your Status: {getRoleString(props.account.role)}</strong>;\r\n  const adminBlurb = <p>Hello {props.account.name}! Thank you for using Ballot! As an owner, you have full control over every aspect of the judging and expo process. You will be able to assign tables, judges, and how projects are scored. This also means you have the potential to cause issues if you are not careful. Please make sure you have read through all the user guides before messing with the available tools.</p>\r\n  const mobileBlurb = <p>Ballot works on devices of all screen sizes! If you are using a tablet or laptop, you can use the navigation bar to navigation throughout this application. If you are on a mobile device, simply click the menu button on the upper right to access all the pages.</p>\r\n  const projectsBlurb = <p>To view all the projects at this hackathon, go to the projects page. Each project has an expo number and table number. If you tap/click on the project, you will be directed to the Devpost entry, where the group will go into more detail about the project, present videos and images, and show where you can see their project.</p>;\r\n  const judgingBlurb = <p>If you go to the judging page, you will be able to judge projects as they are assigned to you. Projects will automatically be assigned to you, so all you have to do is wait for the next project to pop in. Ballot will guide you through the process and will provide you with a timer to keep you on track. You will also be presented with the judging criteria and rubric while you're scoring. </p>\r\n  const profileBlurb = <p>Make sure to go to your profile to add any skills, programming languages, fields, or other keywords so that Ballot can try to optimize the projects you receive to match your experience and expertise!</p>\r\n  const pendingBlurb = <p>Congratulations! You just signed up for an account; however, you are not yet approved to judge. Your page will automatically update once the admins have approved you to judge!</p>\r\n\r\n  const ownerBody = (\r\n    <div style={containerStyle}>\r\n      {header}\r\n      {yourRole}\r\n      {adminBlurb}\r\n      {mobileBlurb}\r\n\r\n    </div>\r\n  );\r\n  const adminBody = (\r\n    <div style={containerStyle}>\r\n      {header}\r\n      {yourRole}\r\n      {adminBlurb}\r\n      {mobileBlurb}\r\n    </div>\r\n  );\r\n  const judgeBody = (\r\n    <div style={containerStyle}>\r\n      {header}\r\n      {yourRole}\r\n      {mobileBlurb}\r\n      {projectsBlurb}\r\n      {judgingBlurb}\r\n      {/* {profileBlurb} */}\r\n    </div>\r\n  );\r\n  const pendingBody = (\r\n    <div style={containerStyle}>\r\n      {header}\r\n      {yourRole}\r\n      {mobileBlurb}\r\n      {projectsBlurb}\r\n      {pendingBlurb}\r\n      {/* {profileBlurb} */}\r\n    </div>\r\n  );\r\n\r\n  switch (props.account.role) {\r\n    case UserRole.Owner:\r\n      return ownerBody;\r\n    case UserRole.Admin:\r\n      return adminBody;\r\n    case UserRole.Judge:\r\n      return judgeBody;\r\n    case UserRole.Pending:\r\n      return pendingBody;\r\n  }\r\n\r\n  return (\r\n    <PageProjects />\r\n  );\r\n};\r\n\r\nconst PageHome = connect(mapStateToProps, mapDispatchToProps)(PageHomeComponent);\r\n\r\nexport default PageHome;\r\n","import React from 'react';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <footer style={{\r\n      textAlign: 'center',\r\n      margin: '50px 0',\r\n    }}\r\n      >Made with <span role='img' aria-label='love'>🚄</span> by the HackGTeam\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Axios from 'axios';\nimport React from 'react';\nimport { AppState } from './state/Store';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginUser } from './state/Account';\n\nimport Navigation from './components/Navigation';\nimport PageLogin from './components/account/PageLogin';\nimport PageLogout from './components/account/PageLogout';\nimport PageProfile from './components/account/PageProfile';\nimport PageProjects from './components/expo/PageProjects';\nimport PageJudging from './components/judge/PageJudging';\nimport PageAdmin from './components/admin/PageAdmin';\nimport PageRegister from './components/account/PageRegister';\nimport PageHome from './components/PageHome';\nimport User, { roleStringToEnum, UserRole } from './types/User';\nimport Footer from './components/Footer';\nimport { Spinner } from 'react-bootstrap';\n\ninterface AppProps {\n  account: User;\n  loginUser: (user: User) => void;\n}\n\nconst AppComponent: React.FC<AppProps> = (props) => {\n  const AuthRoute = ({component, roleNeeded, curRole, ...rest}: any) => {\n    const routeComponent = (props: any) => (\n        curRole >= roleNeeded\n          ? React.createElement(component, props)\n          : <Redirect to={{ pathname: '/login' }} />\n    );\n\n    return <Route {...rest} render={routeComponent} />;\n  };\n\n  const [loginFetched, changeLoginFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    const checkUserData = async () => {\n      const result = await Axios.get('/auth/user_data');\n\n      props.loginUser({\n        ...result.data,\n        role: roleStringToEnum(result.data.role),\n      });\n\n      changeLoginFetched(true);\n    };\n\n    checkUserData();\n  }, [props.loginUser]);\n\n  if (!loginFetched) {\n    return <Spinner animation='grow' />\n  }\n\n  return (\n    <>\n      <Router>\n        <Navigation account={props.account} />\n        <div style={{\n          padding: 20,\n        }}>\n          <Switch>\n            <Route path='/login' component={PageLogin} />\n            <Route path='/logout' component={PageLogout} />\n            <Route path='/register' component={PageRegister} />\n            <AuthRoute path='/profile' component={PageProfile} roleNeeded={UserRole.Pending} curRole={props.account.role} />\n            <AuthRoute path='/projects' component={PageProjects} roleNeeded={UserRole.Pending} curRole={props.account.role} />\n            <AuthRoute path='/judging' component={PageJudging} roleNeeded={UserRole.Judge} curRole={props.account.role} />\n            <AuthRoute path='/admin' component={PageAdmin} roleNeeded={UserRole.Admin} curRole={props.account.role} />\n            <Route path='/' exact component={PageHome} />\n            <Redirect to='/' />\n          </Switch>\n        </div>\n      </Router>\n      <Footer />\n    </>\n  );\n};\n\n// Redux\nconst mapStateToProps = (state: AppState) => {\n  return {\n    account: state.account,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    loginUser: (user: User) => {\n      dispatch(loginUser(user));\n    },\n  };\n};\n\n// Container\nconst App = connect(mapStateToProps, mapDispatchToProps)(AppComponent);\n\nexport default App;\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport users from './User';\r\nimport account from './Account';\r\nimport categories from './Category';\r\nimport projects from './Project';\r\nimport ballots from './Ballot';\r\nimport companies from './Company';\r\nimport requesting from './Request';\r\nimport tableGroups from './TableGroup';\r\nimport socketMiddleware from './Socket';\r\nimport User, { UserState } from '../types/User';\r\nimport { CategoryState, CategoryCriteriaState } from '../types/Category';\r\nimport { ProjectState, TableGroupState } from '../types/Project';\r\nimport { BallotState } from '../types/Ballot';\r\n\r\nconst reducer = combineReducers({\r\n  account,\r\n  ballots,\r\n  categories,\r\n  companies,\r\n  projects,\r\n  requesting,\r\n  tableGroups,\r\n  users,\r\n});\r\n\r\nconst composeEnhancers = typeof window === 'object' &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n\r\nexport default createStore(\r\n  reducer,\r\n  compose(\r\n    applyMiddleware(\r\n      thunk,\r\n      socketMiddleware(),\r\n    ),\r\n    composeEnhancers(),\r\n  ),\r\n);\r\n\r\nexport interface AppState {\r\n  account: User;\r\n  ballots: BallotState;\r\n  categories: CategoryCriteriaState;\r\n  companies: string[];\r\n  projects: ProjectState;\r\n  requesting: boolean;\r\n  tableGroups: TableGroupState;\r\n  users: UserState;\r\n}\r\n","import io from 'socket.io-client';\r\n\r\n// From http://nmajor.com/posts/using-socket-io-with-redux-websocket-redux-middleware\r\nexport default function socketMiddleware() {\r\n  let socket = io(window.location.origin);\r\n\r\n  function refreshSocket() {\r\n    socket = io({'forceNew': true });\r\n  }\r\n\r\n  return ({ dispatch }: { dispatch: any }) => (next: any) => (action: any) => {\r\n    if (typeof action === 'function') {\r\n      return next(action);\r\n    }\r\n\r\n    const {\r\n      event,\r\n      leave,\r\n      emit,\r\n      payload,\r\n      handle,\r\n      update,\r\n      ...rest\r\n    } = action;\r\n\r\n    // console.log(action);\r\n\r\n    if (update) {\r\n      refreshSocket();\r\n      return;\r\n    }\r\n\r\n    if (!event) {\r\n      return next(action);\r\n    }\r\n\r\n    if (leave) {\r\n      socket.removeAllListeners();\r\n    }\r\n\r\n    if (emit) {\r\n      socket.emit(event, payload);\r\n      return;\r\n    }\r\n\r\n    let handleEvent = handle;\r\n    if (typeof handleEvent === 'string') {\r\n      handleEvent = (result: any) => dispatch({ type: handle, result, ...rest });\r\n    }\r\n\r\n    return socket.on(event, handleEvent);\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport store from './state/Store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}