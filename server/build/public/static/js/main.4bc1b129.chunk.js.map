{"version":3,"sources":["serviceWorker.ts","types/User.ts","state/Account.ts","components/Navigation.tsx","components/account/PageLogin.tsx","components/account/PageLogout.tsx","components/account/PageProfile.tsx","state/Project.ts","state/Category.ts","state/TableGroup.ts","components/expo/PageProjects.tsx","types/Ballot.ts","types/Project.ts","state/Request.ts","state/Ballot.ts","components/judge/PageJudging.tsx","components/admin/AdminNavigation.tsx","state/User.ts","components/admin/PageAdminUsersModal.tsx","components/admin/PageAdminUserCard.tsx","state/Company.ts","components/admin/PageAdminUsers.tsx","components/admin/PageAdminProjectsUploadModal.tsx","components/admin/PageAdminProjectsManageTableGroupsModalGroupRow.tsx","components/admin/PageAdminProjectsManageTableGroupsModal.tsx","components/admin/PageAdminProjectsEpicenter.tsx","components/admin/PageAdminProjectsAddProjectModal.tsx","components/admin/PageAdminProjectsEpicenterProjectDot.tsx","components/admin/PageAdminProjectsEpicenterEmptyDot.tsx","components/admin/PageAdminProjects.tsx","types/Category.ts","components/admin/PageAdminCategoriesModalCriteria.tsx","components/admin/PageAdminCategoriesModal.tsx","components/admin/PageAdminCategoriesCard.tsx","components/admin/PageAdminCategories.tsx","components/admin/PageAdmin.tsx","components/account/PageRegister.tsx","components/PageHome.tsx","components/Footer.tsx","App.tsx","state/Store.ts","state/Socket.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","UserRole","EMPTY_USER","id","name","email","company","role","Pending","isJudging","tags","clientUserToServerUser","user","Object","objectSpread","getRoleEnum","serverDataToClientUser","data","roleStringToEnum","Error","Owner","Admin","Judge","None","getRoleString","UPDATE_USER","LOGIN_USER","LOGOUT_USER","noAccountUser","loginUser","userToLogin","type","withRouter","props","actualPage","pageString","pathname","split","concat","_React$useState","React","useState","_React$useState2","slicedToArray","curPage","changeCurPage","useEffect","navTo","route","history","push","react_default","a","createElement","Navbar","collapseOnSelect","bg","variant","expand","react_router_dom","to","style","textDecoration","onClick","Brand","Toggle","aria-controls","Collapse","leftNav","Nav","className","map","navItem","Link","key","eventKey","active","onSelect","genLeftNav","account","PageLogin","connect","state","dispatch","updateSocket","update","_React$useReducer","useReducer","action","error","requesting","inputs","message","success","password","undefined","_React$useReducer2","handleLogin","_ref","asyncToGenerator","regenerator_default","mark","_callee","event","loginResponse","payload","wrap","_context","prev","next","preventDefault","length","abrupt","Axios","post","qs","toLowerCase","headers","Content-Type","sent","status","stop","_x","apply","this","arguments","react_router","margin","maxWidth","textAlign","paddingBottom","Form","Group","Control","disabled","onChange","target","value","placeholder","Button","block","Spinner","animation","size","Alert","sleep","ms","Promise","resolve","setTimeout","PageLogout","logoutUser","changeSuccess","all","get","logout","PageProfile","UPDATE_PROJECT","DELETE_PROJECT","FILL_PROJECTS","APPEND_FILL_PROJECTS","fillProjects","projects","fetchProjects","result","t0","console","log","UPDATE_CATEGORY","DELETE_CATEGORY","FILL_CATEGORIES","UPDATE_CRITERIA","DELETE_CRITERIA","FILL_CRITERIA","updateCategory","categories","fillCategories","UPDATE_TABLE_GROUP","DELETE_TABLE_GROUP","FILL_TABLE_GROUPS","fillTableGroups","tableGroups","fetchTableGroups","BallotStatus","PageProjects","modalOpen","filterBy","categoryID","searchText","search","fetchCategories","initialFetch","_ref2","_callee2","_context2","Fragment","width","display","alignItems","justifyContent","flexWrap","flexGrow","values","filter","project","categoryIDs","includes","Badge","tableGroup","tableGroupID","href","devpostURL","Card","height","Body","Title","color","Subtitle","expoNumber","tableNumber","Text","getProjectCards","Modal","show","onHide","Header","closeButton","Check","checked","label","category","EMPTY_PROJECT","EMPTY_TABLE_GROUP","shortcode","REQUEST_START","REQUEST_FINISH","requestStart","requestFinish","FILL_BALLOTS","UPDATE_BALLOTS","DELETE_BALLOTS","CLEAR_BALLOTS","QUEUE_PROJECT","QUEUED_PROJECT","SCORE_PROJECT","GOT_PROJECT","BUSY_PROJECT","SKIP_PROJECT","MISSING_PROJECT","fillBallots","ballots","clearBallots","initialBallotState","dJudgeQueues","dJudgeProjectBallotsMap","dProjectScores","JudgingState","PageJudging","updateBallots","startBallots","userID","projectID","_x2","missingBallots","_ref5","_callee5","_context5","_x5","busyBallots","_ref6","_callee6","_context6","_x6","skipBallots","_ref4","_callee4","_context4","_x4","criteria","currentProject","judgingState","Loading","updateBallotState","firstBallot","Started","JudgeProject","Assigned","FindProject","NoProject","fetchNextProject","_ballots","_getSkipButtons","marginTop","ButtonGroup","NextProject","slug","flexDirection","padding","fontSize","react_svgmt","path","selector","fill","_renderFindProject","_handleScoreBallots","scoreObject","reduce","dict","ballot","score","criteriaID","ballotID","min","max","whiteSpace","rubric","minScore","maxScore","defineProperty","_renderJudgeProject","exclamations","Math","floor","random","_renderNextProject","link","activeKey","Item","adminRoute","ADD_USER","DELETE_USER","FILL_USERS","updateUser","updatedUser","fetchUsers","toFill","_i","_Object$values","users","PageAdminUsersModal","companies","_handleSaveChanges","closeModal","Label","ButtonToolbar","ToggleButtonGroup","ToggleButton","as","Footer","PageAdminUserCard","approve","includeExclude","include","_x3","openModal","UPDATE_COMPANIES","fetchCompanies","PageAdminUsers","initialState","newUser","modalUser","keys","admin_PageAdminUserCard","getUserCards","admin_PageAdminUsersModal","requiredHeaders","PageAdminProjectsUploadModal","useSelfAssign","enabled","inputNumberExpos","numberExpos","totalProjectsToAccountFor","ceil","csv","inputTableGroups","totalProjectsAccountedFor","counter","curVal","csvHeaderIndicies","effectInputTableGroups","initialTableGroups","fetchCategoriesResult","handleUpload","generatedCategories","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","row","categoriesString","splitCategories","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","existingCategoriesArray","_i2","_Array$from","generatedCategory","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","categoriesToSend","addGeneratedCategoriesResult","onlyNonGenerated","newCategories","nameToCategoryMapping","defaultCategoryIDs","projectsToSend","tableGroupNameMapping","allocatedTables","i","csvRow","tableParts","allocatedRows","csvRowNumber","_i3","_tableGroups","_tableNumber","finalTableGroupName","tableGroupNameToObject","_i4","_Object$keys","tableKey","_csvRow2","parts","devpostDesiredCategories","batchUploadResult","Set","Symbol","iterator","done","add","trim","return","finish","t1","array","generated","Array","from","delete","t2","categoryName","isDefault","description","currentCategory","sort","b","parseInt","throwError","parseResult","csvData","csvHeaders","_i5","_requiredHeaders","header","headerIndex","indexOf","splice","fileList","files","file","endsWith","Papa","parse","complete","skipEmptyLines","getFileUploadForm","getPropertiesForm","PageAdminProjectsManageTableGroupsModalGroupRow","handleChange","updateTableGroup","marginBottom","Row","Col","md","backgroundColor","test","deleteTableGroup","SortType","PageAdminProjectsManageTableGroupsModal","currentNewID","tableGroupsEffect","handleSaveChanges","_state$tableGroups","rest","objectWithoutProperties","PageAdminProjectsManageTableGroupsModal_toPropertyKey","admin_PageAdminProjectsManageTableGroupsModalGroupRow","getForm","newGroup","PageAdminProjectsAddProjectModal","PageAdminProjectsEpicenterProjectDot","ref","useRef","createRef","onContextMenu","current","background","opacity","dimmed","borderRadius","lineHeight","selectedProject","userSelect","MozUserSelect","cursor","handleSelectedProjectChange","loading","gridRow","gridColumn","categoryScoreArrays","_allUserBallots","userBallots","err","Overlay","Popover","badges","badgeVariant","health","scoresArray","total","join","_getOverlay","PageAdminProjectsEpicenterEmptyDot","minWidth","borderWidth","borderStyle","solid","ModalType","PageAdminProjectsEpicenter","queueProject","queueProjectEmit","emit","eventID","uuidv4","subscribeQueueProject","handle","subscribeQueuedProject","subscribeGotProject","subscribeScoreProject","subscribeSkipProject","subscribeMissingProject","subscribeBusyProject","unsubscribeAll","leave","currentExpo","judgeSelectedProject","sortBy","powerGoodness","goodness","powerVariance","variance","powerSkip","skip","Location","projectsWithHealth","calculateProjectHealth","totalHealth","allUserBallots","defaultCategoryID","judgeQueue","queuedProject","activeProjectID","otherProjectIDs","document","onkeypress","userIDs","judgingUsers","randomUserID","canAssignProjects","lowestHealth","sameLowestHealthProjects","autoAssign","dismissPopover","keydown","addEventListener","removeEventListener","Accordion","AverageScore","ProjectHealth","TimesJudged","buttons","InputGroup","marginRight","FormControl","_handleSelectedProjectChange","projectCircles","_categoryScoreArrays","Submitted","aCatScoreArrays","bCatScoreArrays","aScore","bScore","output","admin_PageAdminProjectsEpicenterProjectDot","_getProjects","_handleJudgeSelectedProject","toShow","flexFlow","toReturn","pending","admin_PageAdminProjectsEpicenterEmptyDot","other","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","_iterator4","reverse","_getDerivedProjects","_getJudges","PageAdminProjects","fetchBallots","modal","UploadProjects","ManageTableGroups","AddProject","admin_PageAdminProjectsEpicenter","admin_PageAdminProjectsUploadModal","admin_PageAdminProjectsManageTableGroupsModal","admin_PageAdminProjectsAddProjectModal","EMPTY_CATEGORY","criteriaDict","createEmptyCriteria","createPlaceholderCriteria","PageAdminCategoriesModalCriteria","updateCriteria","deleteCriteria","PageAdminCategoriesModal","currentNewCategoryID","handleNewCriteria","_state$category$crite","PageAdminCategoriesModal_toPropertyKey","admin_PageAdminCategoriesModalCriteria","getCriteriaRows","PageAdminCategories","deleteCategory","handleDelete","ListGroup","ListGroupItem","modalCategory","createdCategories","PageAdminCategoriesCard","getCategoryCards","admin_PageAdminCategoriesModal","PageAdmin","admin_AdminNavigation","component","exact","PageRegister","passwordConfirm","handleRegister","pattern","containerStyle","PageHome","yourRole","adminBlurb","mobileBlurb","projectsBlurb","judgingBlurb","pendingBlurb","ownerBody","adminBody","judgeBody","pendingBody","expo_PageProjects","aria-label","App","AuthRoute","roleNeeded","curRole","assign","render","loginFetched","changeLoginFetched","checkUserData","components_Navigation","components_Footer","reducer","combineReducers","_ret","_newDProjectScores$pr","_newDProjectScores1$p","judgeID","orderedJudgeBallots","Date","updatedAt","getTime","v","ballotIDs","forEach","judgeQueueObject","dJudgeProjectBallotsMap1","newState","newBallots","removedBallotIDs","firstKey","firstKey2","ballotsArray","firstBallot2","userID2","projectID2","newDProjectScores","toConsumableArray","firstKey3","ballotsArray1","firstBallot3","userID3","projectID3","otherProjectIDs1","newDProjectScores1","ballotsToRemove","betterState","ballots1","_state$categories","_action$categoryID","resCategory","Category_toPropertyKey","criteriaState","categoryState","_Object$values2","critera","_state$categories$sta","_action$criteriaID","resCCriteria","_state$criteria","_action$criteriaID2","resCriteria","_action$projectID","_toPropertyKey","_action$tableGroupID","TableGroup_toPropertyKey","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","socket","io","origin","forceNew","removeAllListeners","handleEvent","on","socketMiddleware","ReactDOM","es","store","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0PAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+DCRMC,oNAYL,IAAMC,EAAmB,CAC9BC,IAAK,EACLC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,KAAMN,EAASO,QACfC,WAAW,EACXC,KAAM,IAGD,SAASC,EAAuBC,GACrC,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFD,EADL,CAEEH,UAAWG,EAAKL,OAASN,EAASO,SAAkBI,EAAKH,UACzDF,KAAMQ,EAAYH,EAAKL,QAIpB,SAASS,EAAuBC,GACrC,GAAIA,EAAKd,IAAMc,EAAKb,MAAQa,EAAKZ,OAASY,EAAKV,MAAQU,EAAKP,KAC1D,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACFI,EADL,CAEEV,KAAMW,EAAiBD,EAAKV,QAG9B,MAAM,IAAIY,MAAM,yCAIb,SAASD,EAAiBX,GAC/B,OAAQA,GACN,IAAK,QACH,OAAON,EAASmB,MAClB,IAAK,QACH,OAAOnB,EAASoB,MAClB,IAAK,QACH,OAAOpB,EAASqB,MAClB,IAAK,UACH,OAAOrB,EAASO,QAClB,QACE,OAAOP,EAASsB,MAIf,SAASC,EAAcjB,GAC5B,OAAQA,GACN,KAAKN,EAASmB,MACZ,MAAO,QACT,KAAKnB,EAASoB,MACZ,MAAO,QACT,KAAKpB,EAASqB,MACZ,MAAO,QACT,KAAKrB,EAASO,QACZ,MAAO,UACT,KAAKP,EAASsB,KACZ,MAAO,OACT,QACE,OAAO,MAIN,SAASR,EAAYR,GAC1B,OAAQA,GACN,KAAKN,EAASmB,MACZ,MAAO,QACT,KAAKnB,EAASoB,MACZ,MAAO,QACT,KAAKpB,EAASqB,MACZ,MAAO,QACT,KAAKrB,EAASO,QACZ,MAAO,UACT,KAAKP,EAASsB,KACZ,MAAO,OACT,QACE,OAAO,MC7FN,IAAME,EAAc,sBACdC,EAAa,qBACbC,EAAc,sBAErBC,EAAsB,CAC1BrB,KAAMN,EAASsB,MAQV,SAASM,EAAUC,GACxB,MAAO,CAAEC,KAAML,EAAYd,KAAMkB,yBCmHpBE,cAnH+B,SAACC,GAC7C,IAAMC,EAAa,WACjB,IAAMC,EAAaF,EAAMnC,SAASsC,SAASC,MAAM,KAAK,GACtD,MAAsB,KAAfF,EAAoB,IAApB,IAAAG,OAA8BH,IAHgBI,EAMtBC,IAAMC,SAASP,KANOQ,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA0B,EAAA,GAMhDK,EANgDF,EAAA,GAMvCG,EANuCH,EAAA,GAQvDF,IAAMM,UAAU,WACdD,EAAcX,MACb,CAACD,EAAMnC,WAEV,IAAMiD,EAAQ,SAACC,GACbf,EAAMgB,QAAQC,KAAKF,GACnBH,EAAcX,MAoFhB,OACEiB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MACvDP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,GAAI,IACJC,MAAO,CAAEC,eAAgB,QACzBC,QAAS,kBAAMhB,EAAM,OACrBI,EAAAC,EAAAC,cAACC,EAAA,EAAOU,MAAR,qBAEFb,EAAAC,EAAAC,cAACC,EAAA,EAAOW,OAAR,CAAeC,gBAAc,eAC7Bf,EAAAC,EAAAC,cAACC,EAAA,EAAOa,SAAR,KA1Fe,SAAC5D,GAClB,IAAI6D,EAA8B,GAClC,OAAQ7D,GACN,KAAKN,EAASmB,MACd,KAAKnB,EAASoB,MACZ+C,EAAU,CACR,CAAC,OAAQ,KACT,CAAC,UAAW,YACZ,CAAC,WAAY,aACb,CAAC,QAAS,WAEZ,MACF,KAAKnE,EAASqB,MACZ8C,EAAU,CACR,CAAC,OAAQ,KACT,CAAC,UAAW,YACZ,CAAC,WAAY,cAEf,MACF,KAAKnE,EAASO,QACZ4D,EAAU,CACR,CAAC,OAAQ,KACT,CAAC,WAAY,cAEf,MACF,QACEA,EAAU,CACR,CAAC,WAAY,MAKnB,OACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAKC,UAAU,WACdF,EAAQG,IAAI,SAACC,GACZ,OACErB,EAAAC,EAAAC,cAACgB,EAAA,EAAII,KAAL,CACEC,IAAKF,EAAQ,GACbG,SAAUH,EAAQ,GAClBI,OAAQJ,EAAQ,KAAO5B,EACvBiC,SAAU,kBAAM9B,EAAMyB,EAAQ,MAC7BA,EAAQ,OAkDZM,CAAW7C,EAAM8C,QAAQxE,MACb0B,EAAM8C,QAAQxE,MA1CnBN,EAASO,QAEjB2C,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KAOElB,EAAAC,EAAAC,cAACgB,EAAA,EAAII,KAAL,CACEG,OAtFQ,YAsFgBhC,EACxB+B,SAAU,SACVE,SAAU,kBAAM9B,EAxFR,aAqFV,WAUFI,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACgB,EAAA,EAAII,KAAL,CACEG,OAlGO,WAkGgBhC,EACvB+B,SAAU,QACVE,SAAU,kBAAM9B,EApGT,YAiGT,0DC2GKiC,EAFGC,YArMM,SAACC,GACvB,MAAO,CACLH,QAASG,EAAMH,UAIQ,SAACI,GAC1B,MAAO,CACLtD,UAAW,SAACjB,GAAD,OAAgBuE,EAAStD,EAAUjB,KAC9CwE,aAAc,WACZD,EFGG,CAAEE,QAAQ,OEwLDJ,CA7JmC,SAAChD,GACpD,IAD8DqD,EAcpC9C,IAAM+C,WAAW,SAACL,EAAcM,GACxD,OAAQA,EAAOzD,MACb,IAAK,eACH,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEEO,MAAOD,EAAOC,MACdC,YAAY,IAEhB,IAAK,gBACH,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBS,OAAO9E,OAAAC,EAAA,EAAAD,CAAA,GACrBqE,EAAMS,OACNH,EAAOG,UAEd,IAAK,gBACH,OAAO9E,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEEQ,YAAY,EACZD,MAAO,CAAErF,KAAM,GAAIwF,QAAS,MAEhC,IAAK,iBACH,OAAO/E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,EAAOG,SAAS,IACjD,IAAK,kBACH,OAAOhF,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,EAAOG,SAAS,IACjD,QACE,OAAOX,IArCQ,CACnBQ,YAAY,EACZC,OAAQ,CACNtF,MAAO,GACPyF,SAAU,IAEZL,MAAO,CACLrF,KAAM,GACNwF,QAAS,IAEXC,SAAS,QA6BME,GAxC6CC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GAcvDJ,EAduDc,EAAA,GAchDb,EAdgDa,EAAA,GAmDxDC,EAAW,eAAAC,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAL,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAClBN,EAAMO,iBAC4B,IAA9B5B,EAAMS,OAAOtF,MAAM0G,QAAiD,IAAjC7B,EAAMS,OAAOG,SAASiB,OAF3C,CAAAJ,EAAAE,KAAA,eAGhB1B,EAAS,CACPpD,KAAM,eACN0D,MAAO,CACLrF,KAAM,mBACNwF,QAAS,yCAPGe,EAAAK,OAAA,wBAYlB7B,EAAS,CAAEpD,KAAM,kBAZC4E,EAAAE,KAAA,EAaUI,IAAMC,KAAK,cAAeC,YAAa,CACjE9G,MAAS6E,EAAMS,OAAOtF,MAAM+G,cAC5BtB,SAAYZ,EAAMS,OAAOG,WACvB,CACFuB,QAAS,CACPC,eAAgB,uCAlBF,UAaZd,EAbYG,EAAAY,KAqBZd,EAAUD,EAAcvF,KAE3BuF,EAAcgB,QACXf,EAAQtG,IACRsG,EAAQrG,MACRqG,EAAQpG,OACRoG,EAAQlG,KA3BI,CAAAoG,EAAAE,KAAA,gBA6BhB1B,EAAS,CACPpD,KAAM,eACN0D,MAAO,CACLrF,KAAM,mBACNwF,QAAS,kCAGbT,EAAS,CAAEpD,KAAM,mBApCD4E,EAAAK,OAAA,kBAwClB/E,EAAMJ,UAAU,CACd1B,GAAIsG,EAAQtG,GACZC,KAAMqG,EAAQrG,KACdC,MAAOoG,EAAQpG,MACfC,QAASmG,EAAQnG,QACjBC,KAAMW,EAAiBuF,EAAQlG,MAC/BG,KAAM+F,EAAQ/F,OAEhBuB,EAAMmD,eACND,EAAS,CAAEpD,KAAM,oBAjDC,yBAAA4E,EAAAc,SAAAnB,MAAH,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,GAoDjB,OAAI3C,EAAMW,QACD1C,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAUlE,GAAG,MAIpBT,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACVkE,OAAQ,SACRC,SAAU,MAEV7E,EAAAC,EAAAC,cAAA,MAAIQ,MAAO,CACToE,UAAW,SACXC,cAAe,KAFjB,SAIA/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,gBACN4D,OAAQ,CACNtF,MAAOkG,EAAMiC,OAAOC,UAGxBA,MAAOvD,EAAMS,OAAOtF,MACpB0B,KAAK,QACL2G,YAAY,WAEhBvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChB3D,KAAK,WACL2G,YAAY,WACZH,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,gBACN4D,OAAQ,CACNG,SAAUS,EAAMiC,OAAOC,aAI/BtF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACElF,QAAQ,UACR1B,KAAK,SACLgC,QAASkC,EACT2C,OAAK,GACJ1D,EAAMQ,WACHvC,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAASC,UAAU,SAASvI,KAAK,SAASwI,KAAK,OAC/C,UA1GH7D,EAAMO,MAAMrF,KACf+C,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOvF,QAAQ,UACbN,EAAAC,EAAAC,cAAA,cAAS6B,EAAMO,MAAMrF,MACrB+C,EAAAC,EAAAC,cAAA,WAAM6B,EAAMO,MAAMG,UAEpB,QC3FFqD,EAAQ,SAACC,GACb,OAAO,IAAIC,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAuCrCI,EAFIrE,YAAQ,KAlCA,SAACE,GAC1B,MAAO,CACLoE,WAAY,WACVpE,EHKG,CAAEpD,KAAMJ,EAAaf,KAAMgB,KGHhCwD,aAAc,WACZD,EHMG,CAAEE,QAAQ,OGsBAJ,CAjBgC,SAAChD,GAAU,IAAAM,EAC3BC,IAAMC,UAAS,GADYC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA0B,EAAA,GACrDsD,EADqDnD,EAAA,GAC5C8G,EAD4C9G,EAAA,GAY5D,OAVAF,IAAMM,UAAU,YACF,eAAAoD,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,OAAAF,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPsC,QAAQM,IAAI,CAACxC,IAAMyC,IAAI,gBAAiBT,EAAM,OADvC,OAEbhH,EAAMsH,aACNtH,EAAMmD,eACNoE,GAAc,GAJD,wBAAA7C,EAAAc,SAAAnB,MAAH,yBAAAJ,EAAAyB,MAAAC,KAAAC,YAAA,EAMZ8B,IACC,CAAC9D,IAEGA,EACH1C,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAUlE,GAAG,MACbT,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAASC,UAAU,WCWVc,EAFK3E,YA9CI,SAACC,GACxB,MAAO,CACNH,QAASG,EAAMH,UAIU,SAACI,GAC3B,MAAO,CACNtD,UAAW,SAACjB,GACXuE,EAAStD,EAAUjB,OAqCFqE,CAnBqC,SAAChD,GAAU,IAAAqD,EACzC9C,IAAM+C,WAAW,SAACL,EAAcM,GACzD,OAAQA,EAAOzD,MACd,IAAK,gBACJ,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IAChC,IAAK,iBACJ,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IAChC,QACC,OAAOR,IAEP,CACFQ,YAAY,QACVK,GAZgEC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GAAAU,EAAA,GAAAA,EAAA,GAcnE,OACC7C,EAAAC,EAAAC,cAAA,4YC9CK,IAAMwG,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAuB,uBAU7B,SAASC,EAAaC,GAC3B,MAAO,CAAEnI,KAAMgI,EAAeG,YAOzB,SAASC,IACd,sBAAAjE,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAO,SAAAC,EAAOnB,GAAP,IAAAiF,EAAA3D,EAAA,OAAAL,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBI,IAAMyC,IAAI,6BAF5B,YAEGU,EAFHzD,EAAAY,MAGQC,OAHR,CAAAb,EAAAE,KAAA,QAIKJ,EAAwB2D,EAAOnJ,KACrCkE,EAAS8E,EAAaxD,IALrBE,EAAAE,KAAA,sBAOK,IAAI1F,MAAM,aAPf,QAAAwF,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAA0D,GAAA1D,EAAA,SAUH2D,QAAQC,IAAR5D,EAAA0D,IAVG1D,EAAAK,OAAA,SAWImC,QAAQC,WAXZ,yBAAAzC,EAAAc,SAAAnB,EAAA,kBAAP,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,oVCtBK,IAAM2C,GAAkB,kBAClBC,GAAkB,kBAClBC,GAAkB,kBAElBC,GAAkB,kBAClBC,GAAkB,kBAClBC,GAAgB,gBAEtB,SAASC,GAAeC,GAC7B,MAAO,CAAEhJ,KAAMyI,GAAiBO,cAO3B,SAASC,GAAeD,GAC7B,MAAO,CAAEhJ,KAAM2I,GAAiBK,gWCjB3B,IAAME,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAoB,oBAU1B,SAASC,GAAgBC,GAC9B,MAAO,CAAEtJ,KAAMoJ,GAAmBE,eAG7B,SAASC,KACd,sBAAApF,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAO,SAAAC,EAAOnB,GAAP,IAAAiF,EAAA3D,EAAA,OAAAL,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBI,IAAMyC,IAAI,mCAF5B,YAEGU,EAFHzD,EAAAY,MAGQC,OAHR,CAAAb,EAAAE,KAAA,QAIKJ,EAA2B2D,EAAOnJ,KACxCkE,EAASiG,GAAgB3E,IALxBE,EAAAE,KAAA,sBAOK,IAAI1F,MAAM,aAPf,QAAAwF,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAA0D,GAAA1D,EAAA,SAUH2D,QAAQC,IAAR5D,EAAA0D,IAVG1D,EAAAK,OAAA,SAWImC,QAAQC,WAXZ,yBAAAzC,EAAAc,SAAAnB,EAAA,kBAAP,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,GCRF,ICZY0D,GDkOGC,GAFMvG,YApNG,SAACC,GACxB,MAAO,CACN6F,WAAY7F,EAAM6F,WAClBb,SAAUhF,EAAMgF,SAChBmB,YAAanG,EAAMmG,cAIM,SAAClG,GAC3B,MAAO,CACNmG,iBAAkB,WACjBnG,EAASmG,OAEVnB,cAAe,WACdhF,EAASgF,MAEVa,eAAgB,SAACD,GAChB5F,EAAS6F,GAAeD,OAmMN9F,CAvKsC,SAAChD,GAAU,IAAAqD,EAC3C9C,IAAM+C,WAAW,SAACL,EAAcM,GACzD,OAAQA,EAAOzD,MACd,IAAK,eACJ,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBuG,WAAYvG,EAAMuG,YACtC,IAAK,kBACJ,OAAO5K,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBwG,SAAUlG,EAAOmG,aACrC,IAAK,gBACJ,OAAO9K,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IAChC,IAAK,iBACJ,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IAChC,IAAK,gBACJ,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmB0G,WAAYpG,EAAOqG,SACvC,QACC,OAAO3G,IAEP,CACFQ,YAAY,EACZgG,SAAU,EACVD,WAAW,EACXG,WAAY,SACV7F,GArBkEC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GAC9DJ,EAD8Dc,EAAA,GACvDb,EADuDa,EAAA,GAuBrExD,IAAMM,UAAU,YACG,eAAAoD,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,OAAAF,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACpB1B,EAAS,CAAEpD,KAAM,kBADG4E,EAAAE,KAAA,EAEdsC,QAAQM,IAAI,CACjBxH,EAAMqJ,mBACNrJ,EAAMkI,gBACN2B,MALmB,OAOpB3G,EAAS,CAAEpD,KAAM,mBAPG,wBAAA4E,EAAAc,SAAAnB,MAAH,yBAAAJ,EAAAyB,MAAAC,KAAAC,YAAA,EAUlBkE,IACE,IAEH,IAAMD,EAAe,eAAAE,EAAAnL,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAA4F,IAAA,IAAA7B,EAAA3D,EAAA,OAAAL,EAAAhD,EAAAsD,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,cAAAqF,EAAArF,KAAA,EACFI,IAAMyC,IAAI,iCADR,QACjBU,EADiB8B,EAAA3E,MAEZC,SACJf,EAAyB2D,EAAOnJ,KACtCgB,EAAM+I,eAAevE,IAJC,wBAAAyF,EAAAzE,SAAAwE,MAAH,yBAAAD,EAAArE,MAAAC,KAAAC,YAAA,GAyErB,OACC1E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+I,SAAA,KACChJ,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEuI,MAAO,SACpBjJ,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACXkE,OAAQ,SACRC,SAAU,KACVqE,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,SAAU,SACVrJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAE4I,SAAU,KACxBtJ,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACC9E,MAAO,CAAEuI,MAAO,KAChB3I,QAAQ,eACRM,QAAS,kBAAMoB,EAAS,CAAEpD,KAAM,mBAHjC,cAMAoB,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACCxE,MAAO,CAAEmE,SAAU,IAAKD,OAAQ,UAChCU,MAAOvD,EAAM0G,WACbrD,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CAAEpD,KAAM,gBAAiB8J,OAAQtF,EAAMiC,OAAOC,SACjF1G,KAAK,OACL2G,YAAY,yBAEdvF,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACXwI,QAAS,OACTE,eAAgB,SAChBC,SAAU,OACVxE,SAAU,KACVD,OAAQ,gBA7FY,WACvB,GACClH,OAAO6L,OAAOzK,EAAM8I,WAAWA,YAAYhE,OAAS,GACjDlG,OAAO6L,OAAOzK,EAAMiI,UAAUnD,OAAS,GACvClG,OAAO6L,OAAOzK,EAAMoJ,aAAatE,OAAS,EAE7C,OAAOlG,OAAO6L,OAAOzK,EAAMiI,UACzByC,OAAO,SAACC,GAAD,OAAuB1H,EAAMwG,UAAYkB,EAAQC,YAAYC,SAAS5H,EAAMwG,YACnFiB,OAAO,SAACC,GAAD,OAAsBA,EAAQxM,KAAKgH,cAAc0F,SAAS5H,EAAM0G,WAAWxE,iBAClF7C,IAAI,SAACqI,GACN,IAAM7B,EAAa6B,EAAQC,YAAYtI,IAAI,SAACoH,GAC3C,OACCxI,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACCrI,IAAKiH,EACLlI,QAAQ,YACRI,MAAO,CAAEkE,OAAQ,UAChB9F,EAAM8I,WAAWA,WAAWY,GAAYvL,QAItC4M,EAAa/K,EAAMoJ,YAAYuB,EAAQK,cAC7C,OACC9J,EAAAC,EAAAC,cAAA,KACCqB,IAAKkI,EAAQzM,GACb+M,KAAMN,EAAQO,WACd3E,OAAO,SACP3E,MAAO,CACNC,eAAgB,OAChBsI,MAAO,QACPrE,OAAQ,IAEV5E,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CAAMvJ,MAAO,CAAEwJ,OAAQ,SACtBlK,EAAAC,EAAAC,cAAC+J,EAAA,EAAKE,KAAN,KACCnK,EAAAC,EAAAC,cAAC+J,EAAA,EAAKG,MAAN,CAAY1J,MAAO,CAClB2J,MAAOR,EAAWQ,QACfZ,EAAQxM,MACZ+C,EAAAC,EAAAC,cAAC+J,EAAA,EAAKK,SAAN,CAAenJ,UAAU,mBAAzB,QAAiDsI,EAAQc,WAAzD,YAA8EV,EAAW5M,KAAzF,IAAgGwM,EAAQe,aACxGxK,EAAAC,EAAAC,cAAC+J,EAAA,EAAKQ,KAAN,KACE7C,QAyDH8C,KAGH1K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOC,KAAM7I,EAAMuG,UAAWuC,OAAQ,kBAAM7I,EAAS,CAAEpD,KAAM,mBAC5DoB,EAAAC,EAAAC,cAACyK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GAAzB,mBAGA/K,EAAAC,EAAAC,cAACyK,EAAA,EAAMR,KAAP,KACCnK,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACCjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKgG,MAAN,CACCC,QAA4B,IAAnBlJ,EAAMwG,SACftL,KAAK,YACL2B,KAAK,QACLsM,MAAO,eACP9F,SAAU,kBAAMpD,EAAS,CAAEpD,KAAM,kBAAmB4J,WAAY,OA5D9D9K,OAAO6L,OAAOzK,EAAM8I,WAAWA,YAAYxG,IAAI,SAAC+J,GACtD,OACCnL,EAAAC,EAAAC,cAAC8E,EAAA,EAAKgG,MAAN,CACAC,QAASlJ,EAAMwG,WAAa4C,EAASnO,GACpCuE,IAAK4J,EAASnO,GACd4B,KAAK,QACL3B,KAAK,YACLiO,MAAOC,EAASlO,KAChBmI,SAAU,kBAAMpD,EAAS,CAAEpD,KAAM,kBAAmB4J,WAAY2C,EAASnO,oCCjKlEoL,6JC8BL,IAAMgD,GAAgB,CAC3BpO,GAAI,EACJC,KAAM,GACN+M,WAAY,GACZO,WAAY,EACZT,aAAc,EACdU,YAAa,EACbd,YAAa,GACbnM,KAAM,IAGK8N,GAAoB,CAC/BrO,IAAK,EACLC,KAAM,GACNqO,UAAW,GACXjB,MAAO,IC5CIkB,GAAgB,gBAChBC,GAAiB,iBAGvB,SAASC,KACd,MAAO,CAAE7M,KAAM2M,IAGV,SAASG,KACd,MAAO,CAAE9M,KAAM4M,sCCLJG,GAAe,eACfC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAgB,gBAEhBC,GAAgB,gBAChBC,GAAiB,iBACjBC,GAAgB,gBAChBC,GAAc,cACdC,GAAe,eACfC,GAAe,eACfC,GAAkB,kBAwExB,SAASC,GAAYC,GAC1B,MAAO,CAAE3N,KAAM+M,GAAcY,WAWxB,SAASC,KACd,MAAO,CAAE5N,KAAMkN,IAsIjB,IAAMW,GAAkC,CACtCC,aAAc,GACdC,wBAAyB,GACzBC,eAAgB,QC/KbC,yMAkCL,IAoReC,GAFKhL,YAhWI,SAACC,GACxB,MAAO,CACNH,QAASG,EAAMH,QACf2K,QAASxK,EAAMwK,QACf3E,WAAY7F,EAAM6F,WAClBM,YAAanG,EAAMmG,cAIM,SAAClG,GAC3B,MAAO,CACNmG,iBAAkB,WACjBnG,EAASmG,OAEVQ,gBAAiB,WAChB3G,EPED,eAAAe,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAO,SAAAC,EAAOnB,GAAP,IAAAiF,EAAA3D,EAAA,OAAAL,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBI,IAAMyC,IAAI,yCAF5B,QAEGU,EAFHzD,EAAAY,MAGQC,SACHf,EAAyB2D,EAAOnJ,KACtCkE,EAAS6F,GAAevE,KALvBE,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAA0D,GAAA1D,EAAA,SAQH2D,QAAQC,IAAR5D,EAAA0D,IARG1D,EAAAK,OAAA,SASImC,QAAQC,WATZ,yBAAAzC,EAAAc,SAAAnB,EAAA,iBAAP,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,KOAAqI,cAAe,SAACR,GACfvK,EDuDI,SAAuBuK,GAC5B,MAAO,CAAE3N,KAAMgN,GAAgBW,WCxDrBQ,CAAcR,KAExBS,aAAc,SAACC,EAAgBC,GAC9BlL,EDiFI,SAAsBiL,EAAgBC,GAC3C,sBAAArE,EAAAnL,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAO,SAAA4F,EAAO9G,GAAP,IAAAiF,EAAA3D,EAAA,OAAAL,EAAAhD,EAAAsD,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,cAAAqF,EAAAtF,KAAA,EAAAsF,EAAArF,KAAA,EAEkBI,IAAMC,KAAK,6BAA8B,CAC5DkJ,SACAC,cAJC,QAEGjG,EAFH8B,EAAA3E,MAMQC,SACHf,EAAwB2D,EAAOnJ,KACrCkE,EAASsK,GAAYhJ,KARpByF,EAAArF,KAAA,uBAAAqF,EAAAtF,KAAA,EAAAsF,EAAA7B,GAAA6B,EAAA,SAWH5B,QAAQC,IAAR2B,EAAA7B,IAXG6B,EAAAlF,OAAA,SAYImC,QAAQC,WAZZ,yBAAA8C,EAAAzE,SAAAwE,EAAA,iBAAP,gBAAAqE,GAAA,OAAAtE,EAAArE,MAAAC,KAAAC,YAAA,GClFUsI,CAAaC,EAAQC,KAE/BV,aAAc,WACbxK,EAASwK,OAEVd,cAAe,WACd1J,EAAS0J,OAEVD,aAAc,WACbzJ,EAASyJ,OAEV2B,eAAgB,SAACH,EAAgBC,GAChClL,ED6HI,SAAwBiL,EAAgBC,GAC7C,sBAAAG,EAAA3P,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAO,SAAAoK,EAAOtL,GAAP,IAAAiF,EAAA,OAAAhE,EAAAhD,EAAAsD,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAAA6J,EAAA9J,KAAA,EAAA8J,EAAA7J,KAAA,EAEkBI,IAAMC,KAAK,wBAAyB,CACvDkJ,SACAC,cAJC,QAEGjG,EAFHsG,EAAAnJ,MAMQC,SACqB4C,EAAOnJ,KACrCkE,EAASwK,OARRe,EAAA7J,KAAA,uBAAA6J,EAAA9J,KAAA,EAAA8J,EAAArG,GAAAqG,EAAA,SAWHpG,QAAQC,IAARmG,EAAArG,IAXGqG,EAAA1J,OAAA,SAYImC,QAAQC,WAZZ,yBAAAsH,EAAAjJ,SAAAgJ,EAAA,iBAAP,gBAAAE,GAAA,OAAAH,EAAA7I,MAAAC,KAAAC,YAAA,GC9HU0I,CAAeH,EAAQC,KAEjCO,YAAa,SAACR,EAAgBC,GAC7BlL,ED4II,SAAqBiL,EAAgBC,GAC1C,sBAAAQ,EAAAhQ,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAO,SAAAyK,EAAO3L,GAAP,OAAAiB,EAAAhD,EAAAsD,KAAA,SAAAqK,GAAA,cAAAA,EAAAnK,KAAAmK,EAAAlK,MAAA,cAAAkK,EAAAnK,KAAA,EAAAmK,EAAAlK,KAAA,EAEkBI,IAAMC,KAAK,qBAAsB,CACpDkJ,SACAC,cAJC,OAAAU,EAAAxJ,KAMQC,QACTrC,EAASwK,MAPRoB,EAAAlK,KAAA,uBAAAkK,EAAAnK,KAAA,EAAAmK,EAAA1G,GAAA0G,EAAA,SAUHzG,QAAQC,IAARwG,EAAA1G,IAVG0G,EAAA/J,OAAA,SAWImC,QAAQC,WAXZ,yBAAA2H,EAAAtJ,SAAAqJ,EAAA,iBAAP,gBAAAE,GAAA,OAAAH,EAAAlJ,MAAAC,KAAAC,YAAA,GC7IU+I,CAAYR,EAAQC,KAE9BY,YAAa,SAACb,EAAgBC,GAC7BlL,EDqGI,SAAqBiL,EAAgBC,GAC1C,sBAAAa,EAAArQ,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAO,SAAA8K,EAAOhM,GAAP,IAAAiF,EAAA,OAAAhE,EAAAhD,EAAAsD,KAAA,SAAA0K,GAAA,cAAAA,EAAAxK,KAAAwK,EAAAvK,MAAA,cAAAuK,EAAAxK,KAAA,EAAAwK,EAAAvK,KAAA,EAEkBI,IAAMC,KAAK,qBAAsB,CACpDkJ,SACAC,cAJC,QAEGjG,EAFHgH,EAAA7J,MAMQC,SACqB4C,EAAOnJ,KACrCkE,EAASwK,OARRyB,EAAAvK,KAAA,uBAAAuK,EAAAxK,KAAA,EAAAwK,EAAA/G,GAAA+G,EAAA,SAWH9G,QAAQC,IAAR6G,EAAA/G,IAXG+G,EAAApK,OAAA,SAYImC,QAAQC,WAZZ,yBAAAgI,EAAA3J,SAAA0J,EAAA,iBAAP,gBAAAE,GAAA,OAAAH,EAAAvJ,MAAAC,KAAAC,YAAA,GCtGUoJ,CAAYb,EAAQC,OAyTZpL,CAlRqC,SAAChD,GAAU,IAAAqD,EACzC9C,IAAM+C,WAAW,SAACL,EAAcM,GACzD,OAAQA,EAAOzD,MACd,IAAK,kBACJ,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBoM,SAAU9L,EAAO8L,WACrC,IAAK,yBACJ,OAAOzQ,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBqM,eAAgB/L,EAAOoH,UAC3C,IAAK,uBACJ,OAAO/L,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBsM,aAAchM,EAAON,QACzC,QACC,OAAOA,IAEP,CACFoM,SAAU,GACVC,oBAAgBxL,EAChByL,aAAcxB,GAAayB,cACzB1L,GAhBgEC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GAC5DJ,EAD4Dc,EAAA,GACrDb,EADqDa,EAAA,GAkB7D0L,EAAoB,SAAChC,GAC1B,GAAI7O,OAAO6L,OAAOgD,GAAS3I,OAAS,EAAG,CACtC,IAAM4K,EAAsB9Q,OAAO6L,OAAOgD,GAAS,GAE/CiC,EAAYnK,SAAW+D,GAAaqG,QACvCzM,EAAS,CAAEpD,KAAM,uBAAwBmD,MAAO8K,GAAa6B,eACnDF,EAAYnK,SAAW+D,GAAauG,UAC9C3M,EAAS,CAAEpD,KAAM,uBAAwBmD,MAAO8K,GAAa+B,mBAG9D5M,EAAS,CAAEpD,KAAM,yBAA0B6K,QAAS2B,KACpDpJ,EAAS,CAAEpD,KAAM,uBAAwBmD,MAAO8K,GAAagC,aAIzDC,EAAgB,eAAA/L,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,EAAO8J,GAAP,IAAAhG,EAAA8H,EAAAhI,EAAA,OAAA9D,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACHI,IAAMC,KAAK,4BAA6B,CAC5DkJ,WAFuB,OAClBhG,EADkBzD,EAAAY,KAKpB1G,OAAO6L,OAAOtC,EAAOnJ,KAAKyO,SAAS3I,OAAS,IACzC2I,EAAwBtF,EAAOnJ,KAAKyO,QACpCxF,EAAyBE,EAAOnJ,KAAK2L,QAC3C3K,EAAMiO,cAAcR,GACpBvK,EAAS,CAAEpD,KAAM,yBAA0B6K,QAAS/L,OAAO6L,OAAOxC,GAAU,MAG7EwH,EAAkBtH,EAAOnJ,KAAKyO,SAZN,wBAAA/I,EAAAc,SAAAnB,MAAH,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,GAetBrF,IAAMM,UAAU,WACfb,EAAMqJ,mBACNrJ,EAAM6J,kBACNmG,EAAiBhQ,EAAM8C,QAAQ5E,KAC7B,IAEHqC,IAAMM,UAAU,WACf4O,EAAkBzP,EAAMyN,UACtB,CAACzN,EAAMyN,UAEV,IAAMyC,EAAkB,WAKvB,OACChP,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEuO,UAAW,KACxBjP,EAAAC,EAAAC,cAACgP,GAAA,EAAD,KAiBClP,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACC5E,QAAS,WACR9B,EAAMgP,YAAYhP,EAAM8C,QAAQ5E,GAAK+E,EAAMqM,eAAgBpR,IAxB/DgF,EAAS,CAAEpD,KAAM,uBAAwBmD,MAAO8K,GAAasC,cAC7DnN,EAAS,CAAEpD,KAAM,yBAA0B6K,QAAS2B,MA0BjD9K,QAAQ,kBALT,WA0KJ,GAC6C,IAA5C5C,OAAO6L,OAAOzK,EAAMoJ,aAAatE,SAC7B7B,EAAMqM,gBAC6C,IAApD1Q,OAAO6L,OAAOzK,EAAM8I,WAAWuG,UAAUvK,OAC5C,OAAO,KAIR,OAAQ7B,EAAMsM,cACb,KAAKxB,GAAa+B,YACjB,OAvKyB,WAK1B,GAAI7M,EAAMqM,gBAA8C,IAA5BrM,EAAMqM,eAAepR,GAAU,CAC1D,IAAMoS,EAAI,GAAAjQ,OAAML,EAAMoJ,YAAYnG,EAAMqM,eAAgBtE,cAAc7M,KAAKgH,cAAjE,KAAA9E,OAAkF4C,EAAMqM,eAAgB5D,aAElH,OADArD,QAAQC,IAAIgI,EAAO,WAElBpP,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACXoE,UAAW,SACXoE,QAAS,OACTmG,cAAe,SACflG,WAAY,WAEZnJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG6J,KAAMhI,EAAMqM,eAAgBpE,WAAYtJ,MAAO,CAAE2J,MAAO,QAAS1J,eAAgB,aAAe0E,OAAO,UAAUtD,EAAMqM,eAAgBnR,OAC9I+C,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,QAAMQ,MAAO,CAAE2J,MAAOvL,EAAMoJ,YAAYnG,EAAMqM,eAAgBtE,cAAcO,QAAUvL,EAAMoJ,YAAYnG,EAAMqM,eAAgBtE,cAAc7M,MADhJ,IAC8J8E,EAAMqM,eAAgB5D,aAEpLxK,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACC9E,MAAO,CAAEuO,UAAW,GAAIK,QAAS,YAAaC,SAAU,IACxDjP,QAAQ,UACRM,QAtBiB,WACpB9B,EAAMkO,aAAalO,EAAM8C,QAAQ5E,GAAK+E,EAAMqM,eAAgBpR,MAkB1D,YAMCgS,IACDhP,EAAAC,EAAAC,cAACsP,GAAA,UAAD,CAAWvG,MAAM,MAAMwG,KAAM,mBAC5BzP,EAAAC,EAAAC,cAACsP,GAAA,SAAD,CAAUE,SAAU,IAAMN,EAAO,UAAWO,KAAM7Q,EAAMoJ,YAAYnG,EAAMqM,eAAgBtE,cAAcO,UAM5G,OAAO,KAqICuF,GACR,KAAK/C,GAAa6B,aACjB,OApI0B,WAC3B,IAqDMmB,EAAmB,eAAAhH,EAAAnL,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAA4F,IAAA,IAAAgH,EAAA,OAAA7M,EAAAhD,EAAAsD,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,cACrBoM,EAAcpS,OAAO6L,OAAOzK,EAAMyN,SAASwD,OAAO,SAACC,EAAMC,GAE9D,OADAD,EAAKC,EAAOjT,IAAOiT,EAAOC,MACnBF,GACL,IAJwBjH,EAAArF,KAAA,EAMNI,IAAMC,KAAK,4BAA6B,CAC5DwI,QAASuD,IAPiB,OAAA/G,EAAA3E,KAUhBC,SACVvF,EAAM0N,eACNxK,EAAS,CAAEpD,KAAM,uBAAwBmD,MAAO8K,GAAasC,cAC7DnN,EAAS,CAAEpD,KAAM,yBAA0B6K,QAAS2B,MAb1B,wBAAArC,EAAAzE,SAAAwE,MAAH,yBAAAD,EAAArE,MAAAC,KAAAC,YAAA,GAmBzB,OAAI3C,EAAMqM,gBAA8C,IAA5BrM,EAAMqM,eAAepR,GAE/CgD,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEmE,SAAU,IAAKC,UAAW,SAAUF,OAAQ,WACzD5E,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG6J,KAAMhI,EAAMqM,eAAgBpE,WAAYtJ,MAAO,CAAE2J,MAAO,QAAS1J,eAAgB,aAAe0E,OAAO,UAAUtD,EAAMqM,eAAgBnR,OAC9I+C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMQ,MAAO,CAAE2J,MAAOvL,EAAMoJ,YAAYnG,EAAMqM,eAAgBtE,cAAcO,QAAUvL,EAAMoJ,YAAYnG,EAAMqM,eAAgBtE,cAAc7M,MAAhJ,IAA8J8E,EAAMqM,eAAgB5D,aA/C/K9M,OAAO6L,OAAOzK,EAAMyN,SAASnL,IAAI,SAAC6O,GACxC,IAAKA,EAAOE,WACX,OAAO,KAGR,IAlCyBC,EAAkBC,EAAaC,EAkClDnF,EAAqBrM,EAAM8I,WAAWA,WAAW9I,EAAM8I,WAAWuG,SAAS8B,EAAOE,YAAY3H,YAC9F2F,EAAWrP,EAAM8I,WAAWuG,SAAS8B,EAAOE,YAClD,OACCnQ,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CACC1I,IAAK0O,EAAOjT,GACZ0D,MAAO,CACNkE,OAAQ,WAET5E,EAAAC,EAAAC,cAAC+J,EAAA,EAAKE,KAAN,KACCnK,EAAAC,EAAAC,cAAC+J,EAAA,EAAKG,MAAN,KAAa+D,EAASlR,MACtB+C,EAAAC,EAAAC,cAAC+J,EAAA,EAAKK,SAAN,KAAgBa,EAASlO,MACzB+C,EAAAC,EAAAC,cAAC+J,EAAA,EAAKQ,KAAN,CAAW/J,MAAO,CAAEoE,UAAW,OAAQyL,WAAY,aAAepC,EAASqC,SA7CrDJ,EA8CHH,EAAOjT,GA9CcqT,EA8CTlC,EAASsC,SA9CaH,EA8CHnC,EAASuC,SA5C9D1Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+I,SAAA,KACChJ,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEwI,QAAS,OAAQC,WAAY,SAAUkG,cAAe,QAClEgB,EACDrQ,EAAAC,EAAAC,cAAA,SACCtB,KAAK,QACLyR,IAAKA,EACLC,IAAKA,EACLnP,UAAU,SACVmE,MAAOxG,EAAMyN,QAAQ6D,GAAUF,MAC/B9K,SAAU,SAAChC,GACVtE,EAAMiO,cAANrP,OAAAiT,EAAA,EAAAjT,CAAA,GACE0S,EADF1S,OAAAC,EAAA,EAAAD,CAAA,GAEKoB,EAAMyN,QAAQ6D,GAFnB,CAGEF,OAAQ9M,EAAMiC,OAAOC,aAIxBgL,GAEFtQ,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,cAASpB,EAAMyN,QAAQ6D,GAAUF,cAwDlClQ,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACCI,KAAK,KACLtF,QAAQ,UACRM,QAAS,kBAAMiP,MAHhB,iBAKCb,KAKG,KA2CC4B,GACR,KAAK/D,GAAasC,YACjB,OA1CyB,WAC1B,IAAM0B,EAAe,CACpB,0BACA,yBACA,mBAHoB,+FASrB,OACC7Q,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEoE,UAAW,WACxB9E,EAAAC,EAAAC,cAAA,UAAK2Q,EAAaC,KAAKC,MAAMD,KAAKE,SAAWH,EAAajN,UAC1D5D,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAQ5E,QAAS,kBAAMkO,EAAiBhQ,EAAM8C,QAAQ5E,MAAtD,iBA4BMiU,GACR,KAAKpE,GAAagC,UACjB,OAvBA7O,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEoE,UAAW,WACxB9E,EAAAC,EAAAC,cAAA,6DACAF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAQ5E,QAAS,kBAAMkO,EAAiBhQ,EAAM8C,QAAQ5E,MAAtD,YAwBH,OAAO,OClSO6B,eAnEyC,SAACC,GACvD,IAAMC,EAAa,WACjB,IAAMC,EAAaF,EAAMnC,SAASsC,SAASC,MAAM,KAAK,GACtD,OAAOF,EAAU,IAAAG,OAAOH,GAAe,KAHwBI,EAMhCC,IAAMC,SAASP,KANiBQ,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA0B,EAAA,GAM1DK,EAN0DF,EAAA,GAMjDG,EANiDH,EAAA,GAQjEF,IAAMM,UAAU,WACdD,EAAcX,OAGhB,IAAMa,EAAQ,SAACsR,GACbpS,EAAMgB,QAAQC,KAAKmR,GACnBxR,EAAcX,MAGhB,OACEiB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACEZ,QAAQ,OACR6Q,UAAW1R,GACXO,EAAAC,EAAAC,cAACgB,EAAA,EAAIkQ,KAAL,KACEpR,EAAAC,EAAAC,cAACgB,EAAA,EAAII,KAAL,CACEE,SAAQ,IACRZ,QAAS,kBAAMhB,EAAK,GAAAT,OAAIkS,OAF1B,aAaFrR,EAAAC,EAAAC,cAACgB,EAAA,EAAIkQ,KAAL,KACEpR,EAAAC,EAAAC,cAACgB,EAAA,EAAII,KAAL,CACEE,SAAQ,cACRZ,QAAS,kBAAMhB,EAAK,GAAAT,OAAIkS,GAAJ,kBAFtB,eAMFrR,EAAAC,EAAAC,cAACgB,EAAA,EAAIkQ,KAAL,KACEpR,EAAAC,EAAAC,cAACgB,EAAA,EAAII,KAAL,CACEE,SAAQ,SACRZ,QAAS,kBAAMhB,EAAK,GAAAT,OAAIkS,GAAJ,aAFtB,aClDKC,GAAW,WACXC,GAAc,cACdjT,GAAc,cACdkT,GAAa,aAWnB,SAASC,GAAWC,GACzB,MAAO,CAAE9S,KAAMN,GAAab,KAAMiU,GAO7B,SAASC,KACd,sBAAA5O,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAO,SAAAC,EAAOnB,GAAP,IAAAiF,EAAA3D,EAAAsO,EAAAC,EAAAC,EAAArU,EAAA,OAAAwF,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBI,IAAMyC,IAAI,uBAF5B,YAEGU,EAFHzD,EAAAY,MAGQC,OAHR,CAAAb,EAAAE,KAAA,SAMD,IAFMJ,EAAqB2D,EAAOnJ,KAC5B8T,EAAoB,GAC1BC,EAAA,EAAAC,EAAmBpU,OAAO6L,OAAOjG,GAAjCuO,EAAAC,EAAAlO,OAAAiO,IAAWpU,EAAgCqU,EAAAD,GACzCD,EAAOnU,EAAKT,IAAZU,OAAAC,EAAA,EAAAD,CAAA,GACKD,EADL,CAEEL,KAAMW,EAAiBN,EAAKL,QAGhC4E,EAhBC,CAAEpD,KAAM4S,GAAYO,MAgBFH,IAZlBpO,EAAAE,KAAA,uBAcK,IAAI1F,MAAM,aAdf,QAAAwF,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAA0D,GAAA1D,EAAA,SAiBH2D,QAAQC,IAAR5D,EAAA0D,IAjBG1D,EAAAK,OAAA,SAkBImC,QAAQC,WAlBZ,yBAAAzC,EAAAc,SAAAnB,EAAA,kBAAP,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,qCCwKasN,GAFalQ,YAtLJ,SAACC,GACxB,MAAO,CACJH,QAASG,EAAMH,QACfqQ,UAAWlQ,EAAMkQ,YAIM,SAACjQ,GAC3B,MAAO,CACNyP,WAAY,SAAChU,GACZuE,EAASyP,GAAWhU,KAEnBiO,cAAe,WACb1J,EAAS0J,OAEXD,aAAc,WACZzJ,EAASyJ,SAsKa3J,CA9I6C,SAAChD,GAAU,IAAAqD,EACzD9C,IAAM+C,WAAW,SAACL,EAAcM,GACzD,OAAQA,EAAOzD,MACX,IAAK,cACH,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBtE,KAAM4E,EAAO5E,OACrC,QACC,OAAOsE,IAEP,CACAQ,YAAY,EACZ9E,KAAMqB,EAAMrB,WACXmF,GAX+EC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GAC5EJ,EAD4Ec,EAAA,GACrEb,EADqEa,EAAA,GAa5EpF,EAAOqB,EAAMrB,KAEnB4B,IAAMM,UAAU,WACdqC,EAAS,CAAEpD,KAAM,cAAenB,KAAMqB,EAAMrB,QAC3C,CAACA,IAEJ,IAAMyU,EAAkB,eAAAnP,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,IAAA8D,EAAAnJ,EAAA,OAAAmF,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACzB5E,EAAM2M,eADmBjI,EAAAE,KAAA,EAEJI,IAAMC,KAAK,oBAAqB,CACnDtG,KAAMD,EAAuBuE,EAAMtE,QAHZ,QAEnBwJ,EAFmBzD,EAAAY,MAKdC,SACHvG,EAAOmJ,EAAOnJ,KACpBgB,EAAM4M,gBACN5M,EAAMqT,aACNrT,EAAM2S,WAAW5T,EAAuBC,KATjB,wBAAA0F,EAAAc,SAAAnB,MAAH,yBAAAJ,EAAAyB,MAAAC,KAAAC,YAAA,GAuGzB,OACC1E,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOC,KAAM9L,EAAMwJ,UAAWuC,OAAQ/L,EAAMqT,YACxCnS,EAAAC,EAAAC,cAACyK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB/K,EAAAC,EAAAC,cAACyK,EAAA,EAAMP,MAAP,kBAAwBtL,EAAMrB,KAAKT,KAErCgD,EAAAC,EAAAC,cAACyK,EAAA,EAAMR,KAAP,KAnFAnK,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,aACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,cACNnB,KAAKC,OAAAC,EAAA,EAAAD,CAAA,GACAqE,EAAMtE,KADP,CAEFR,KAAMmG,EAAMiC,OAAOC,WAGvBA,MAAOvD,EAAMtE,KAAKR,KAClB2B,KAAK,OACL2G,YAAY,UAEhBvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACAjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,yBACEpS,EAAAC,EAAAC,cAACmS,GAAA,EAAD,KACErS,EAAAC,EAAAC,cAACoS,GAAA,EAAD,CACErV,KAAK,OACLmI,SAAU,SAACE,GAAD,OAAgBtD,EAAS,CACjCpD,KAAM,cACNnB,KAAKC,OAAAC,EAAA,EAAAD,CAAA,GACAqE,EAAMtE,KADP,CAEFL,KAAMkI,OAGV1G,KAAK,QACL0G,MAAOvD,EAAMtE,KAAKL,MAClB4C,EAAAC,EAAAC,cAACqS,GAAA,EAAD,CACEpN,SAAUpD,EAAMQ,WAChB+C,MAAOxI,EAASO,SAFlB,WAKA2C,EAAAC,EAAAC,cAACqS,GAAA,EAAD,CACEpN,SAAUpD,EAAMQ,WAChB+C,MAAOxI,EAASqB,OAFlB,SAKA6B,EAAAC,EAAAC,cAACqS,GAAA,EAAD,CACEpN,SAAUpD,EAAMQ,WAChB+C,MAAOxI,EAASoB,OAFlB,SAKA8B,EAAAC,EAAAC,cAACqS,GAAA,EAAD,CACEpN,SAAUpD,EAAMQ,WAChB+C,MAAOxI,EAASmB,OAFlB,YAQN+B,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,2BACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEsN,GAAG,SACHrN,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,cACNnB,KAAKC,OAAAC,EAAA,EAAAD,CAAA,GACAqE,EAAMtE,KADP,CAEFN,QAASiG,EAAMiC,OAAOC,WAG1BA,MAAOvD,EAAMtE,KAAKN,QAClByB,KAAK,OACL2G,YAAY,WA5EbzG,EAAMmT,UAAU7Q,IAAI,SAACjE,GAC1B,OACE6C,EAAAC,EAAAC,cAAA,UAAQqB,IAAKpE,GAAUA,OA8EvB6C,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAQlF,QAAQ,kBAAhB,qBAcJN,EAAAC,EAAAC,cAACyK,EAAA,EAAM8H,OAAP,KACEzS,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAQlF,QAAQ,YAAYM,QAAS9B,EAAMqT,YAA3C,SAGAnS,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAQlF,QAAQ,UAAUM,QAASsR,GAAnC,oBC7COQ,GAFW5Q,YAhIF,SAACC,GACvB,MAAO,CACLQ,WAAYR,EAAMQ,aAIK,SAACP,GAC3B,MAAO,CACJ0J,cAAe,WAChB1J,EAAS0J,OAEVD,aAAc,WACbzJ,EAASyJ,OAEVgG,WAAY,SAAChU,GACTuE,EAASyP,GAAWhU,OAiHAqE,CAnG2C,SAAChD,GACpE,IA+B0BrB,EA/BpBkV,EAAO,eAAA5P,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,EAAOC,EAAY3F,GAAnB,IAAAwJ,EAAA,OAAAhE,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdN,EAAMO,iBACN7E,EAAM2M,eACNhO,EAAKL,KAAON,EAASqB,MACrBV,EAAKH,WAAY,EAJHkG,EAAAE,KAAA,EAKOI,IAAMC,KAAK,oBAAqB,CACnDtG,KAAMD,EAAuBC,KANjB,QAKRwJ,EALQzD,EAAAY,MAQHC,SACTvF,EAAM2S,WAAW5T,EAAuBoJ,EAAOnJ,OAC/CgB,EAAM4M,iBAVM,wBAAAlI,EAAAc,SAAAnB,MAAH,gBAAAoB,EAAA4I,GAAA,OAAApK,EAAAyB,MAAAC,KAAAC,YAAA,GAgBPkO,EAAc,eAAA/J,EAAAnL,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAA4F,EAAO1F,EAAY3F,EAAYoV,GAA/B,IAAA5L,EAAA,OAAAhE,EAAAhD,EAAAsD,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,cACrBN,EAAMO,iBACN7E,EAAM2M,eACNhO,EAAKH,UAAYuV,EAHI9J,EAAArF,KAAA,EAIAI,IAAMC,KAAK,oBAAqB,CACnDtG,KAAMD,EAAuBC,KALV,QAIfwJ,EAJe8B,EAAA3E,MAOVC,SACTvF,EAAM2S,WAAW5T,EAAuBoJ,EAAOnJ,OAC/CgB,EAAM4M,iBATa,wBAAA3C,EAAAzE,SAAAwE,MAAH,gBAAAgK,EAAA5E,EAAAV,GAAA,OAAA3E,EAAArE,MAAAC,KAAAC,YAAA,GAiDrB,OACC1E,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CACI1I,IAAKzC,EAAMrB,KAAKT,GAChB0D,MAAO,CACLuI,MAAO,QACPrE,OAAQ,SAEV5E,EAAAC,EAAAC,cAAC+J,EAAA,EAAKE,KAAN,KACEnK,EAAAC,EAAAC,cAAC+J,EAAA,EAAKG,MAAN,KAAatL,EAAMrB,KAAKR,MACxB+C,EAAAC,EAAAC,cAAC+J,EAAA,EAAKK,SAAN,CAAenJ,UAAU,mBACtB9C,EAAcS,EAAMrB,KAAKL,MAC1B4C,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOtJ,QAASxB,EAAMrB,KAAKH,UAAY,UAAY,QAASoD,MAAO,CAAEkE,OAAQ,IAAM9F,EAAMrB,KAAKH,UAAY,sBAAwB,0BAEpI0C,EAAAC,EAAAC,cAAC+J,EAAA,EAAKQ,KAAN,KACG3L,EAAMrB,KAAKP,MAAM8C,EAAAC,EAAAC,cAAA,WACjBpB,EAAMrB,KAAKN,QAAQ6C,EAAAC,EAAAC,cAAA,WACnBpB,EAAMrB,KAAKF,MAAQuB,EAAMrB,KAAKF,KAAKqG,OAAS,EAAI5D,EAAAC,EAAAC,cAAA,YAAOpB,EAAMrB,KAAKF,MAAeyC,EAAAC,EAAAC,cAAA,wBAEpFF,EAAAC,EAAAC,cAACgP,GAAA,EAAD,KACElP,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUrG,EAAMyD,WAChB3B,QAAS,SAACwC,GAAD,OAAgBtE,EAAMiU,UAAU3P,EAAOtE,EAAMrB,OACtDmI,KAAK,KACLtF,QAAQ,WAJV,SArDkB7C,EA4DAqB,EAAMrB,MA3DrBL,OAASN,EAASO,QAEvB2C,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUrG,EAAMyD,WAChB3B,QAAS,SAACwC,GAAD,OAAgBuP,EAAQvP,EAAOtE,EAAMrB,OAC9CmI,KAAK,KACLtF,QAAQ,mBAJV,WAQO7C,EAAKH,UAEZ0C,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUrG,EAAMyD,WAChB3B,QAAS,SAACwC,GAAD,OAAgBwP,EAAexP,EAAOtE,EAAMrB,MAAM,IAC3DmI,KAAK,KACLtF,QAAQ,kBAJV,wBAUAN,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUrG,EAAMyD,WAChB3B,QAAS,SAACwC,GAAD,OAAgBwP,EAAexP,EAAOtE,EAAMrB,MAAM,IAC3DmI,KAAK,KACLtF,QAAQ,mBAJV,2BC5FK0S,GAAmB,mBAMzB,SAASC,KACd,sBAAAlQ,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAO,SAAAC,EAAOnB,GAAP,IAAAiF,EAAA3D,EAAA,OAAAL,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBI,IAAMyC,IAAI,6BAF5B,YAEGU,EAFHzD,EAAAY,MAGQC,OAHR,CAAAb,EAAAE,KAAA,QAIKJ,EAAoB2D,EAAOnJ,KACjCkE,EATC,CAAEpD,KAAMoU,GAAkBf,UASF3O,IALxBE,EAAAE,KAAA,sBAOK,IAAI1F,MAAM,aAPf,QAAAwF,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAA0D,GAAA1D,EAAA,SAUH2D,QAAQC,IAAR5D,EAAA0D,IAVG1D,EAAAK,OAAA,SAWImC,QAAQC,WAXZ,yBAAAzC,EAAAc,SAAAnB,EAAA,kBAAP,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,GCGF,IA+HewO,GAFQpR,YA7HC,SAACC,GACvB,MAAO,CACLH,QAASG,EAAMH,QACfW,WAAYR,EAAMQ,WAClBwP,MAAOhQ,EAAMgQ,QAIU,SAAC/P,GAC1B,MAAO,CACLiR,eAAgB,WACdjR,EAASiR,OAEXtB,WAAY,WACV3P,EAAS2P,OAEXjG,cAAe,WACb1J,EAAS0J,OAEXD,aAAc,WACZzJ,EAASyJ,SAyGQ3J,CA/EwC,SAAChD,GAC9D,IAAMqU,EAAe,CACnBC,QAASrW,EACTuL,WAAW,EACX+K,UAAWtW,GAJ2DoF,EAM9C9C,IAAM+C,WAAW,SAACL,EAAcM,GACxD,OAAQA,EAAOzD,MACb,IAAK,aACH,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBuG,WAAW,EAAM+K,UAAWhR,EAAO5E,OACxD,IAAK,cACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBuG,WAAW,IAChC,IAAK,iBACH,OAAO5K,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEEqR,QAAQ1V,OAAAC,EAAA,EAAAD,CAAA,GACHqE,EAAMqR,QACN/Q,EAAO+Q,WAGhB,QACE,OAAOrR,IAEVoR,OAAcvQ,GAvBuDC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GAMjEJ,EANiEc,EAAA,GAM1Db,EAN0Da,EAAA,GAyBxExD,IAAMM,UAAU,WACdgS,IACA7S,EAAMmU,kBACL,IAEH,IAAMtB,EAAU,eAAA5O,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,OAAAF,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACjB5E,EAAM2M,eACN3M,EAAM6S,aACN7S,EAAM4M,gBAHW,wBAAAlI,EAAAc,SAAAnB,MAAH,yBAAAJ,EAAAyB,MAAAC,KAAAC,YAAA,GAmBhB,OAAIhH,OAAO4V,KAAKxU,EAAMiT,OAAOnO,OAAS,EAElC5D,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEkE,OAAQ,SACpB5E,EAAAC,EAAAC,cAAA,MAAIQ,MAAO,CAAEoE,UAAW,WAAxB,SACA9E,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACVwI,QAAS,OACTE,eAAgB,SAChBC,SAAU,OACVxE,SAAU,KACVD,OAAQ,gBAtBK,WACnB,IAAMmO,EAAY,SAAC3P,EAAY3F,GAC7B2F,EAAMO,iBACN3B,EAAS,CAAEpD,KAAM,aAAcnB,UAGjC,OAAOC,OAAO6L,OAAOzK,EAAMiT,OAAO3Q,IAAI,SAAC3D,GACrC,OACEuC,EAAAC,EAAAC,cAACqT,GAAD,CAAmBhS,IAAK9D,EAAKT,GAAIS,KAAMA,EAAMsV,UAAWA,MAgBrDS,GACDxT,EAAAC,EAAAC,cAACuT,GAAD,CACEnL,UAAWvG,EAAMuG,UACjB6J,WAAY,kBAAMnQ,EAAS,CAAEpD,KAAM,iBACnCnB,KAAMsE,EAAMsR,cAKhBvU,EAAMyD,WACDvC,EAAAC,EAAAC,cAAA,8BAGAF,EAAAC,EAAAC,cAAA,2DCrHPwT,GAAkB,CACtB,mBACA,iBACA,oBACA,aACA,kBAudaC,GALsB7R,YA/cb,SAACC,GACvB,MAAO,CACLmG,YAAanG,EAAMmG,YACnBN,WAAY7F,EAAM6F,aAIK,SAAC5F,GAC3B,MAAO,CACJ6F,eAAgB,SAACD,GAClB5F,EAAS6F,GAAeD,KAEvBD,eAAgB,SAACC,GAClB5F,EAAS2F,GAAeC,KAEzBd,aAAc,SAACC,GACd/E,EAAS8E,EAAaC,KAErByF,aAAc,WACZxK,EAASwK,SA4bsB1K,CAzZsD,SAAChD,GAC1F,IADoGqD,EAY3E9C,IAAM+C,WAAW,SAACL,EAAcM,GACzD,OAAQA,EAAOzD,MACX,IAAK,kBACH,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEE6R,cAAevR,EAAOwR,UAE1B,IAAK,gBACH,OAAOnW,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEE+R,iBAAkBzR,EAAO0R,YAAc,EAAI1R,EAAO0R,YAAc,EAChEC,0BAA2BlD,KAAKmD,KAAKlS,EAAMmS,IAAItQ,OAASvB,EAAO0R,eAEnE,IAAK,gBACH,IAAMI,EAAgBzW,OAAAC,EAAA,EAAAD,CAAA,GACjBqE,EAAMoS,iBACN9R,EAAO6F,aAEZ,OAAOxK,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEEoS,mBACAC,0BAA2B1W,OAAO6L,OAAO4K,GAAkBpE,OAAO,SAACsE,EAASC,GAAV,OAAqBD,EAAUC,GAAQ,KAE7G,IAAK,aACH,OAAO5W,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEEmS,IAAK7R,EAAO6R,IACZK,kBAAmBlS,EAAOkS,kBAC1BP,0BAA2BlD,KAAKmD,KAAK5R,EAAO6R,IAAItQ,OAAS7B,EAAM+R,oBAEtE,IAAK,gBACJ,OAAOpW,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IAChC,IAAK,iBACA,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IACpC,QACC,OAAOR,IA9CY,CACnBmS,IAAK,GACLK,kBAAmB,GACnBP,2BAA4B,EAC5BI,0BAA2B,EAC3BN,iBAAkB,EAClBK,iBAAkB,GAClB5R,YAAY,EACZqR,eAAe,QAwCAhR,GAjDmFC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GAY9FJ,EAZ8Fc,EAAA,GAYvFb,EAZuFa,EAAA,GAmD9F2R,EAAyB1V,EAAMoJ,YAErC7I,IAAMM,UAAU,WAEd,IADA,IAAM8U,EAAwD,GAC9D5C,EAAA,EAAAC,EAAyBpU,OAAO6L,OAAOzK,EAAMoJ,aAA7C2J,EAAAC,EAAAlO,OAAAiO,IACE4C,EADmB3C,EAAAD,GACW7U,IAAO,GAEvCgF,EAAS,CAAEpD,KAAM,gBAAiBsJ,YAAauM,KAC9C,CAACD,IAEJnV,IAAMM,UAAU,YACI,eAAAoD,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,IAAAuR,EAAApR,EAAA,OAAAL,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEiBI,IAAMyC,IAAI,yCAF3B,QAEbmO,EAFalR,EAAAY,MAGOC,SAClBf,EAAyBoR,EAAsB5W,KACrDgB,EAAM+I,eAAevE,IALJ,wBAAAE,EAAAc,SAAAnB,MAAH,yBAAAJ,EAAAyB,MAAAC,KAAAC,YAAA,EAWlBkE,IACC,IAEH,IAAM+L,EAAY,eAAA9L,EAAAnL,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAA4F,IAAA,IAAA8L,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtK,EAAAuK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9S,EAAA+S,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvO,EAAAwO,EAAAC,EAAAC,EAAAC,EAAArM,EAAAsM,EAAAC,EAAAC,EAAAzM,EAAA0M,EAAAC,EAAArN,EAAAsN,EAAAC,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA9Z,GAAA,OAAAmF,EAAAhD,EAAAsD,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,OACnB1B,EAAS,CAAEpD,KAAM,kBAEjBE,EAAMgI,aAAa,IAGb8N,EAAsB,IAAIiD,IANbhD,GAAA,EAAAC,GAAA,EAAAC,OAAAnS,EAAAmG,EAAAtF,KAAA,EAAAuR,EAODjT,EAAMmS,IAPL4D,OAAAC,YAAA,UAAAlD,GAAAI,EAAAD,EAAAtR,QAAAsU,KAAA,CAAAjP,EAAArF,KAAA,YAORwR,EAPQD,EAAA3P,SAQX6P,EAAmBD,EAAInT,EAAMwS,kBAAkB,oBAChC3Q,OAAS,GATb,CAAAmF,EAAArF,KAAA,SAWf,IADM0R,EAAkBD,EAAiBjW,MAAM,KAVhCmW,GAAA,EAAAC,GAAA,EAAAC,OAAA3S,EAAAmG,EAAAtF,KAAA,GAWf+R,EAAuBJ,EAAvB0C,OAAAC,cAAA1C,GAAAI,EAAAD,EAAA9R,QAAAsU,MAAA3C,GAAA,EAAWlK,EAA6BsK,EAAAnQ,MACtCsP,EAAoBqD,IAAI9M,EAAS+M,QAZpBnP,EAAArF,KAAA,iBAAAqF,EAAAtF,KAAA,GAAAsF,EAAA7B,GAAA6B,EAAA,UAAAuM,GAAA,EAAAC,EAAAxM,EAAA7B,GAAA,QAAA6B,EAAAtF,KAAA,GAAAsF,EAAAtF,KAAA,GAAA4R,GAAA,MAAAG,EAAA2C,QAAA3C,EAAA2C,SAAA,WAAApP,EAAAtF,KAAA,IAAA6R,EAAA,CAAAvM,EAAArF,KAAA,eAAA6R,EAAA,eAAAxM,EAAAqP,OAAA,mBAAArP,EAAAqP,OAAA,YAAAvD,GAAA,EAAA9L,EAAArF,KAAA,gBAAAqF,EAAArF,KAAA,iBAAAqF,EAAAtF,KAAA,GAAAsF,EAAAsP,GAAAtP,EAAA,SAAA+L,GAAA,EAAAC,EAAAhM,EAAAsP,GAAA,QAAAtP,EAAAtF,KAAA,GAAAsF,EAAAtF,KAAA,GAAAoR,GAAA,MAAAG,EAAAmD,QAAAnD,EAAAmD,SAAA,WAAApP,EAAAtF,KAAA,IAAAqR,EAAA,CAAA/L,EAAArF,KAAA,eAAAqR,EAAA,eAAAhM,EAAAqP,OAAA,mBAAArP,EAAAqP,OAAA,YAkBb1C,EAA0BhY,OAAO6L,OAAOzK,EAAM8I,WAAWA,YAAYmI,OAAO,SAACuI,EAAiBnN,GAIlG,OAHKA,EAASoN,WACZD,EAAMvY,KAAKoL,EAASlO,MAEfqb,GACN,IAvBgB3C,EAAA,EAAAC,EAwBa4C,MAAMC,KAAK7D,GAxBxB,aAAAe,EAAAC,EAAAhS,QAAA,CAAAmF,EAAArF,KAAA,SAyBjB,IADSmS,EAxBQD,EAAAD,GAAAG,GAAA,EAAAC,GAAA,EAAAC,OAAApT,EAAAmG,EAAAtF,KAAA,GAyBjBwS,EAA+BP,EAA/BoC,OAAAC,cAAAjC,GAAAI,EAAAD,EAAAvS,QAAAsU,MAAAlC,GAAA,EAAwDI,EAAA5Q,QAC7BuQ,GACvBjB,EAAoB8D,OAAO7C,GA3Bd9M,EAAArF,KAAA,iBAAAqF,EAAAtF,KAAA,GAAAsF,EAAA4P,GAAA5P,EAAA,UAAAgN,GAAA,EAAAC,EAAAjN,EAAA4P,GAAA,QAAA5P,EAAAtF,KAAA,GAAAsF,EAAAtF,KAAA,GAAAqS,GAAA,MAAAG,EAAAkC,QAAAlC,EAAAkC,SAAA,WAAApP,EAAAtF,KAAA,IAAAsS,EAAA,CAAAhN,EAAArF,KAAA,eAAAsS,EAAA,eAAAjN,EAAAqP,OAAA,mBAAArP,EAAAqP,OAAA,YAAAzC,IAAA5M,EAAArF,KAAA,wBAAAqF,EAAArF,KAAA,GAiC2BI,IAAM4U,OAAO,mCAjCxC,WAAA3P,EAAA3E,KAAA,CAAA2E,EAAArF,KAAA,gBAAAqF,EAAAlF,OAAA,yBAwCbsS,EAA+BqC,MAAMC,KAAK7D,GAAqBxT,IAAI,SAACwX,GACxE,MAAO,CACL3b,KAAM2b,EACNC,WAAW,EACXN,WAAW,EACXO,YAAW,yEAAA3Z,OAA2EyZ,GACtFzb,QAAS,GACTgR,SAAU,MA/CKpF,EAAArF,KAAA,GAkDwBI,IAAMC,KAAK,yBAA0B,CAC9E6D,WAAYuO,IAnDK,YAkDbC,EAlDarN,EAAA3E,MAqDeC,OArDf,CAAA0E,EAAArF,KAAA,gBAAAqF,EAAAlF,OAAA,qBAyDbP,EAAyB8S,EAA6BtY,KACtDuY,EAAkC3Y,OAAO6L,OAAOzK,EAAM8I,WAAWA,YAAYmI,OAAO,SAACC,EAAqB+I,GAI9G,OAHKA,EAAgBR,YACnBvI,EAAK+I,EAAgB/b,IAAO+b,GAEvB/I,GACN,IACH7I,QAAQC,IAAI,eAAgBiP,EAAkB/S,GACxCgT,EAjEa5Y,OAAAC,EAAA,EAAAD,CAAA,GAkEd2Y,EACA/S,GAELxE,EAAM+I,eAANnK,OAAAC,EAAA,EAAAD,CAAA,GACK2Y,EACA/S,IAICiT,EAA+C7Y,OAAO6L,OAAO+M,GAAevG,OAAO,SAACC,EAA6B+I,GAErH,OADA/I,EAAK+I,EAAgB9b,MAAQ8b,EACtB/I,GACN,IACGwG,EAA+B9Y,OAAO6L,OAAO+M,GAAevG,OAAO,SAACuI,EAAiBnN,GAIzF,OAHIA,EAAS0N,WACXP,EAAMvY,KAAKoL,EAASnO,IAEfsb,GACN,IAEG7B,EAA4B,GAC5BvO,EAA4BxK,OAAO6L,OAAOzK,EAAMoJ,aAChDwO,EAAwBxO,EAAY9G,IAAI,SAACyI,GAAD,OAAgBA,EAAW5M,OACnE0Z,EAA+C,IAEjD5U,EAAM6R,cA3FS,CAAA7K,EAAArF,KAAA,UA4FRkT,EAAI,EA5FI,aA4FDA,EAAI7U,EAAMmS,IAAItQ,QA5Fb,CAAAmF,EAAArF,KAAA,aA6FTmT,EAAS9U,EAAMmS,IAAI0C,KACnBpM,EAAcqM,EAAO9U,EAAMwS,kBAAkB,kBA9FpC,CAAAxL,EAAArF,KAAA,aAiGa,KADpBoT,EAAatM,EAAYtL,MAAM,MACtB0E,OAjGF,CAAAmF,EAAArF,KAAA,gBAkGL,IAAI1F,MAAM,qCAlGL,aAqGT2Y,EAAgBnM,GArGP,CAAAzB,EAAArF,KAAA,gBAsGL,IAAI1F,MAAM,mBAtGL,YAyGR0Y,EAAsB/M,SAASmN,EAAW,IAzGlC,CAAA/N,EAAArF,KAAA,gBA0GL,IAAI1F,MAAM,4BA1GL,SA6Gb2Y,EAAgBnM,GAAeoM,EA7GlB,SA4FqBA,IA5FrB7N,EAAArF,KAAA,kBAsHnB,IAJMqT,EAAgBrZ,OAAO6L,OAAOoN,GAChCK,EAAe,EAGVzM,EAAa,EAAGA,GAAcxI,EAAM+R,iBAAkBvJ,IAC7D,IAAA0M,EAAA,EAAAC,EAAyBhP,EAAzB+O,EAAAC,EAAAtT,OAAAqT,IACE,IADSpN,EAA2BqN,EAAAD,GAC3BzM,EAAc,EAAGA,GAAezI,EAAMoS,iBAAiBtK,EAAW7M,IAAMwN,IAE/E,GADM4M,EADwF,GAAAjY,OAC/DoL,EAD+D,KAAApL,OACjD0K,EAAW5M,KADsC,KAAAkC,OAC9BqL,QACnB5H,IAAzC+T,EAAgBS,GAAoC,CACtD,KAAOL,EAAcpN,SAASqN,IAC5BA,IAGWjV,EAAMmS,IAAI8C,KAGrBL,EAAgBS,GAAuBJ,EACvCD,EAAchX,KAAKiX,GACnBA,UAGF7P,QAAQC,IAAI,UAAWgQ,GAY/B,IANAjQ,QAAQC,IAAIuP,EAAiBI,EAAciC,KAAK,SAAC/Y,EAAWgZ,GAAZ,OAA0BhZ,EAAIgZ,KACxE5B,GAAyD3Z,OAAO6L,OAAOzK,EAAMoJ,aAAa6H,OAAO,SAACC,EAAMnG,GAE5G,OADAmG,EAAKnG,EAAW5M,MAAQ4M,EACjBmG,GACN,IAEHsH,GAAA,EAAAC,GAAuB7Z,OAAO4V,KAAKqD,GAAnCW,GAAAC,GAAA3T,OAAA0T,KAAWE,GAA0CD,GAAAD,IAC7CT,GAAS9U,EAAMmS,IAAIyC,EAAgBa,KACnCE,GAAQF,GAAStY,MAAM,KACvByY,GAAqCd,GAAO9U,EAAMwS,kBAAkB,mBAAmBrV,MAAM,KAAK6Q,OAAO,SAACuI,EAAiBM,GAK/H,OAJAA,EAAeA,EAAaV,SAE1BI,EAAMvY,KAAKwW,EAAsBqC,EAAaV,QAAQlb,IAEjDsb,GACN,IACH7B,EAAe1W,KAAK,CAClB9C,KAAM4Z,GAAO9U,EAAMwS,kBAAkB,qBACrCvK,WAAY6M,GAAO9U,EAAMwS,kBAAkB,mBAC3ChK,WAAY2O,SAASxB,GAAM,IAC3B5N,aAAcuN,GAAuBK,GAAM,IAAI1a,GAC/CwN,YAAa0O,SAASxB,GAAM,IAC5BhO,YAAaiO,GAAyBxY,OAAOqX,GAC7CjZ,KAAM,KApKS,OAAAwL,EAAArF,KAAA,IA0KaI,IAAMC,KAAK,uBAAwB,CACjEgD,SAAU0P,IA3KO,UA0KbmB,GA1Ka7O,EAAA3E,MA6KGC,SACdvG,GAAO8Z,GAAkB9Z,KAE/BgB,EAAMgI,aAAahJ,IACnBgB,EAAM0N,eACN1N,EAAMqT,aACNnQ,EAAS,CAAEpD,KAAM,oBAnLA,0BAAAmK,EAAAzE,SAAAwE,EAAA,wFAAH,yBAAAD,EAAArE,MAAAC,KAAAC,YAAA,GA2SZyN,EAAa,WACjBnQ,EAAS,CAAEpD,KAAM,aAAcsV,IAAK,GAAIK,kBAAmB,KAC3DzV,EAAMqT,cAGT,OACCnS,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOC,KAAM9L,EAAMwJ,UAAWuC,OAAQsH,GAClCnS,EAAAC,EAAAC,cAACyK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB/K,EAAAC,EAAAC,cAACyK,EAAA,EAAMP,MAAP,yBAEFpK,EAAAC,EAAAC,cAACyK,EAAA,EAAMR,KAAP,KACEnK,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KA/HoB,WACxB,IAAMmU,EAAa,SAAC1W,GAClBT,EAAS,CAAEpD,KAAM,aAAcsV,IAAK,GAAIK,kBAAmB,MAMvD6E,EAAc,SAACnS,GACnB,IAAMoS,EAAsBpS,EAAOnJ,KACnC,GAAIub,EAAQzV,OAAS,EACnB,OAAOuV,IAET,GAAuB,IAAnBE,EAAQzV,OACV,OAAOuV,IAIT,IAFA,IAAMG,EAAaD,EAAQ,GACrB9E,EAAgD,GACtDgF,EAAA,EAAAC,EAAqB9F,GAArB6F,EAAAC,EAAA5V,OAAA2V,IAAsC,CAAjC,IAAME,EAAMD,EAAAD,GACTG,EAAcJ,EAAWK,QAAQF,GACvC,IAAqB,IAAjBC,EACF,OAAOP,IAET5E,EAAkBkF,GAAUC,EAE9BnF,EAAkB,gBAAkB+E,EAAWK,QAAQ,gBACvDN,EAAQO,OAAO,EAAG,GAClB5X,EAAS,CAAEpD,KAAM,aAAcsV,IAAKmF,EAAS9E,uBAmB/C,OACEvU,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,oBACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChB6C,SArBmB,SAAChC,GACxB,IACMyW,EADSzW,EAAMiC,OACayU,MAClC,GAAwB,IAApBD,EAASjW,OACX,OAAOuV,IAET,IAAMY,EAAOF,EAAS,GACtB,IAAKE,EAAK9c,KAAK+c,SAAS,QACtB,OAAOb,IAETc,KAAKC,MAAMH,EAAM,CACfI,SAAUf,EACVgB,gBAAgB,KAUdxb,KAAK,SACPoB,EAAAC,EAAAC,cAAC8E,EAAA,EAAKyF,KAAN,CAAWtJ,UAAU,cAArB,qFA2EGkZ,GApEiB,WACxB,GAAItY,EAAMmS,IAAItQ,OAAS,EACrB,OACE5D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,wBACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChBtF,KAAK,cACLmI,SAAU,SAAChC,GACTpB,EAAS,CAAEpD,KAAM,gBAAiBmV,YAAa3Q,EAAMiC,OAAOC,SAE9D1G,KAAK,SACL0G,MAAO,GAAKvD,EAAM+R,mBACpB9T,EAAAC,EAAAC,cAAC8E,EAAA,EAAKyF,KAAN,CAAWtJ,UAAU,cAArB,gDAIDzD,OAAO6L,OAAOzK,EAAMoJ,aAAa9G,IAAI,SAACyI,GACrC,OACE7J,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,CAAY1D,IAAKsI,EAAW7M,IAC1BgD,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,UAAcpS,EAAAC,EAAAC,cAAA,cAAS2J,EAAW5M,MAAlC,WACA+C,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GACTpB,EAAS,CAAEpD,KAAM,gBAAiBsJ,YAAYxK,OAAAiT,EAAA,EAAAjT,CAAA,GAC3CmM,EAAW7M,IAAOoG,EAAMiC,OAAOC,UAGpC1G,KAAK,SACL0G,MAAO,GAAKvD,EAAMoS,iBAAiBtK,EAAW7M,MAC9CgD,EAAAC,EAAAC,cAAC8E,EAAA,EAAKyF,KAAN,CAAWtJ,UAAU,cAArB,wCACwC0I,EAAW5M,KADnD,2BAMR+C,EAAAC,EAAAC,cAAA,oCAA4B6B,EAAMqS,0BAAlC,MAAgErS,EAAMiS,2BACtEhU,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKgG,MAAN,CACE7F,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,kBACNiV,QAAgC,OAAvBzQ,EAAMiC,OAAOC,SAExB1G,KAAK,WACLsM,MAAM,0BACRlL,EAAAC,EAAAC,cAAC8E,EAAA,EAAKyF,KAAN,CAAWtJ,UAAU,cAArB,mFAsBDmZ,KAGLta,EAAAC,EAAAC,cAACyK,EAAA,EAAM8H,OAAP,KACEzS,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUpD,EAAMQ,WAChB3B,QAASuR,EACT7R,QAAQ,aAHV,mBAMAN,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUpD,EAAMQ,WAChB3B,QAAS+T,EACTrU,QAAQ,WAHV,iCCrZOia,GAzDyG,SAACzb,GACvH,IAAM0b,EAAe,SAACpX,GACpB,IAAMiC,EAASjC,EAAMiC,OACrBvG,EAAM2b,iBAAN/c,OAAAC,EAAA,EAAAD,CAAA,GACKoB,EAAM+K,WADXnM,OAAAiT,EAAA,EAAAjT,CAAA,GAEG2H,EAAOpI,KAAOoI,EAAOC,UAI3B,OACCtF,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEga,aAAc,KACxB1a,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8E,EAAA,EAAK2V,IAAN,KACE3a,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,CAAYuN,GAAIoI,KAAKC,GAAG,KACtB7a,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,yBACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUrG,EAAMyD,WAChBtF,KAAK,OACLmI,SAAUoV,EACVlV,MAAOxG,EAAM+K,WAAW5M,KACxBsI,YAAY,UAEhBvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,CAAYuN,GAAIoI,KAAKC,GAAG,KACtB7a,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,kBACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUrG,EAAMyD,WAChBtF,KAAK,YACLmI,SAAUoV,EACVlV,MAAOxG,EAAM+K,WAAWyB,UACxB/F,YAAY,UAEhBvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,CAAYuN,GAAIoI,KAAKC,GAAG,KACtB7a,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,cACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUrG,EAAMyD,WAChBtF,KAAK,QACLmI,SAAUoV,EACVjV,YAAY,UAEZ7E,MAAO,CACLoa,gBAAiB,kBAAkBC,KAAKjc,EAAM+K,WAAWQ,OAASvL,EAAM+K,WAAWQ,MAAQ,GAC3FA,MAAO,kBAAkB0Q,KAAKjc,EAAM+K,WAAWQ,OAAS,UAAY,WAEtE/E,MAAOxG,EAAM+K,WAAWQ,UAG9BrK,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUrG,EAAMyD,WAChBqD,KAAK,KACLtF,QAAQ,iBACRM,QAAS,kBAAM9B,EAAMkc,iBAAiBlc,EAAM+K,WAAW7M,MAJzD,8VC/CN,IC8EKie,GDkFUC,GALiCpZ,YA3JxB,SAACC,GACvB,MAAO,CACLmG,YAAanG,EAAMmG,cAII,SAAClG,GAC3B,MAAO,CACNiG,gBAAiB,SAACC,GACjBlG,EAASiG,GAAgBC,OAkJoBpG,CA1HiE,SAAChD,GAAU,IAAAqD,EACjG9C,IAAM+C,WAAW,SAACL,EAAcM,GACzD,OAAQA,EAAOzD,MACX,IAAK,kBACH,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBoZ,aAAcpZ,EAAMoZ,aAAe,IACxD,IAAK,qBACH,OAAOzd,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBmG,YAAa7F,EAAO6F,cAC5C,IAAK,gBACJ,OAAOxK,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IAChC,IAAK,iBACA,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IACpC,QACC,OAAOR,IAEP,CACAoZ,cAAe,EACfjT,YAAa,GACb3F,YAAY,QACXK,GAlBuHC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GACpHJ,EADoHc,EAAA,GAC7Gb,EAD6Ga,EAAA,GAoBpHuY,EAAoBtc,EAAMoJ,YAEhC7I,IAAMM,UAAU,WACdqC,EAAS,CAAEpD,KAAM,qBAAsBsJ,YAAapJ,EAAMoJ,eACzD,CAACkT,IAEJ,IAAMC,EAAiB,eAAAtY,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,IAAA8D,EAAAnJ,EAAA,OAAAmF,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACxB1B,EAAS,CAAEpD,KAAM,kBADO4E,EAAAE,KAAA,EAEHI,IAAMC,KAAK,0BAA2B,CACzDmE,YAAaxK,OAAO6L,OAAOxH,EAAMmG,eAHX,QAElBjB,EAFkBzD,EAAAY,MAKbC,SACHvG,EAAOmJ,EAAOnJ,KACpBgB,EAAMmJ,gBAAgBnK,GACtBgB,EAAMqT,aACNnQ,EAAS,CAAEpD,KAAM,oBATK,wBAAA4E,EAAAc,SAAAnB,MAAH,yBAAAJ,EAAAyB,MAAAC,KAAAC,YAAA,GA6DxB,OACC1E,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOC,KAAM9L,EAAMwJ,UAAWuC,OAAQ/L,EAAMqT,YACxCnS,EAAAC,EAAAC,cAACyK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB/K,EAAAC,EAAAC,cAACyK,EAAA,EAAMP,MAAP,6BAEFpK,EAAAC,EAAAC,cAACyK,EAAA,EAAMR,KAAP,KACEnK,EAAAC,EAAAC,cAAA,mMACAF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KArDU,WACd,IAAMyV,EAAmB,SAAC5Q,GACxB7H,EAAS,CACPpD,KAAM,qBACNsJ,YAAYxK,OAAAC,EAAA,EAAAD,CAAA,GACPqE,EAAMmG,YADAxK,OAAAiT,EAAA,EAAAjT,CAAA,GAERmM,EAAW7M,GAAM6M,OAIlBmR,EAAmB,SAAClR,GAAyB,IAAAwR,EACXvZ,EAAMmG,YAAdqT,GADmBD,EAC3CxR,GAD2CpM,OAAA8d,EAAA,EAAA9d,CAAA4d,EAAA,CAC3CxR,GAD2C1I,IAAAqa,MAEjDzZ,EAAS,CACPpD,KAAM,qBACNsJ,YAAaqT,KAIjB,OAAI7d,OAAO6L,OAAOxH,EAAMmG,aAAatE,OAAS,EACrClG,OAAO6L,OAAOxH,EAAMmG,aAAa9G,IAAI,SAACyI,GAC3C,OAAO7J,EAAAC,EAAAC,cAACwb,GAAD,CACLna,IAAKsI,EAAW7M,GAChB6M,WAAYA,EACZtH,WAAYR,EAAMQ,WAClBkY,iBAAkBA,EAClBO,iBAAkBA,MAGjBhb,EAAAC,EAAAC,cAAA,8BA0BAyb,IAEH3b,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUpD,EAAMQ,WAChBjC,QAAQ,kBACRM,QA5BoB,WAC1B,IAAMgb,EAAQle,OAAAC,EAAA,EAAAD,CAAA,GACT2N,GADS,CAEZrO,GAAI+E,EAAMoZ,eAEZnZ,EAAS,CAAEpD,KAAM,oBACjBoD,EAAS,CACPpD,KAAM,qBACNsJ,YAAYxK,OAAAC,EAAA,EAAAD,CAAA,GACPqE,EAAMmG,YADAxK,OAAAiT,EAAA,EAAAjT,CAAA,GAERke,EAAS5e,GAAK4e,QAef,oBAOF5b,EAAAC,EAAAC,cAACyK,EAAA,EAAM8H,OAAP,KACEzS,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUpD,EAAMQ,WAChB3B,QAAS9B,EAAMqT,WACf7R,QAAQ,aAHV,SAMAN,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUpD,EAAMQ,WAChB3B,QAASya,EACT/a,QAAQ,WAHV,oBEvDOub,GAF0B/Z,YAAQ,KA3FtB,SAACE,GAC3B,MAAO,CACN8E,aAAc,SAACC,GACd/E,EAAS8E,EAAaC,OAwFgBjF,CArE0D,SAAChD,GAAU,IAAAqD,EACnF9C,IAAM+C,WAAW,SAACL,EAAcM,GACzD,OAAQA,EAAOzD,MACd,IAAK,gBACJ,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IAChC,IAAK,iBACA,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IACpC,QACC,OAAOR,IAEP,CACAQ,YAAY,QACXK,GAZyGC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GACtGJ,EADsGc,EAAA,GAC/Fb,EAD+Fa,EAAA,GActGwY,EAAiB,eAAAtY,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,OAAAF,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxB1B,EAAS,CAAEpD,KAAM,kBADO,wBAAA4E,EAAAc,SAAAnB,MAAH,yBAAAJ,EAAAyB,MAAAC,KAAAC,YAAA,GA6BxB,OACC1E,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOC,KAAM9L,EAAMwJ,UAAWuC,OAAQ/L,EAAMqT,YACxCnS,EAAAC,EAAAC,cAACyK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB/K,EAAAC,EAAAC,cAACyK,EAAA,EAAMP,MAAP,qBAEFpK,EAAAC,EAAAC,cAACyK,EAAA,EAAMR,KAAP,KAnBAnK,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,oBACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChB3D,KAAK,SACPoB,EAAAC,EAAAC,cAAC8E,EAAA,EAAKyF,KAAN,CAAWtJ,UAAU,cAArB,uFAgBJnB,EAAAC,EAAAC,cAACyK,EAAA,EAAM8H,OAAP,KACEzS,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUpD,EAAMQ,WAChB3B,QAAS9B,EAAMqT,WACf7R,QAAQ,aAHV,SAMAN,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUpD,EAAMQ,WAChB3B,QAASya,EACT/a,QAAQ,WAHV,sEC0DOwb,GAF8Bha,YAvIrB,SAACC,GACxB,MAAO,CACJ6F,WAAY7F,EAAM6F,WAClB2E,QAASxK,EAAMwK,UAoI0BzK,CAlH8D,SAAChD,GAC1G,IAAMid,EAAW1c,IAAM2c,OAAO3c,IAAM4c,aAmEpC,OAAKnd,EAAM2K,QAKTzJ,EAAAC,EAAAC,cAAA,OAAKqB,IAAKzC,EAAM2K,QAAQzM,GAAK,IAAM8B,EAAMmO,OAAQrM,QAAS9B,EAAM8B,QAASsb,cAAepd,EAAMod,eAC5Flc,EAAAC,EAAAC,cAAA,OACE6b,IAAKA,EAAII,QACT5a,IAAKzC,EAAM2K,QAAQzM,GAAM,IAAM8B,EAAMmO,OACrCjQ,GAAI8B,EAAM2K,QAAQzM,GAAM,IAAM8B,EAAMmO,OACpC9L,UAAU,MACVT,MAAO,CACLkE,OAAQ,EACRqE,MAAO,GACPiB,OAAQ,GACRkS,WAAYtd,EAAM+K,WAAWQ,MAC7BgS,QAASvd,EAAMwd,OAAS,GAAM,EAC9BC,aAAc,MACdlS,MAAO,QACPvF,UAAW,SACX0X,WAAY,OACZhT,OAAQ1K,EAAM2d,kBAAoB3d,EAAM2K,QAAQzM,GAAM,IAAM8B,EAAMmO,OAAS,cAAgB,GAC3FyP,WAAY,OACZC,cAAe,OACfC,OAAQ,WAEVhc,QAAS,kBAAM9B,EAAM+d,4BAA4B,GAAK/d,EAAM2K,QAAQzM,MACpEgD,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACVwI,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBH,MAAO,GACPiB,OAAQ,KAEPpL,EAAMge,QAAU9c,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAASC,UAAU,SAASjF,MAAO,CAAEqc,QAAS,EAAGC,WAAY,KAAU,KACxFhd,EAAAC,EAAAC,cAAA,UAAQiB,UAAU,MAAMT,MAAO,CAAEqc,QAAS,EAAGC,WAAY,EAAGR,WAAY,GAAK9B,aAAc,IACzF1a,EAAAC,EAAAC,cAAA,QAAMQ,MAAO,CAAE6O,SAAU,KAAOzQ,EAAM2K,QAAQc,YAAkBvK,EAAAC,EAAAC,cAAA,WAC/DpB,EAAM+K,WAAWyB,UAAWxM,EAAM2K,QAAQe,eAtGjC,WAClB,IAAMyS,EAIF,GACJ,GAAIne,EAAMyN,QAAQK,eAAe9N,EAAM2K,QAAQzM,KAAQU,OAAO6L,OAAOzK,EAAMyN,QAAQK,eAAe9N,EAAM2K,QAAQzM,KAAM4G,OAAS,GAAKlG,OAAO6L,OAAOzK,EAAM8I,WAAWuG,UAAUvK,OAAS,EAEpL,IADA,IACAiO,EAAA,EAAAqL,EADuBxf,OAAO6L,OAAOzK,EAAMyN,QAAQK,eAAe9N,EAAM2K,QAAQzM,KAChF6U,EAAAqL,EAAAtZ,OAAAiO,IAA0C,CAArC,IAAMsL,EAAWD,EAAArL,GAAoBgD,GAAA,EAAAC,GAAA,EAAAC,OAAAnS,EAAA,IACxC,QAAAqS,EAAAD,EAAqBmI,EAArBrF,OAAAC,cAAAlD,GAAAI,EAAAD,EAAAtR,QAAAsU,MAAAnD,GAAA,EAAkC,KAAvB5E,EAAuBgF,EAAA3P,MAC3B2X,EAAoBne,EAAM8I,WAAWuG,SAAS8B,EAAOE,YAAY3H,cACpEyU,EAAoBne,EAAM8I,WAAWuG,SAAS8B,EAAOE,YAAY3H,YAAc,IAG5EyU,EAAoBne,EAAM8I,WAAWuG,SAAS8B,EAAOE,YAAY3H,YAAYyH,EAAOhD,UACvFgQ,EAAoBne,EAAM8I,WAAWuG,SAAS8B,EAAOE,YAAY3H,YAAYyH,EAAOhD,QAAU,GAGhGgQ,EAAoBne,EAAM8I,WAAWuG,SAAS8B,EAAOE,YAAY3H,YAAYyH,EAAOhD,SAAWgD,EAAOC,OAVhE,MAAAkN,GAAAtI,GAAA,EAAAC,EAAAqI,EAAA,YAAAvI,GAAA,MAAAG,EAAAmD,QAAAnD,EAAAmD,SAAA,WAAArD,EAAA,MAAAC,IAe5C,OACE/U,EAAAC,EAAAC,cAACmd,GAAA,EAAD,CACEzS,KAAM9L,EAAM2d,kBAAoB3d,EAAM2K,QAAQzM,GAAM,IAAM8B,EAAMmO,OAChE5H,OAAQ0W,EAAII,QAAQA,SACpBnc,EAAAC,EAAAC,cAACod,GAAA,EAAD,CAAStgB,GAAI,UAAY8B,EAAM2K,QAAQzM,IACrCgD,EAAAC,EAAAC,cAAA,cAASpB,EAAM2K,QAAQxM,MACvB+C,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAG6J,KAAMjL,EAAM2K,QAAQO,WAAY3E,OAAO,UAAUvG,EAAM2K,QAAQO,YAAehK,EAAAC,EAAAC,cAAA,WACjFpB,EAAM2K,QAAQC,YAAYqG,OAAO,SAACwN,EAAwB/U,GACzD,GAAI1J,EAAM8I,WAAWA,WAAWY,GAAa,CAC3C,IAAMgV,EACJ1e,EAAM8I,WAAWA,WAAWY,GAAY+P,UACtC,YACAzZ,EAAM8I,WAAWA,WAAWY,GAAYqQ,UACtC,UAAY,UAClB0E,EAAOxd,KACLC,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACErI,IAAKiH,EACLlI,QAASkd,EACT9c,MAAO,CAAEkE,OAAQ,UAChB9F,EAAM8I,WAAWA,WAAWY,GAAYvL,OAI/C,OAAOsgB,GACN,KAELvd,EAAAC,EAAAC,cAAA,oBAAYpB,EAAM2K,QAAQgU,QACzB/f,OAAO4V,KAAK2J,GAAqBrZ,OAAS,EACvClG,OAAO4V,KAAK2J,GAAqB7b,IAAI,SAACoH,GACtC,IAAMkV,EAAchgB,OAAO6L,OAAO0T,GAAqBzU,IACvD,OACExI,EAAAC,EAAAC,cAAA,KAAGQ,MAAO,CAAEkE,OAAQ,GAAKrD,IAAKiH,GAC3B1J,EAAM8I,WAAWA,YAAYY,GAAYvL,KAD5C,WAC0DygB,EAAY3N,OAAO,SAAC4N,EAAOrY,GAAR,OAAkBqY,EAAQrY,GAAO,GAAKoY,EAAY9Z,OAD/H,KACyI8Z,EAAYE,KAAK,MAD1J,OAKF,cA+CPC,IAxCI,OCtEIC,GAtB+E,SAAChf,GAC7F,OACEkB,EAAAC,EAAAC,cAAA,OACEiB,UAAU,MACVT,MAAO,CACLwI,QAAS,eACTtE,OAAQ,EACRmZ,SAAU,GACV9U,MAAO,GACPiB,OAAQ,GACRqS,aAAc,MACdyB,YAAa,EACbxB,WAAY,OACZE,WAAY,OACZC,cAAe,OACfC,OAAQ,UACRP,QAAS,GACT4B,YAAanf,EAAMof,MAAQ,QAAU,uBHkExCjD,qJA4BL,II/DKkD,GJimBUC,GAFoBtc,YAroBX,SAACC,GACxB,MAAO,CACJH,QAASG,EAAMH,QACf2K,QAASxK,EAAMwK,QACf3E,WAAY7F,EAAM6F,WAClBM,YAAanG,EAAMmG,YACnBnB,SAAUhF,EAAMgF,SAChBgL,MAAOhQ,EAAMgQ,QAIU,SAAC/P,GAC3B,MAAO,CACJqc,aAAc,SAACnR,EAAmBD,GAChCjL,EXsLC,SAAsBkL,EAAmBD,GAC9C,MAAO,CACLrO,KAAM,gBACNqI,OAAQ,CACNgG,SACAC,cW3LSmR,CAAanR,EAAWD,KAEnCqR,iBAAkB,SAACpR,EAAmBD,GACpCjL,EX6LC,SAA0BkL,EAAmBD,GAElD,OADA9F,QAAQC,IAAI,MAAO8F,EAAWD,GACvB,CACL7J,MAAO,gBACPmb,MAAM,EACNjb,QAAS,CACPkb,QAASC,OACTvR,YACAD,WWrMSqR,CAAiBpR,EAAWD,KAEvCyR,sBAAuB,WACrB1c,EXjBG,CACLoB,MAAO,gBACPub,OAAQ5S,MWiBR6S,uBAAwB,WACtB5c,EXNG,CACLoB,MAAO,iBACPub,OAAQ3S,MWMR6S,oBAAqB,WACnB7c,EXKG,CACLoB,MAAO,cACPub,OAAQzS,MWLR4S,sBAAuB,WACrB9c,EXSG,CACLoB,MAAO,gBACPub,OAAQ1S,MWTR8S,qBAAsB,WACpB/c,EXaG,CACLoB,MAAO,eACPub,OAAQvS,MWbR4S,wBAAyB,WACvBhd,EXiBG,CACLoB,MAAO,kBACPub,OAAQtS,MWjBR4S,qBAAsB,WACpBjd,EXqBG,CACLoB,MAAO,eACPub,OAAQxS,MWrBR+S,eAAgB,WACdld,EXyBG,CACLoB,MAAO,QACP+b,OAAO,KWzBPzT,cAAe,WACb1J,EAAS0J,OAEXD,aAAc,WACZzJ,EAASyJ,SAslBoB3J,CAhiBoD,SAAChD,GAAU,IAAAqD,EACvE9C,IAAM+C,WAAW,SAACL,EAAcM,GACzD,OAAQA,EAAOzD,MACX,IAAK,sBACH,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBqd,YAAa/c,EAAO+c,YAAc,EAAI/c,EAAO+c,YAAc,IAChF,IAAK,0BACH,OAAO1hB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmB0a,gBAAiBpa,EAAO6K,UAAWmS,qBAAsB,KAC9E,IAAK,gCACH,OAAO3hB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmB0a,gBAAiB,GAAI4C,qBAAsBhd,EAAO6K,YACvE,IAAK,iBACH,OAAOxP,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBud,OAAQjd,EAAOid,SACpC,IAAK,mBACH,OAAO5hB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBwG,SAAUlG,EAAOkG,WACtC,IAAK,kBACH,OAAO7K,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBgF,SAAU1E,EAAO0E,WACtC,IAAK,oBACH,OAAOrJ,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEEwd,cAAeld,EAAOmd,SAAW,EAAInd,EAAOmd,SAAW,EACvDC,cAAepd,EAAOqd,SAAW,EAAIrd,EAAOqd,SAAW,EACvDC,UAAWtd,EAAOud,KAAO,EAAIvd,EAAOud,KAAO,IAElD,QACC,OAAO7d,IAEP,CACAqd,YAAa,EACb3C,gBAAiB,GACjB4C,qBAAsB,GACtBE,cAAe,GACfI,UAAW,GACXF,cAAe,GACf1Y,SAAU,GACVuY,OAAQrE,GAAS4E,SACjBtX,cAAU3F,IAlCoFC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GAC1FJ,EAD0Fc,EAAA,GACnFb,EADmFa,EAAA,GAqChGxD,IAAMM,UAAU,WAEd,IADA,IAAMmgB,EAAiE,GACvEjO,EAAA,EAAA0F,EAAwB7Z,OAAO4V,KAAKxU,EAAMiI,UAA1C8K,EAAA0F,EAAA3T,OAAAiO,IAAqD,CAAhD,IAAM3E,EAASqK,EAAA1F,GAClBiO,GAAoB5S,GAApBxP,OAAAC,EAAA,EAAAD,CAAA,GACKoB,EAAMiI,UAAUmG,GADrB,CAEEuQ,OAAQsC,EAAuBjhB,EAAMiI,UAAUmG,MAGnDlL,EAAS,CAAEpD,KAAM,kBAAmBmI,SAAU+Y,KAC7C,CAAChhB,EAAMiI,SAAUhF,EAAMwd,cAAexd,EAAM4d,UAAW5d,EAAM0d,cAAe3gB,EAAMyN,UAErF,IAAMwT,EAAyB,SAACtW,GAC9B,IAAIuW,EAAc,EAClB,GAAIlhB,EAAMyN,QAAQK,eAAenD,EAAQzM,KAAQU,OAAO6L,OAAOzK,EAAMyN,QAAQK,eAAenD,EAAQzM,KAAM4G,OAAS,EAAG,CACpH,IAAMqZ,EAAoD,GACpDgD,EAAiBviB,OAAO6L,OAAOzK,EAAMyN,QAAQK,eAAenD,EAAQzM,KACtEkjB,EAAoBxiB,OAAO6L,OAAOzK,EAAM8I,WAAWA,YAAY4B,OAAO,SAAC2B,GACzE,OAAOA,EAAS0N,YACf,GAAG7b,GACNmK,QAAQC,IAAI,UAAW8Y,GACvB,QAAAvK,EAAA,EAAAuH,EAA0B+C,EAA1BtK,EAAAuH,EAAAtZ,OAAA+R,IAA0C,CAArC,IAAMwH,EAAWD,EAAAvH,GAAoBd,GAAA,EAAAC,GAAA,EAAAC,OAAAnS,EAAA,IACxC,QAAAqS,EAAAD,EAAqBmI,EAArBrF,OAAAC,cAAAlD,GAAAI,EAAAD,EAAAtR,QAAAsU,MAAAnD,GAAA,EAAkC,KAAvB5E,EAAuBgF,EAAA3P,MAC5BxG,EAAM8I,WAAWuG,SAAS8B,EAAOE,YAAY3H,aAAe0X,IACzDjD,EAAoBhN,EAAOhD,UAC9BgQ,EAAoBhN,EAAOhD,QAAU,GAGvCgQ,EAAoBhN,EAAOhD,SAAWgD,EAAOC,QAPT,MAAAkN,GAAAtI,GAAA,EAAAC,EAAAqI,EAAA,YAAAvI,GAAA,MAAAG,EAAAmD,QAAAnD,EAAAmD,SAAA,WAAArD,EAAA,MAAAC,IAY1C5N,QAAQC,IAAI,gBAAiB6V,GAC7B+C,GAAetiB,OAAO6L,OAAO0T,GAAqBrZ,OAGpD,QAAAqT,EAAA,EAAAnF,EAAyBpU,OAAO6L,OAAOzK,EAAMyN,QAAQG,cAArDuK,EAAAnF,EAAAlO,OAAAqT,IAAoE,CAA/D,IAAMkJ,EAAUrO,EAAAmF,GACfkJ,EAAWC,eAAiBD,EAAWC,cAAcpjB,KAAOyM,EAAQzM,IACtEgjB,IAGEG,EAAWE,kBAAoB5W,EAAQzM,IACzCgjB,IAGEG,EAAWG,gBAAgB3W,SAASF,EAAQzM,KAC9CgjB,IAIJ,OAAOA,GA+CTO,SAASC,WAAa,SAACpd,GACH,MAAdA,EAAM7B,MACR6B,EAAMO,iBA9CS,WACjB,IAAM8c,EAAU/iB,OAAO4V,KAAKxU,EAAMiT,OAAO3Q,IAAI,SAACkE,GAAD,OAAW4T,SAAS5T,KAAQyK,OAAO,SAAC2Q,EAAwBzT,GAQvG,OAPInO,EAAMiT,MAAM9E,GAAQ3P,YACjBwB,EAAMyN,QAAQG,aAAaO,SAC0BrK,IAArD9D,EAAMyN,QAAQG,aAAaO,GAAQmT,eACqB,IAAxDthB,EAAMyN,QAAQG,aAAaO,GAAQmT,cAAcpjB,IAClD0jB,EAAa3gB,KAAKkN,IAGjByT,GACN,IAEH,GADAvZ,QAAQC,IAAIqZ,GACRA,EAAQ7c,OAAS,EAAG,CACtB,IAAM+c,EAAeF,EAAQ3P,KAAKC,MAAMD,KAAKE,SAAWyP,EAAQ7c,SAChEuD,QAAQC,IAAIuZ,GACZ,IAAMC,EAAoBljB,OAAO6L,OAAOxH,EAAMgF,UAAUyC,OAAO,SAACC,GAC9D,OAAIA,EAAQc,aAAexI,EAAMqd,eAI7BtgB,EAAMyN,QAAQG,aAAaiU,IACzBlX,EAAQzM,KAAQ8B,EAAMyN,QAAQG,aAAaiU,GAAcN,kBACxDvhB,EAAMyN,QAAQG,aAAaiU,GAAcL,gBAAgB3W,SAASF,EAAQzM,MAItDyM,EAAQC,YAAYtI,IAAI,SAACoH,GAClD,OAAO1J,EAAM8I,WAAWA,WAAWY,GAAYrL,UAEvBwM,SAAS7K,EAAMiT,MAAM4O,GAAcxjB,WAC5D6b,KAAK,SAAC/Y,EAAsBgZ,GAC7B,OAAOhZ,EAAEwd,OAASxE,EAAEwE,SAEtBtW,QAAQC,IAAIwZ,GAEZ,IAAMC,EAAeD,EAAkB,GAAGnD,OACpCqD,EAA2BF,EAAkBpX,OAAO,SAACC,GACzD,OAAOA,EAAQgU,SAAWoD,IAG5BxC,EAAayC,EAAyBhQ,KAAKC,MAAMD,KAAKE,SAAW8P,EAAyBld,SAAS5G,GAAK2jB,IAOxGI,KAIJ1hB,IAAMM,UAAU,WACd,IAAMiB,EAAU,SAACwC,GACf+D,QAAQC,IAAIhE,EAAMiC,OAAOlE,WACM,QAA3BiC,EAAMiC,OAAOlE,WAAwBiC,EAAMiC,OAAOlE,UAAUwI,SAAS,UACvEqX,KAGEC,EAAU,SAAC7d,GACG,WAAdA,EAAM7B,KACRyf,KAcJ,OAVAT,SAASW,iBAAiB,YAAatgB,GACvC2f,SAASW,iBAAiB,UAAWD,GACrCniB,EAAM4f,wBACN5f,EAAM8f,yBACN9f,EAAM+f,sBACN/f,EAAMggB,wBACNhgB,EAAMmgB,uBACNngB,EAAMkgB,0BACNlgB,EAAMigB,uBAEC,WACLwB,SAASY,oBAAoB,YAAavgB,GAC1C2f,SAASY,oBAAoB,UAAWF,GACxCniB,EAAMogB,mBAEP,IAEH,IAAMb,EAAe,SAACnR,EAAmBD,GACvCnO,EAAMuf,aAAanR,EAAWD,GAC9BnO,EAAMwf,iBAAiBpR,EAAWD,IAG9B+T,EAAiB,WACrBhf,EAAS,CACPpD,KAAM,0BACNsO,UAAW,MAiPhB,OACGlN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+I,SAAA,KACEhJ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,KACEjK,EAAAC,EAAAC,cAACkhB,GAAA,EAAUtgB,OAAX,CAAkB0R,GAAIvI,IAAKa,OAAQtJ,SAAS,KAA5C,eAGAxB,EAAAC,EAAAC,cAACkhB,GAAA,EAAUpgB,SAAX,CAAoBQ,SAAS,KAC3BxB,EAAAC,EAAAC,cAAC+J,EAAA,EAAKE,KAAN,KACEnK,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAQI,KAAK,KAAKhF,QAAS,kBAAMoB,EAAS,CAAEpD,KAAM,iBAAkB0gB,OAAQrE,GAAS4E,aAArF,eACA7f,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAQI,KAAK,KAAKhF,QAAS,kBAAMoB,EAAS,CAAEpD,KAAM,iBAAkB0gB,OAAQrE,GAASoG,iBAArF,oBACArhB,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAQI,KAAK,KAAKhF,QAAS,kBAAMoB,EAAS,CAAEpD,KAAM,iBAAkB0gB,OAAQrE,GAASqG,kBAArF,qBACAthB,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAQI,KAAK,KAAKhF,QAAS,kBAAMoB,EAAS,CAAEpD,KAAM,iBAAkB0gB,OAAQrE,GAASsG,gBAArF,+CACAvhB,EAAAC,EAAAC,cAAA,oBACCxC,OAAO6L,OAAOzK,EAAM8I,WAAWA,YAAYmI,OAAO,SAACyR,EAAyBrW,GAY3E,OAXKA,EAASoN,WACZiJ,EAAQzhB,KACNC,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEjE,IAAK4J,EAASnO,GACd4I,KAAK,KACLhF,QAAS,kBAAMoB,EAAS,CACtBpD,KAAM,mBACN2J,SAAU4C,EAASnO,OALvB,MAMUmO,EAASlO,OAGhBukB,GACN,OAITxhB,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,KACEjK,EAAAC,EAAAC,cAACkhB,GAAA,EAAUtgB,OAAX,CAAkB0R,GAAIvI,IAAKa,OAAQtJ,SAAS,KAA5C,QACQO,EAAMqd,aAGdpf,EAAAC,EAAAC,cAACkhB,GAAA,EAAUpgB,SAAX,CAAoBQ,SAAS,KAC3BxB,EAAAC,EAAAC,cAAC+J,EAAA,EAAKE,KAAN,KACEnK,EAAAC,EAAAC,cAACuhB,GAAA,EAAD,CAAYtgB,UAAU,OAAOT,MAAO,CAClCmE,SAAU,IACV6c,YAAa,KAEb1hB,EAAAC,EAAAC,cAACuhB,GAAA,EAAWhX,KAAZ,eACAzK,EAAAC,EAAAC,cAACyhB,GAAA,EAAD,CACEvc,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CAAEpD,KAAM,sBAAuBwgB,aAAchc,EAAMiC,OAAOC,SAC7F1G,KAAK,SACL0G,MAAO,GAAKvD,EAAMqd,mBAyD9Bpf,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACVwI,QAAS,OACTE,eAAgB,SAChBC,SAAU,OACVzE,OAAQ,gBAzVO,WACnB,IAAMgd,EAA4B,eAAA7e,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,EAAO+J,GAAP,OAAAjK,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC/B3B,EAAM0a,kBAAoBvP,EAC5BlL,EAAS,CAAEpD,KAAM,0BAA2BsO,UAAW,KAEvDlL,EAAS,CAAEpD,KAAM,0BAA2BsO,cAJX,wBAAA1J,EAAAc,SAAAnB,MAAH,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,GAQlC,GAAIhH,OAAO6L,OAAOzK,EAAMoJ,aAAatE,OAAS,GAAKlG,OAAO6L,OAAOxH,EAAMgF,UAAUnD,OAAS,EAAG,CAE3F,IAAMie,EAAiBnkB,OAAO6L,OAAOxH,EAAMgF,UACxCyC,OAAO,SAACC,GACP,OAAO1H,EAAMwG,UAAWkB,EAAQC,YAAYC,SAAS5H,EAAMwG,YAE5DyQ,KAAK,SAAC/Y,EAAsBgZ,GAAyB,IAAA6I,EACpD,OAAQ/f,EAAMud,QACZ,KAAKrE,GAASoG,aACZ,IAAKviB,EAAMyN,QAAQK,eAAe3M,EAAEjD,MAAS8B,EAAMyN,QAAQK,eAAeqM,EAAEjc,IAC1E,OAAO,EAET,IAAK8B,EAAMyN,QAAQK,eAAeqM,EAAEjc,IAClC,OAAQ,EAEV,IAAK8B,EAAMyN,QAAQK,eAAe3M,EAAEjD,IAClC,OAAO,EAGT,IAAMigB,GAAwE6E,EAAA,GAAApkB,OAAAiT,EAAA,EAAAjT,CAAAokB,EAC3E7hB,EAAEjD,GAAM,IADmEU,OAAAiT,EAAA,EAAAjT,CAAAokB,EAE3E7I,EAAEjc,GAAM,IAFmE8kB,GAIxE5B,EAAoBxiB,OAAO6L,OAAOzK,EAAM8I,WAAWA,YAAY4B,OAAO,SAAC2B,GAC3E,OAAOpJ,EAAMwG,SAAW4C,EAASnO,KAAQ+E,EAAMwG,SAAW4C,EAAS0N,YAClE,GAAG7b,GACAijB,EAAiBviB,OAAO6L,OAAOzK,EAAMyN,QAAQK,eAAe3M,EAAEjD,KAAMmC,OAAOzB,OAAO6L,OAAOzK,EAAMyN,QAAQK,eAAeqM,EAAEjc,MAlBhIqY,GAAA,EAAAC,GAAA,EAAAC,OAAA3S,EAAA,IAmBE,QAAA6S,EAAAD,EAA0ByK,EAA1BnI,OAAAC,cAAA1C,GAAAI,EAAAD,EAAA9R,QAAAsU,MAAA3C,GAAA,EAA0C,KAA/B8H,EAA+B1H,EAAAnQ,MAAAwQ,GAAA,EAAAC,GAAA,EAAAC,OAAApT,EAAA,IACxC,QAAAsT,EAAAD,EAAqBkH,EAArBrF,OAAAC,cAAAjC,GAAAI,EAAAD,EAAAvS,QAAAsU,MAAAlC,GAAA,EAAkC,KAAvB7F,EAAuBiG,EAAA5Q,MAC5B2K,EAAO5L,SAAW+D,GAAa2Z,WAC7BjjB,EAAM8I,WAAWuG,SAAS8B,EAAOE,YAAY3H,aAAe0X,IACzDjD,EAAoBhN,EAAO/C,WAAW+C,EAAOhD,UAChDgQ,EAAoBhN,EAAO/C,WAAW+C,EAAOhD,QAAU,GAGzDgQ,EAAoBhN,EAAO/C,WAAW+C,EAAOhD,SAAWgD,EAAOC,QAR7B,MAAAkN,GAAArH,GAAA,EAAAC,EAAAoH,EAAA,YAAAtH,GAAA,MAAAG,EAAAkC,QAAAlC,EAAAkC,SAAA,WAAApC,EAAA,MAAAC,KAnB5C,MAAAoH,GAAA9H,GAAA,EAAAC,EAAA6H,EAAA,YAAA/H,GAAA,MAAAG,EAAA2C,QAAA3C,EAAA2C,SAAA,WAAA7C,EAAA,MAAAC,GAiCE,IAAMyM,EAAkBtkB,OAAO6L,OAAO0T,EAAoBhd,EAAEjD,KACtDilB,EAAkBvkB,OAAO6L,OAAO0T,EAAoBhE,EAAEjc,KAC5DmK,QAAQC,IAAI4a,EAAiBC,GAE7B,IAAMC,EAASF,EAAgBjS,OAAO,SAAC4N,EAAOzN,GAAR,OAAkByN,EAAQzN,GAAO,IAAM8R,EAAgBpe,OAAS,EAAIoe,EAAgBpe,OAAS,GAC7Hue,EAASF,EAAgBlS,OAAO,SAAC4N,EAAOzN,GAAR,OAAkByN,EAAQzN,GAAO,IAAM+R,EAAgBre,OAAS,EAAIqe,EAAgBre,OAAS,GAGnI,OADAuD,QAAQC,IAAI8a,EAAQC,GACbD,EAASC,EAAS,GAAK,EAChC,KAAKlH,GAASqG,cACZ,OAAOrhB,EAAEwd,OAASxE,EAAEwE,OACtB,QACE,OAA0B,IAAjBxd,EAAE6J,aAAuB7J,EAAEuK,aAAkC,IAAjByO,EAAEnP,aAAuBmP,EAAEzO,gBAGrFuF,OAAO,SAACqS,EAAwB3Y,GACjC,IAAMI,EAAa/K,EAAMoJ,YAAYuB,EAAQK,cAe7C,OAdIL,EAAQc,aAAexI,EAAMqd,aAC/BgD,EAAOriB,KACLC,EAAAC,EAAAC,cAACmiB,GAAD,CACE9gB,IAAKkI,EAAQzM,GACbsf,QAAQ,EACRQ,SAAS,EACT7P,OAAQ,EACRxD,QAASA,EACTI,WAAYA,EACZ4S,gBAAiB1a,EAAM0a,gBAAkB,KACzCI,4BAA6B+E,KAI5BQ,GACN,IAEH,OAA8B,IAA1BP,EAAeje,OACV5D,EAAAC,EAAAC,cAAA,sCAGF2hB,GAmQJS,IAEHtiB,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACVwI,QAAS,OACTE,eAAgB,SAChBC,SAAU,OACVzE,OAAQ,gBArQK,WACjB,IAyBM2d,EAA2B,eAAA1Z,EAAAnL,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAA4F,EAAOoE,GAAP,OAAAjK,EAAAhD,EAAAsD,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,OAC9B3B,EAAMsd,uBAAyBnS,EACjClL,EAAS,CAAEpD,KAAM,gCAAiCsO,UAAW,KAE7DlL,EAAS,CAAEpD,KAAM,gCAAiCsO,cAJlB,wBAAAnE,EAAAzE,SAAAwE,MAAH,gBAAAqE,GAAA,OAAAtE,EAAArE,MAAAC,KAAAC,YAAA,GAyFjC,OAAOhH,OAAO6L,OAAOzK,EAAMiT,OAAOiH,KAAK,SAAC/Y,EAASgZ,GAC/C,OAAOhZ,EAAE9C,QAAW8b,EAAE9b,SAAY,EAAI,IACrC4S,OAAO,SAACyS,EAAwB/kB,GAwBjC,OAvBIA,EAAKH,WACPklB,EAAOziB,KACLC,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CACE1I,IAAK9D,EAAKT,GACVmE,UAAW,QACXT,MAAO,CACLuI,MAAO,IACPrE,OAAQ,EACRgY,OAAQ,WAEVhc,QAAS,kBA/HcqM,EA+HcxP,EAAKT,GA9HhDmK,QAAQC,IAAIrF,EAAM0a,iBACmB,IAAjC1a,EAAM0a,gBAAgB7Y,OACjB,KAIP9E,EAAMyN,QAAQG,aAAaO,IACxBnO,EAAMyN,QAAQG,aAAaO,GAAQoT,mBAAqBte,EAAM0a,iBAC9D3d,EAAMyN,QAAQG,aAAaO,IAC3BnO,EAAMyN,QAAQG,aAAaO,GAAQqT,gBAAgB3W,UAAU5H,EAAM0a,iBAE/D,UAGL3d,EAAMiI,UAAUhF,EAAM0a,iBAAiB/S,YAAYtI,IAAI,SAACoH,GAC1D,OAAO1J,EAAM8I,WAAWA,WAAWY,GAAYrL,UAAY2B,EAAMiT,MAAM9E,GAAQ9P,UAC9EwM,UAAS,KACV0U,GAActc,EAAM0a,gBAAiBxP,GACrC+T,MAnB0B,IAAC/T,IAgIvBjN,EAAAC,EAAAC,cAAC+J,EAAA,EAAKE,KAAN,CAAWhJ,UAAW,SACpBnB,EAAAC,EAAAC,cAAC+J,EAAA,EAAKG,MAAN,CAAYjJ,UAAW,SAAU1D,EAAKR,MACtC+C,EAAAC,EAAAC,cAAC+J,EAAA,EAAKK,SAAN,CAAenJ,UAAU,mBACtB1D,EAAKN,SAER6C,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEwI,QAAS,OAAQuZ,SAAU,SApGvB,SAACxV,GAC3B,IAAMyV,EAAW,GACjB,GAAI5jB,EAAMyN,QAAQG,aAAaO,GAAS,CAEtC,IAAMmT,EAAgBthB,EAAMyN,QAAQG,aAAaO,GAAQmT,cACrDA,GAAsC,IAArBA,EAAcpjB,IAAY8B,EAAMiI,SAASqZ,EAAcpjB,IAC1E0lB,EAAS3iB,KACPC,EAAAC,EAAAC,cAACmiB,GAAD,CACE9gB,IAAK6e,EAAcpjB,GACnBsf,QAAQ,EACRQ,QAASsD,EAAcuC,QACvB9Y,WAAY/K,EAAMoJ,YAAYpJ,EAAMiI,SAASqZ,EAAcpjB,IAAI8M,cAC/DL,QAAS1H,EAAMgF,SAASqZ,EAAcpjB,IACtCiQ,OAAQA,EACRwP,gBAAiB1a,EAAMsd,qBACvBnD,cAAe,SAAC9Y,GAId,OAHA+D,QAAQC,IAAIhE,EAAMxE,MAClBwE,EAAMO,kBAEC,GAETkZ,4BAA6B,kBAAM0F,EAA4BnC,EAAcpjB,GAAK,IAAMiQ,OAI5FyV,EAAS3iB,KACPC,EAAAC,EAAAC,cAAC0iB,GAAD,CAAoC1E,OAAK,EAAC3c,KAAM,KAIpD,IAAM8e,EAAkBvhB,EAAMyN,QAAQG,aAAaO,GAAQoT,gBACvDA,GAAmBvhB,EAAMiI,SAASsZ,GACpCqC,EAAS3iB,KACPC,EAAAC,EAAAC,cAACmiB,GAAD,CACE9gB,IAAK8e,EACL/D,QAAQ,EACRQ,SAAS,EACTjT,WAAY/K,EAAMoJ,YAAYpJ,EAAMiI,SAASsZ,GAAiBvW,cAC9DL,QAAS1H,EAAMgF,SAASsZ,GACxB5D,gBAAiB1a,EAAMsd,qBACvBpS,OAAQA,EACR4P,4BAA6B,kBAAM0F,EAA4BlC,EAAkB,IAAMpT,OAI3FyV,EAAS3iB,KACPC,EAAAC,EAAAC,cAAC0iB,GAAD,CAAoC1E,OAAO,EAAO3c,KAAM,KAI5D,IAAM+e,EAAkBxhB,EAAMyN,QAAQG,aAAaO,GAAQqT,gBAC3D,GAAIA,EAAiB,CACnB,IAAMuC,EAAQ,GADKC,GAAA,EAAAC,GAAA,EAAAC,OAAApgB,EAAA,IAEnB,IAFmB,IAEnBqgB,EAFmBC,EAAA,eAERhW,EAFQ+V,EAAA3d,MAGbxG,EAAMiI,SAASmG,IACjB2V,EAAM9iB,KACJC,EAAAC,EAAAC,cAACmiB,GAAD,CACE9gB,IAAU2L,EAAY,IAAMD,EAC5BqP,QAAQ,EACRQ,SAAS,EACTjT,WAAY/K,EAAMoJ,YAAYpJ,EAAMiI,SAASmG,GAAWpD,cACxDL,QAAS1H,EAAMgF,SAASmG,GACxBD,OAAQA,EACRwP,gBAAiB1a,EAAMsd,qBACvBxC,4BAA6B,kBAAM0F,EAA4BrV,EAAY,IAAMD,QAXzFkW,EAAwB7C,EAAxBxI,OAAAC,cAAA+K,GAAAG,EAAAE,EAAAzf,QAAAsU,MAAA8K,GAAA,EAAyCI,IAFtB,MAAA9F,GAAA2F,GAAA,EAAAC,EAAA5F,EAAA,YAAA0F,GAAA,MAAAK,EAAAhL,QAAAgL,EAAAhL,SAAA,WAAA4K,EAAA,MAAAC,GAkBnBN,EAAS3iB,KAAK8iB,EAAMO,iBAGtBV,EAAS3iB,KAAK,CACZC,EAAAC,EAAAC,cAAC0iB,GAAD,CAAoC1E,OAAK,EAAC3c,KAAM,IAChDvB,EAAAC,EAAAC,cAAC0iB,GAAD,CAAoC1E,OAAO,EAAO3c,KAAM,MAI5D,OAAOmhB,EAuBIW,CAAoB5lB,EAAKT,QAM7BwlB,GACN,IAyHEc,iBIzlBJnF,uJAeL,IAuHeoF,GALWzhB,YApKF,SAACC,GACxB,MAAO,CACN6F,WAAY7F,EAAM6F,WAClBrF,WAAYR,EAAMQ,WAClB2F,YAAanG,EAAMmG,YACnBnB,SAAUhF,EAAMgF,SAChBgL,MAAOhQ,EAAMgQ,QAIY,SAAC/P,GAC3B,MAAO,CACNwhB,aAAc,kBAAMxhB,Ef0EpB,eAAAe,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAO,SAAAC,EAAOnB,GAAP,IAAAiF,EAAA3D,EAAA,OAAAL,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBI,IAAMyC,IAAI,2BAF5B,YAEGU,EAFHzD,EAAAY,MAGQC,OAHR,CAAAb,EAAAE,KAAA,QAIKJ,EAAwB2D,EAAOnJ,KACrCkE,EAASsK,GAAYhJ,IALpBE,EAAAE,KAAA,sBAOK,IAAI1F,MAAM,aAPf,QAAAwF,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAA0D,GAAA1D,EAAA,SAUH2D,QAAQC,IAAR5D,EAAA0D,IAVG1D,EAAAK,OAAA,SAWImC,QAAQC,WAXZ,yBAAAzC,EAAAc,SAAAnB,EAAA,kBAAP,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,KezEAyD,iBAAkB,kBAAMnG,EAASmG,OACjCnB,cAAe,kBAAMhF,EAASgF,MAC9B2K,WAAY,kBAAM3P,EAAS2P,OAC3BjG,cAAe,kBAAM1J,EAAS0J,OAC9BD,aAAc,kBAAMzJ,EAASyJ,SAmJL3J,CAlH2C,SAAChD,GAAU,IAAAqD,EACrD9C,IAAM+C,WAAW,SAACL,EAAcM,GACzD,OAAQA,EAAOzD,MACd,IAAK,cACJ,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBuG,UAAW6V,GAAU/f,OACzC,IAAK,aACJ,OAAOV,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBuG,UAAWjG,EAAOohB,QACtC,QACC,OAAO1hB,IAEP,CACFuG,UAAW6V,GAAU/f,WACnBwE,GAZ4EC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GACxEJ,EADwEc,EAAA,GACjEb,EADiEa,EAAA,GAazEsP,EAAa,kBAAMnQ,EAAS,CAAEpD,KAAM,iBAE1CS,IAAMM,UAAU,WACf,IAAMiJ,EAAY,eAAA7F,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,OAAAF,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACpB5E,EAAM2M,eADcjI,EAAAE,KAAA,EAEdsC,QAAQM,IAAI,CACjBxH,EAAM0kB,eACN1kB,EAAMqJ,mBACNrJ,EAAMkI,gBACNlI,EAAM6S,eANa,OAQpB7S,EAAM4M,gBARc,wBAAAlI,EAAAc,SAAAnB,MAAH,yBAAAJ,EAAAyB,MAAAC,KAAAC,YAAA,GAWZhH,OAAO6L,OAAOzK,EAAMiT,OAAOnO,OAAS,GACtClG,OAAO6L,OAAOzK,EAAMiI,UAAUnD,OAAS,GACvClG,OAAO6L,OAAOzK,EAAMoJ,aAAatE,OAAS,GAC7CgF,KAEC,IAiEH,OACC5I,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEkE,OAAQ,SACrB5E,EAAAC,EAAAC,cAAA,MAAIQ,MAAO,CAAEoE,UAAW,WAAxB,YAhEGhG,EAAMyD,WACF,UAGkC,IAAtC7E,OAAO6L,OAAOzK,EAAMiT,OAAOnO,OACvB,UAKP5D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+I,SAAA,KACChJ,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACXwI,QAAS,OACTE,eAAgB,SAChBC,SAAU,SAEVrJ,EAAAC,EAAAC,cAACgP,GAAA,EAAD,KACClP,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACC5E,QAAS,kBAAMoB,EAAS,CACvBpD,KAAM,aACN6kB,MAAOtF,GAAUuF,kBAElB9d,KAAK,MALN,mBAQA5F,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACC5E,QAAS,kBAAMoB,EAAS,CACvBpD,KAAM,aACN6kB,MAAOtF,GAAUwF,qBAElBrjB,QACC5C,OAAO6L,OAAOzK,EAAMoJ,aAAatE,OAAS,GAAK9E,EAAMyD,WAClD,kBACA,SAEJqD,KAAK,MAVN,uBAaA5F,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACC5E,QAAS,kBAAMoB,EAAS,CACvBpD,KAAM,aACN6kB,MAAOtF,GAAUyF,cAElBtjB,QAAQ,kBACRsF,KAAK,MANN,iBAWF5F,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACXkE,OAAQ,gBAEkC,IAAzClH,OAAO6L,OAAOzK,EAAMiI,UAAUnD,QACiB,IAA5ClG,OAAO6L,OAAOzK,EAAMoJ,aAAatE,QACkB,IAAnDlG,OAAO6L,OAAOzK,EAAM8I,WAAWuG,UAAUvK,OACzC5D,EAAAC,EAAAC,cAAC2jB,GAAD,MACA,OAUN7jB,EAAAC,EAAAC,cAAC4jB,GAAD,CACCxb,UAAWvG,EAAMuG,YAAc6V,GAAUuF,eACzCvR,WAAYA,IACbnS,EAAAC,EAAAC,cAAC6jB,GAAD,CACCzb,UAAWvG,EAAMuG,YAAc6V,GAAUwF,kBACzCxR,WAAYA,IACbnS,EAAAC,EAAAC,cAAC8jB,GAAD,CACC1b,UAAWvG,EAAMuG,YAAc6V,GAAUyF,WACzCzR,WAAYA,OCxIH8R,GAAiB,CAC5BhnB,KAAM,GACN4b,WAAW,EACXN,WAAW,EACXO,YAAa,GACb3b,QAAS,GACTgR,SAZgC,WACjC,IAAM+V,EAA0C,GAEhD,OADAA,GAAc,GAAKC,IAAqB,GACjCD,EASIE,IAGL,SAASD,GAAoBnnB,GAClC,MAAO,CACLA,KACFC,KAAM,GACNuT,OAAQ,GACRC,SAAU,EACVC,SAAU,GACVlI,YAAa,GC9Cf,IA8De6b,GA9D2E,SAACvlB,GACzF,IAAM0b,EAAe,SAACpX,GACpB,IAAMiC,EAASjC,EAAMiC,OACrBvG,EAAMwlB,eAAN5mB,OAAAC,EAAA,EAAAD,CAAA,GACKoB,EAAMqP,SADXzQ,OAAAiT,EAAA,EAAAjT,CAAA,GAEG2H,EAAOpI,KAAOoI,EAAOC,UAI1B,OACEtF,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEga,aAAc,KAC1B1a,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,sBACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUrG,EAAMyD,WAChBtF,KAAK,OACLmI,SAAUoV,EACVlV,MAAOxG,EAAMqP,SAASlR,KACtBsI,YAAY,UAEhBvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,eACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEsN,GAAG,WACHrN,SAAUrG,EAAMyD,WAChBtF,KAAK,SACLmI,SAAUoV,EACVlV,MAAOxG,EAAMqP,SAASqC,OACtBjL,YAAY,YAEhBvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAK2V,IAAN,KACE3a,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,CAAYuN,GAAIoI,MACd5a,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,kBACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUrG,EAAMyD,WAChBtF,KAAK,WACLmI,SAAUoV,EACV5b,KAAK,SACL0G,MAAO,GAAKxG,EAAMqP,SAASsC,YAE/BzQ,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,CAAYuN,GAAIoI,MACd5a,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,kBACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUrG,EAAMyD,WAChBtF,KAAK,WACLmI,SAAUoV,EACV5b,KAAK,SACL0G,MAAO,GAAKxG,EAAMqP,SAASuC,aAGjC1Q,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUrG,EAAMyD,WAChB3B,QAAS,kBAAM9B,EAAMylB,eAAezlB,EAAMqP,SAASnR,KACnD4I,KAAK,KACLtF,QAAQ,kBAJV,uWCrDN,IAqOekkB,GAFkB1iB,YAAQ,KAnOd,SAACE,GAC3B,MAAO,CACN2F,eAAgB,SAACC,GAChB5F,EAAS2F,GAAeC,KAEvB8D,cAAe,WACb1J,EAAS0J,OAEXD,aAAc,WACZzJ,EAASyJ,SA0NkB3J,CAlMkD,SAAChD,GAAU,IAAAqD,EACnE9C,IAAM+C,WAAW,SAACL,EAAcM,GACzD,OAAQA,EAAOzD,MACX,IAAK,2BACH,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmB0iB,qBAAsB1iB,EAAM0iB,qBAAuB,IACxE,IAAK,kBACH,OAAO/mB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBoJ,SAAU9I,EAAO8I,WACzC,QACC,OAAOpJ,IAEP,CACAQ,YAAY,EACZ4I,SAAUrM,EAAMqM,SAChBsZ,sBAAuB,QACtB7hB,GAdyFC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GACtFJ,EADsFc,EAAA,GAC/Eb,EAD+Ea,EAAA,GAgBtFsI,EAAWrM,EAAMqM,SAEvB9L,IAAMM,UAAU,WACdqC,EAAS,CAAEpD,KAAM,kBAAmBuM,SAAUrM,EAAMqM,YACnD,CAACA,IAEJ,IAAMkQ,EAAiB,eAAAtY,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,IAAA8D,EAAAnJ,EAAA,OAAAmF,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACxB5E,EAAM2M,eADkBjI,EAAAE,KAAA,EAEHI,IAAMC,KAAK,yBAA0B,CACxD6D,WAAY,CAAClK,OAAAC,EAAA,EAAAD,CAAA,GACRqE,EAAMoJ,SADC,CAEVgD,SAAUzQ,OAAO6L,OAAOxH,EAAMoJ,SAASgD,UAAU/M,IAAI,SAAC+M,GAEpD,MAAO,CAAElR,KADoCkR,EAArClR,KACOuT,OAD8BrC,EAA/BqC,OACSC,SADsBtC,EAAvBsC,SACWC,SADYvC,EAAbuC,iBANd,QAElBzJ,EAFkBzD,EAAAY,MAWbC,SACHvG,EAAOmJ,EAAOnJ,KACpBgB,EAAM6I,eAAe7J,GACrBgB,EAAMqT,aACNrT,EAAM4M,iBAfgB,wBAAAlI,EAAAc,SAAAnB,MAAH,yBAAAJ,EAAAyB,MAAAC,KAAAC,YAAA,GAwDjBggB,EAAoB,WACxB,IAAMvW,EAAWpM,EAAMoJ,SAASgD,SAChCA,EAASpM,EAAM0iB,sBAAwBN,GAAoBpiB,EAAM0iB,sBACjEziB,EAAS,CAAEpD,KAAM,6BACjBoD,EAAS,CACPpD,KAAM,kBACNuM,SAASzN,OAAAC,EAAA,EAAAD,CAAA,GACJqE,EAAMoJ,SADH,CAENgD,gBAkFP,OACCnO,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOC,KAAM9L,EAAMwJ,UAAWuC,OAAQ/L,EAAMqT,YACxCnS,EAAAC,EAAAC,cAACyK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB/K,EAAAC,EAAAC,cAACyK,EAAA,EAAMP,MAAP,uBAEFpK,EAAAC,EAAAC,cAACyK,EAAA,EAAMR,KAAP,KAhFAnK,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,sBACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,kBACNuM,SAASzN,OAAAC,EAAA,EAAAD,CAAA,GACJqE,EAAMoJ,SADH,CAENlO,KAAMmG,EAAMiC,OAAOC,WAGvBA,MAAOvD,EAAMoJ,SAASlO,KACtB2B,KAAK,OACL2G,YAAY,SACdvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKyF,KAAN,CAAWtJ,UAAU,cAArB,8FAIFnB,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKgG,MAAN,CACE7F,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,kBACNuM,SAASzN,OAAAC,EAAA,EAAAD,CAAA,GACJqE,EAAMoJ,SADH,CAEN0N,UAAkC,OAAvBzV,EAAMiC,OAAOC,WAG5B1G,KAAK,WACLsM,MAAM,qBACRlL,EAAAC,EAAAC,cAAC8E,EAAA,EAAKyF,KAAN,CAAWtJ,UAAU,cAArB,sEAIFnB,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,gBACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChBtF,KAAK,UACLmI,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,kBACNuM,SAASzN,OAAAC,EAAA,EAAAD,CAAA,GACJqE,EAAMoJ,SADH,CAENhO,QAASiG,EAAMiC,OAAOC,WAG1BA,MAAOvD,EAAMoJ,SAAShO,QACtBoI,YAAY,aAEhBvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,6BACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEsN,GAAG,WACHrN,SAAUpD,EAAMQ,WAChBtF,KAAK,cACLmI,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,kBACNuM,SAASzN,OAAAC,EAAA,EAAAD,CAAA,GACJqE,EAAMoJ,SADH,CAEN2N,YAAa1V,EAAMiC,OAAOC,WAG9BA,MAAOvD,EAAMoJ,SAAS2N,YACtBvT,YAAY,iBAlHE,WACtB,IAAM+e,EAAiB,SAACnW,GACtBnM,EAAS,CACPpD,KAAM,kBACNuM,SAASzN,OAAAC,EAAA,EAAAD,CAAA,GACJqE,EAAMoJ,SADH,CAENgD,SAASzQ,OAAAC,EAAA,EAAAD,CAAA,GACJqE,EAAMoJ,SAASgD,SADZzQ,OAAAiT,EAAA,EAAAjT,CAAA,GAELyQ,EAASnR,GAAMmR,SAMlBoW,EAAiB,SAACpU,GAAuB,IAAAwU,EACD5iB,EAAMoJ,SAASgD,SAAvBoN,GADSoJ,EACvCxU,GADuCzS,OAAA8d,EAAA,EAAA9d,CAAAinB,EAAA,CACvCxU,GADuC/O,IAAAwjB,MAE7C5iB,EAAS,CACPpD,KAAM,kBACNuM,SAASzN,OAAAC,EAAA,EAAAD,CAAA,GACJqE,EAAMoJ,SADH,CAENgD,SAAUoN,OAKhB,OAAO7d,OAAO6L,OAAOxH,EAAMoJ,SAASgD,UAAU/M,IAAI,SAAC+M,GACjD,OAAOnO,EAAAC,EAAAC,cAAC2kB,GAAD,CACLtjB,IAAK4M,EAASnR,GACdmR,SAAUA,EACV5L,WAAYR,EAAMQ,WAClB+hB,eAAgBA,EAChBC,eAAgBA,MAqFfO,GACD9kB,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUpD,EAAMQ,WAChBjC,QAAQ,kBACRM,QAAS8jB,GAHX,kBAgBF1kB,EAAAC,EAAAC,cAACyK,EAAA,EAAM8H,OAAP,KACEzS,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUpD,EAAMQ,WAChB3B,QAAS9B,EAAMqT,WACf7R,QAAQ,aAHV,SAMAN,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUpD,EAAMQ,WAChB3B,QAASya,EACT/a,QAAQ,WAHV,wCClHOykB,GAFajjB,YApGJ,SAACC,GACxB,MAAO,CACNQ,WAAYR,EAAMQ,aAIO,SAACP,GAC3B,MAAO,CACNgjB,eAAgB,SAACxc,GAChBxG,EzBJI,SAAwBwG,GAC7B,MAAO,CAAE5J,KAAM0I,GAAiBkB,cyBGtBwc,CAAexc,KAEzBkD,cAAe,WACX1J,EAAS0J,OAEXD,aAAc,WACZzJ,EAASyJ,SAqFa3J,CAvE6C,SAAChD,GACzE,IAAMmmB,EAAY,eAAAliB,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,EAAOC,GAAP,OAAAH,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACpBN,EAAMO,iBACN7E,EAAM2M,eAFcjI,EAAAE,KAAA,EAGCI,IAAMC,KAAK,yBAA0B,CACzDyE,WAAY1J,EAAMqM,SAASnO,KAJR,OAAAwG,EAAAY,KAMTC,SACVvF,EAAMkmB,eAAelmB,EAAMqM,SAASnO,IACpC8B,EAAM4M,iBARa,wBAAAlI,EAAAc,SAAAnB,MAAH,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,GA4BlB,OACC1E,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CAAMvJ,MAAO,CACTuI,MAAO,QACPrE,OAAQ,SAER5E,EAAAC,EAAAC,cAAC+J,EAAA,EAAKE,KAAN,KACFnK,EAAAC,EAAAC,cAAC+J,EAAA,EAAKG,MAAN,KACEtL,EAAMqM,SAASlO,KAChB+C,EAAAC,EAAAC,cAAA,QAAMQ,MAAO,CAAEkE,OAAQ,UAAW9F,EAAMqM,SAAS0N,UAAY7Y,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOtJ,QAAQ,WAAf,WAA0CN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+I,SAAA,MAAOlK,EAAMqM,SAASoN,UAAYvY,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOtJ,QAAQ,aAAf,aAA+CN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+I,SAAA,OACxLhJ,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,UAAKpB,EAAMqM,SAAShO,UAE3B6C,EAAAC,EAAAC,cAAC+J,EAAA,EAAKQ,KAAN,CAAW/J,MAAO,CACjB6P,WAAY,aAEXzR,EAAMqM,SAAS2N,cAGf9Y,EAAAC,EAAAC,cAACglB,GAAA,EAAD,CAAW/jB,UAAU,oBAjCF,WACvB,GAAIrC,EAAMqM,SAASgD,SAClB,OAAOzQ,OAAO6L,OAAOzK,EAAMqM,SAASgD,UAAU/M,IAAI,SAAC+M,GAClD,OACCnO,EAAAC,EAAAC,cAACilB,GAAA,EAAD,CAAe5jB,IAAK4M,EAASnR,IAC5BgD,EAAAC,EAAAC,cAAA,UAAKiO,EAASlR,MACd+C,EAAAC,EAAAC,cAAA,KAAGQ,MAAO,CACT6P,WAAY,aADb,WAEYpC,EAASsC,SAFrB,MAEkCtC,EAASuC,SAAS1Q,EAAAC,EAAAC,cAAA,WACnDiO,EAASqC,WAyBPsU,IAEH9kB,EAAAC,EAAAC,cAAC+J,EAAA,EAAKE,KAAN,KACFnK,EAAAC,EAAAC,cAACgP,GAAA,EAAD,KACMlP,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACEL,SAAUrG,EAAMyD,WAChB3B,QAAS,SAACwC,GAAD,OAAgBtE,EAAMiU,UAAU3P,EAAOtE,EAAMqM,WACtDvF,KAAK,KACLtF,QAAQ,WAJV,QAOLN,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACCL,SAAUrG,EAAMyD,WAChB3B,QAASqkB,EACTrf,KAAK,KACLtF,QAAQ,kBAJT,eCgDUykB,GALajjB,YAhIJ,SAACC,GACxB,MAAO,CACN6F,WAAY7F,EAAM6F,aAIO,SAAC5F,GAC3B,MAAO,CACN6F,eAAgB,SAACD,GAChB5F,EAAS6F,GAAeD,OAuHC9F,CAjG6C,SAAChD,GAAU,IAAAqD,EACzD9C,IAAM+C,WAAW,SAACL,EAAcM,GACzD,OAAQA,EAAOzD,MACd,IAAK,aACA,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBuG,WAAW,EAAM8c,cAAe/iB,EAAO+iB,gBAC5D,IAAK,cACH,OAAO1nB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBuG,WAAW,IACnC,IAAK,gBACJ,OAAO5K,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IAChC,IAAK,iBACJ,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IAChC,QACC,OAAOR,IAEP,CACFqjB,cAAenB,GACf3b,WAAW,EACX/F,YAAY,QACVK,GAlBgFC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GAC5EJ,EAD4Ec,EAAA,GACrEb,EADqEa,EAAA,GAoBnFxD,IAAMM,UAAU,WACfgJ,KACE,IAEH,IAAMA,EAAe,eAAA5F,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,IAAA8D,EAAA3D,EAAA,OAAAL,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvB1B,EAAS,CAAEpD,KAAM,kBADM4E,EAAAE,KAAA,EAEFI,IAAMyC,IAAI,yCAFR,QAEjBU,EAFiBzD,EAAAY,MAIZC,SACJf,EAAyB2D,EAAOnJ,KACtCgB,EAAM+I,eAAevE,GACrBtB,EAAS,CAAEpD,KAAM,oBAPK,wBAAA4E,EAAAc,SAAAnB,MAAH,yBAAAJ,EAAAyB,MAAAC,KAAAC,YAAA,GA+CrB,OACC1E,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEkE,OAAQ,SACrB5E,EAAAC,EAAAC,cAAA,MAAIQ,MAAO,CAAEoE,UAAW,WAAxB,cACA9E,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACXwI,QAAS,OACTE,eAAgB,WAEhBpJ,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAQI,KAAK,KAAKhF,QAAS,kBAAMoB,EAAS,CAAEpD,KAAM,aAAcwmB,cAAenB,OAA/E,iBAEDjkB,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACXwI,QAAS,OACTE,eAAgB,SAChBC,SAAU,OACVxE,SAAU,IACVD,OAAQ,gBAhDc,WASxB,IARA,IAAMmO,EAAY,SAAC3P,EAAYgiB,GAC9BhiB,EAAMO,iBACN3B,EAAS,CAAEpD,KAAM,aAAcwmB,mBAG1BC,EAA0B,GAC1BzQ,EAA4B,GAElC/C,EAAA,EAAAC,EAAuBpU,OAAO6L,OAAOzK,EAAM8I,WAAWA,YAAtDiK,EAAAC,EAAAlO,OAAAiO,IAAmE,CAA9D,IAAM1G,EAAQ2G,EAAAD,GACd1G,EAASoN,UACZ3D,EAAoB7U,KACnBC,EAAAC,EAAAC,cAAColB,GAAD,CACC/jB,IAAK4J,EAASnO,GACdmO,SAAUA,EACV4H,UAAWA,KAGbsS,EAAkBtlB,KACjBC,EAAAC,EAAAC,cAAColB,GAAD,CACC/jB,IAAK4J,EAASnO,GACdmO,SAAUA,EACV4H,UAAWA,KAIf,OACC/S,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+I,SAAA,KACEqc,EACAzQ,GAqBA2Q,GACDvlB,EAAAC,EAAAC,cAACslB,GAAD,CACCld,UAAWvG,EAAMuG,UACjB6C,SAAUpJ,EAAMqjB,cAChBjT,WAAY,kBAAMnQ,EAAS,CAAEpD,KAAM,uBCzH3ByS,GAAa,SA0DXoU,GAFG3jB,YAtDM,SAACC,GACvB,MAAO,CACLH,QAASG,EAAMH,UAIQ,SAACI,GAC1B,MAAO,CACLtD,UAAW,SAACjB,GACVuE,EAAStD,EAAUjB,OA6CPqE,CA3BmC,SAAChD,GAAU,IAAAqD,EACpC9C,IAAM+C,WAAW,SAACL,EAAcM,GACxD,OAAQA,EAAOzD,MACb,IAAK,gBACH,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IACjC,IAAK,iBACH,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IACjC,QACE,OAAOR,IAEV,CACDQ,YAAY,QACXK,GAZ2DC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GAAAU,EAAA,GAAAA,EAAA,GAc9D,OACE7C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwlB,GAAD,MACA1lB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,KACE3E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAO8K,KAAI,GAAAtQ,OAAKkS,GAAL,UAAyBsU,UAAWzS,KAC/ClT,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAO8K,KAAI,GAAAtQ,OAAKkS,GAAL,eAA8BsU,UAAWZ,KACpD/kB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOihB,OAAK,EAACnW,KAAI,GAAAtQ,OAAKkS,IAAcsU,UAAWpC,KAC/CvjB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAUlE,GAAE,GAAAtB,OAAKkS,UCmOVwU,GAFM/jB,YAnRG,SAACC,GACvB,MAAO,CACLH,QAASG,EAAMH,QACfqQ,UAAWlQ,EAAMkQ,YAIM,SAACjQ,GAC1B,MAAO,CACLiR,eAAgB,WACdjR,EAASiR,OAEXvU,UAAW,SAACjB,GACVuE,EAAStD,EAAUjB,OAsQJqE,CApOsC,SAAChD,GAC1D,IADoEqD,EAgB1C9C,IAAM+C,WAAW,SAACL,EAAcM,GACxD,OAAQA,EAAOzD,MACb,IAAK,eACH,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEEO,MAAOD,EAAOC,MACdC,YAAY,IAEhB,IAAK,gBACH,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBS,OAAO9E,OAAAC,EAAA,EAAAD,CAAA,GACrBqE,EAAMS,OACNH,EAAOG,UAEd,IAAK,gBACH,OAAO9E,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEEQ,YAAY,EACZD,MAAO,CAAErF,KAAM,GAAIwF,QAAS,MAEhC,IAAK,kBACH,OAAO/E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBW,SAAS,EAAMH,YAAY,IAChD,IAAK,iBACH,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,EAAOG,SAAS,IACjD,QACE,OAAOX,IAvCQ,CACnBQ,YAAY,EACZC,OAAQ,CACNvF,KAAM,GACNC,MAAO,GACPyF,SAAU,GACVmjB,gBAAiB,GACjB3oB,QAAS,IAEXmF,MAAO,CACLrF,KAAM,GACNwF,QAAS,IAEXC,SAAS,QA4BME,GA1CmDC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GAgB7DJ,EAhB6Dc,EAAA,GAgBtDb,EAhBsDa,EAAA,GA4CpExD,IAAMM,UAAU,WACdb,EAAMmU,kBACL,IAEH,IAAM8S,EAAc,eAAAhjB,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,EAAOC,GAAP,IAAA4iB,EAAA,OAAA/iB,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACrBN,EAAMO,iBACAqiB,EAAU,sGACiB,IAA7BjkB,EAAMS,OAAOvF,KAAK2G,QACa,IAA9B7B,EAAMS,OAAOtF,MAAM0G,QACc,IAAjC7B,EAAMS,OAAOG,SAASiB,QACkB,IAAxC7B,EAAMS,OAAOsjB,gBAAgBliB,OANb,CAAAJ,EAAAE,KAAA,eAOnB1B,EAAS,CACPpD,KAAM,eACN0D,MAAO,CACLrF,KAAM,yBACNwF,QAAS,yCAXMe,EAAAK,OAAA,oBAgBhBmiB,EAAQjL,KAAKhZ,EAAMS,OAAOtF,OAhBV,CAAAsG,EAAAE,KAAA,eAiBnB1B,EAAS,CACPpD,KAAM,eACN0D,MAAO,CACLrF,KAAM,yBACNwF,QAAS,4BArBMe,EAAAK,OAAA,oBA0BjB9B,EAAMS,OAAOG,WAAaZ,EAAMS,OAAOsjB,gBA1BtB,CAAAtiB,EAAAE,KAAA,gBA2BnB1B,EAAS,CACPpD,KAAM,eACN0D,MAAO,CACLrF,KAAM,yBACNwF,QAAS,kCA/BMe,EAAAK,OAAA,yBAqCrB7B,EAAS,CAAEpD,KAAM,kBArCI4E,EAAAE,KAAA,GAsCQI,IAAMC,KAAK,eAAgBC,YAAa,CACnE/G,KAAQ8E,EAAMS,OAAOvF,KACrBC,MAAS6E,EAAMS,OAAOtF,MACtByF,SAAYZ,EAAMS,OAAOG,SACzBxF,QAAW4E,EAAMS,OAAOrF,UACtB,CACF+G,QAAS,CACPC,eAAgB,uCA7CC,WAAAX,EAAAY,KAiDDtG,KAAKuG,OAjDJ,CAAAb,EAAAE,KAAA,gBAkDnB1B,EAAS,CACPpD,KAAM,eACN0D,MAAO,CACLrF,KAAM,yBACNwF,QAAS,6BAtDMe,EAAAK,OAAA,kBA2DrB7B,EAAS,CAAEpD,KAAM,oBA3DI,yBAAA4E,EAAAc,SAAAnB,MAAH,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,GAwEpB,GAAI3C,EAAMW,QACR,OAAO1C,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAUlE,GAAG,WAWtB,OACET,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACVkE,OAAQ,SACRC,SAAU,MAEV7E,EAAAC,EAAAC,cAAA,MAAIQ,MAAO,CACToE,UAAW,SACXC,cAAe,KAFjB,YAIA/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,aACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,gBACN4D,OAAQ,CACNvF,KAAMmG,EAAMiC,OAAOC,UAGvBA,MAAOvD,EAAMS,OAAOvF,KACpB2B,KAAK,OACL2G,YAAY,wBAEhBvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,cACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,gBACN4D,OAAQ,CACNtF,MAAOkG,EAAMiC,OAAOC,UAGxBA,MAAOvD,EAAMS,OAAOtF,MACpB0B,KAAK,QACL2G,YAAY,sBAEhBvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,iBACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,gBACN4D,OAAQ,CACNG,SAAUS,EAAMiC,OAAOC,UAG3BA,MAAOvD,EAAMS,OAAOG,SACpB/D,KAAK,WACL2G,YAAY,YAEhBvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,2BACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEC,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,gBACN4D,OAAQ,CACNsjB,gBAAiB1iB,EAAMiC,OAAOC,UAGlCA,MAAOvD,EAAMS,OAAOsjB,gBACpBlnB,KAAK,WACL2G,YAAY,YAEhBvF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKC,MAAN,KACEjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAKoN,MAAN,2BACApS,EAAAC,EAAAC,cAAC8E,EAAA,EAAKE,QAAN,CACEsN,GAAG,SACHrN,SAAUpD,EAAMQ,WAChB6C,SAAU,SAAChC,GAAD,OAAgBpB,EAAS,CACjCpD,KAAM,gBACN4D,OAAQ,CACNrF,QAASiG,EAAMiC,OAAOC,UAG1BA,MAAOvD,EAAMS,OAAOrF,QACpByB,KAAK,OACL2G,YAAY,WAtFbzG,EAAMmT,UAAU7Q,IAAI,SAACjE,GAC1B,OACE6C,EAAAC,EAAAC,cAAA,UAAQqB,IAAKpE,GAAUA,OAwFvB6C,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACElF,QAAQ,UACR1B,KAAK,SACLgC,QAASmlB,EACTtgB,OAAK,GAAE1D,EAAMQ,WACTvC,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAASC,UAAU,SAASvI,KAAK,SAASwI,KAAK,OAC/C,YA9GH7D,EAAMO,MAAMrF,KACf+C,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOvF,QAAQ,UACbN,EAAAC,EAAAC,cAAA,cAAS6B,EAAMO,MAAMrF,MACrB+C,EAAAC,EAAAC,cAAA,WAAM6B,EAAMO,MAAMG,UAEpB,SC9IFwjB,GAAsC,CAC1CphB,SAAU,IACVD,OAAQ,UAkFKshB,GAFEpkB,YA7GO,SAACC,GACvB,MAAO,CACLH,QAASG,EAAMH,UAIQ,SAACI,GAC1B,MAAO,CACLtD,UAAW,SAACjB,GACVuE,EAAStD,EAAUjB,OAoGRqE,CA7EkC,SAAChD,GAAU,IAAAqD,EAClC9C,IAAM+C,WAAW,SAACL,EAAcM,GACxD,OAAQA,EAAOzD,MACb,IAAK,gBACH,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IACjC,IAAK,iBACH,OAAO7E,OAAAC,EAAA,EAAAD,CAAA,GAAKqE,EAAZ,CAAmBQ,YAAY,IACjC,QACE,OAAOR,IAEV,CACDQ,YAAY,QACXK,GAZyDC,EAAAnF,OAAA8B,EAAA,EAAA9B,CAAAyE,EAAA,GActDsX,GAdsD5W,EAAA,GAAAA,EAAA,GAc7C7C,EAAAC,EAAAC,cAAA,iCACTimB,EAAWnmB,EAAAC,EAAAC,cAAA,8BAAsB7B,EAAcS,EAAM8C,QAAQxE,OAC7DgpB,EAAapmB,EAAAC,EAAAC,cAAA,kBAAUpB,EAAM8C,QAAQ3E,KAAxB,kXACbopB,EAAcrmB,EAAAC,EAAAC,cAAA,gRACdomB,EAAgBtmB,EAAAC,EAAAC,cAAA,gVAChBqmB,EAAevmB,EAAAC,EAAAC,cAAA,kZAEfsmB,GADexmB,EAAAC,EAAAC,cAAA,oNACAF,EAAAC,EAAAC,cAAA,6LAEfumB,EACJzmB,EAAAC,EAAAC,cAAA,OAAKQ,MAAOulB,IACTxM,EACA0M,EACAC,EACAC,GAICK,EACJ1mB,EAAAC,EAAAC,cAAA,OAAKQ,MAAOulB,IACTxM,EACA0M,EACAC,EACAC,GAGCM,EACJ3mB,EAAAC,EAAAC,cAAA,OAAKQ,MAAOulB,IACTxM,EACA0M,EACAE,EACAC,EACAC,GAICK,EACJ5mB,EAAAC,EAAAC,cAAA,OAAKQ,MAAOulB,IACTxM,EACA0M,EACAE,EACAC,EACAE,GAKL,OAAQ1nB,EAAM8C,QAAQxE,MACpB,KAAKN,EAASmB,MACZ,OAAOwoB,EACT,KAAK3pB,EAASoB,MACZ,OAAOwoB,EACT,KAAK5pB,EAASqB,MACZ,OAAOwoB,EACT,KAAK7pB,EAASO,QACZ,OAAOupB,EAGX,OACE5mB,EAAAC,EAAAC,cAAC2mB,GAAD,QCnGWpU,GAXU,WACvB,OACEzS,EAAAC,EAAAC,cAAA,UAAQQ,MAAO,CACboE,UAAW,SACXF,OAAQ,WAFV,aAIa5E,EAAAC,EAAAC,cAAA,QAAM9C,KAAK,MAAM0pB,aAAW,QAA5B,gBAJb,sBCgGWC,GAFHjlB,YAfY,SAACC,GACvB,MAAO,CACLH,QAASG,EAAMH,UAIQ,SAACI,GAC1B,MAAO,CACLtD,UAAW,SAACjB,GACVuE,EAAStD,EAAUjB,OAMbqE,CAzE6B,SAAChD,GACxC,IAAMkoB,EAAY,SAAAjkB,GAAoD,IAAlD4iB,EAAkD5iB,EAAlD4iB,UAAWsB,EAAuClkB,EAAvCkkB,WAAYC,EAA2BnkB,EAA3BmkB,QAAY3L,EAAe7d,OAAA8d,EAAA,EAAA9d,CAAAqF,EAAA,sCAOpE,OAAO/C,EAAAC,EAAAC,cAACyE,EAAA,EAADjH,OAAAypB,OAAA,GAAW5L,EAAX,CAAiB6L,OAND,SAACtoB,GAAD,OACnBooB,GAAWD,EACP5nB,IAAMa,cAAcylB,EAAW7mB,GAC/BkB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAUlE,GAAI,CAAExB,SAAU,iBALcG,EAWPC,IAAMC,UAAS,GAXRC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA0B,EAAA,GAW3CioB,EAX2C9nB,EAAA,GAW7B+nB,EAX6B/nB,EAAA,GA4BlD,OAfAF,IAAMM,UAAU,YACK,eAAAkJ,EAAAnL,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,IAAA8D,EAAA,OAAAhE,EAAAhD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCI,IAAMyC,IAAI,mBADX,OACdU,EADczD,EAAAY,KAGpBtF,EAAMJ,UAANhB,OAAAC,EAAA,EAAAD,CAAA,GACKuJ,EAAOnJ,KADZ,CAEEV,KAAMW,EAAiBkJ,EAAOnJ,KAAKV,SAGrCkqB,GAAmB,GARC,wBAAA9jB,EAAAc,SAAAnB,MAAH,yBAAA0F,EAAArE,MAAAC,KAAAC,YAAA,EAWnB6iB,IACC,CAACzoB,EAAMJ,YAEL2oB,EAKHrnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+I,SAAA,KACEhJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACsnB,EAAD,CAAY5lB,QAAS9C,EAAM8C,UAC3B5B,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CACV4O,QAAS,KAETtP,EAAAC,EAAAC,cAACyE,EAAA,EAAD,KACE3E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAO8K,KAAK,SAASkW,UAAW9jB,IAChC7B,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAO8K,KAAK,UAAUkW,UAAWxf,IACjCnG,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAO8K,KAAK,YAAYkW,UAAWE,KACnC7lB,EAAAC,EAAAC,cAAC8mB,EAAD,CAAWvX,KAAK,WAAWkW,UAAWlf,EAAawgB,WAAYnqB,EAASO,QAAS6pB,QAASpoB,EAAM8C,QAAQxE,OACxG4C,EAAAC,EAAAC,cAAC8mB,EAAD,CAAWvX,KAAK,YAAYkW,UAAWtd,GAAc4e,WAAYnqB,EAASO,QAAS6pB,QAASpoB,EAAM8C,QAAQxE,OAC1G4C,EAAAC,EAAAC,cAAC8mB,EAAD,CAAWvX,KAAK,WAAWkW,UAAW7Y,GAAama,WAAYnqB,EAASqB,MAAO+oB,QAASpoB,EAAM8C,QAAQxE,OACtG4C,EAAAC,EAAAC,cAAC8mB,EAAD,CAAWvX,KAAK,SAASkW,UAAWF,GAAWwB,WAAYnqB,EAASoB,MAAOgpB,QAASpoB,EAAM8C,QAAQxE,OAClG4C,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAO8K,KAAK,IAAImW,OAAK,EAACD,UAAWO,KACjClmB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAUlE,GAAG,SAInBT,EAAAC,EAAAC,cAACunB,GAAD,OAvBKznB,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAASC,UAAU,kDCrC9B,IAAM+hB,GAAUC,aAAgB,CAC9B/lB,QtCWa,WAA2D,IAA1CG,EAA0C2C,UAAAd,OAAA,QAAAhB,IAAA8B,UAAA,GAAAA,UAAA,GAA5BjG,EAAe4D,EAAaqC,UAAAd,OAAA,EAAAc,UAAA,QAAA9B,EACxE,OAAQP,EAAOzD,MACb,KAAKN,EACL,KAAKC,EACL,KAAKC,EACH,OAAO6D,EAAO5E,KAChB,QACE,OAAOsE,IsCjBXwK,Q1B8Na,WAAuE,IAAtDxK,EAAsD2C,UAAAd,OAAA,QAAAhB,IAAA8B,UAAA,GAAAA,UAAA,GAAjC+H,GAAoBpK,EAAaqC,UAAAd,OAAA,EAAAc,UAAA,QAAA9B,EAAAglB,EAAA,eAAAC,EAAAC,EACpF,OAAQzlB,EAAOzD,MACb,KAAK+M,GAKH,IAJA,IAAMgB,EAAsD5K,EAAM4K,wBAA0B5K,EAAM4K,wBAA0B,GACtHD,EAA4B3K,EAAM2K,aAAe3K,EAAM2K,aAAe,GACtEE,EAAuC7K,EAAM6K,eAAiB7K,EAAM6K,eAAiB,GACrFL,EAA0ClK,EAAOkK,QACvDsF,EAAA,EAAAC,EAAqBpU,OAAO6L,OAAOgD,GAAnCsF,EAAAC,EAAAlO,OAAAiO,IAA6C,CAAxC,IAAM5B,EAAM6B,EAAAD,GACVlF,EAAwBsD,EAAOhD,UAClCN,EAAwBsD,EAAOhD,QAAU,IAEtCN,EAAwBsD,EAAOhD,QAAQgD,EAAO/C,aACjDP,EAAwBsD,EAAOhD,QAAQgD,EAAO/C,WAAa,IAGxDN,EAAeqD,EAAO/C,aACzBN,EAAeqD,EAAO/C,WAAa,IAEhCN,EAAeqD,EAAO/C,WAAW+C,EAAOhD,SAAWgD,EAAO5L,SAAW+D,GAAa2Z,YACrFnV,EAAeqD,EAAO/C,WAAW+C,EAAOhD,QAAU,IAGpDN,EAAwBsD,EAAOhD,QAAQgD,EAAO/C,WAAWnN,KAAKkQ,GAC1DA,EAAO5L,SAAW+D,GAAa2Z,WACjCnV,EAAeqD,EAAO/C,WAAW+C,EAAOhD,QAAQlN,KAAKkQ,GAIzD,IA1BF,IAAAiT,EAAA,WA0BO,IAAM6E,EAAOxQ,EAAA5B,GAChBjJ,GAAcqb,GAAW,CACvB3H,cAAe,CACbpjB,GAAI,EACJ2lB,SAAS,GAEXtC,gBAAiB,EACjBC,gBAAiB,IAEnB,IAAM0H,EAAsBtqB,OAAO4V,KAAK3G,GAAyBob,IAAU/O,KAAK,SAAC/Y,EAAWgZ,GAG1F,OAFc,IAAIgP,KAAKtb,GAAyBob,IAAU9nB,GAAG,GAAGioB,WAAWC,UAC7D,IAAIF,KAAKtb,GAAyBob,IAAU9O,GAAG,GAAGiP,WAAWC,YArCjFtT,GAAA,EAAAC,GAAA,EAAAC,OAAAnS,EAAA,IAwCI,QAAAqS,EAAAD,EAAwBgT,EAAxBlQ,OAAAC,cAAAlD,GAAAI,EAAAD,EAAAtR,QAAAsU,MAAAnD,GAAA,EAA6C,KAAlC3H,EAAkC+H,EAAA3P,MACrCkJ,EAAc7B,GAAyBob,IAAU7a,GAAW,GAC9DsB,EAAYnK,SAAW+D,GAAa/K,QACtCqP,GAAcqb,GAAS3H,cAAcpjB,IAAMkQ,EAClCsB,EAAYnK,SAAW+D,GAAaqG,SAAWD,EAAYnK,SAAW+D,GAAauG,SAC5FjC,GAAcqb,GAAS1H,iBAAmBnT,EAE1CR,GAAcqb,GAASzH,gBAAgBvgB,MAAMmN,IA/CrD,MAAAkQ,GAAAtI,GAAA,EAAAC,EAAAqI,EAAA,YAAAvI,GAAA,MAAAG,EAAAmD,QAAAnD,EAAAmD,SAAA,WAAArD,EAAA,MAAAC,KA0BEY,EAAA,EAAA4B,EAAsB7Z,OAAO4V,KAAK3G,GAAlCgJ,EAAA4B,EAAA3T,OAAA+R,IAA4DuN,IA4B5D,OAFA/b,QAAQC,IAAIwF,GAEZ,CAAAwb,EAAA1qB,OAAAC,EAAA,EAAAD,CAAA,GACK2E,EAAOkK,QADZ,CAEEI,0BACAD,eACAE,oBAEJ,KAAKhB,GACH,OAAAwc,EAAA1qB,OAAAC,EAAA,EAAAD,CAAA,GACKqE,EACAM,EAAOkK,UAEd,KAAKV,GACH,OAAAuc,EAAO/lB,EAAOgmB,UAAUC,QAAQ,SAAClY,GAAD,cAA6BrO,EAAMqO,MACrE,KAAKrE,GACH5E,QAAQC,IAAI,QAAS/E,GACrB,IAAMkmB,EAAmBxmB,EAAM2K,aAAarK,EAAO4E,OAAOgG,QACtDub,EAA2BzmB,EAAM4K,wBAerC,OAdK6b,EAAyBnmB,EAAO4E,OAAOgG,UAC1Cub,EAAyBnmB,EAAO4E,OAAOgG,QAAU,IAGnDub,EAAwB9qB,OAAAC,EAAA,EAAAD,CAAA,GACnBqE,EAAM4K,wBADajP,OAAAiT,EAAA,EAAAjT,CAAA,GAErB2E,EAAO4E,OAAOgG,OAFOvP,OAAAC,EAAA,EAAAD,CAAA,GAGjBqE,EAAM4K,wBAAwBtK,EAAO4E,OAAOgG,QAH3BvP,OAAAiT,EAAA,EAAAjT,CAAA,GAInB2E,EAAO4E,OAAOiG,UAJKxP,OAAAC,EAAA,EAAAD,CAAA,GAKfqE,EAAM4K,wBAAwBtK,EAAO4E,OAAOgG,QAAQ5K,EAAO4E,OAAOiG,gBAK3E,CAAAkb,EAAA1qB,OAAAC,EAAA,EAAAD,CAAA,GACKqE,EADL,CAEE2K,aAAahP,OAAAC,EAAA,EAAAD,CAAA,GACRqE,EAAM2K,aADChP,OAAAiT,EAAA,EAAAjT,CAAA,GAET2E,EAAO4E,OAAOgG,OAFLvP,OAAAC,EAAA,EAAAD,CAAA,GAGL6qB,EAHK,CAIRlI,gBAAiBkI,EAAmBA,EAAiBlI,gBAAkB,EACvEC,gBAAiBiI,EAAmBA,EAAiBjI,gBAAkB,GACvEF,cAAe,CACbpjB,GAAIqF,EAAO4E,OAAOiG,UAClByV,SAAS,OAIfhW,wBAAyB6b,KAE7B,KAAKxc,GACH,IAAMyc,EAAQ/qB,OAAAC,EAAA,EAAAD,CAAA,GACTqE,EACAM,EAAO4E,OAAOyhB,WAFL,CAGZhc,aAAahP,OAAAC,EAAA,EAAAD,CAAA,GACRqE,EAAM2K,aADChP,OAAAiT,EAAA,EAAAjT,CAAA,GAET2E,EAAO4E,OAAOgG,OAFLvP,OAAAC,EAAA,EAAAD,CAAA,GAGLqE,EAAM2K,aAAarK,EAAO4E,OAAOgG,QAH5B,CAIRmT,cAAe,CACbpjB,GAAIqF,EAAO4E,OAAOiG,UAClByV,SAAS,OAIfhW,wBAAwBjP,OAAAC,EAAA,EAAAD,CAAA,GACnBqE,EAAM4K,wBADYjP,OAAAiT,EAAA,EAAAjT,CAAA,GAEpB2E,EAAO4E,OAAOgG,OAFMvP,OAAAC,EAAA,EAAAD,CAAA,GAGhBqE,EAAM4K,wBAAwBtK,EAAO4E,OAAOgG,QAH5BvP,OAAAiT,EAAA,EAAAjT,CAAA,GAIlB2E,EAAO4E,OAAOiG,UAJIxP,OAAAC,EAAA,EAAAD,CAAA,GAKdqE,EAAM4K,wBAAwBtK,EAAO4E,OAAOgG,QAAQ5K,EAAO4E,OAAOiG,WAClE7K,EAAO4E,OAAOyhB,kBApB3BrT,GAAA,EAAAC,GAAA,EAAAC,OAAA3S,EAAA,IAyBE,QAAA6S,EAAAD,EAA8BnT,EAAO4E,OAAO0hB,iBAA5C7Q,OAAAC,cAAA1C,GAAAI,EAAAD,EAAA9R,QAAAsU,MAAA3C,GAAA,SACSoT,EADqDhT,EAAAnQ,OAzBhE,MAAA8X,GAAA9H,GAAA,EAAAC,EAAA6H,EAAA,YAAA/H,GAAA,MAAAG,EAAA2C,QAAA3C,EAAA2C,SAAA,WAAA7C,EAAA,MAAAC,GA6BE,OAAA6S,EAAOK,GACT,KAAKvc,GACH/E,QAAQC,IAAI/E,EAAO4E,QACnB,IAAM2hB,EAAWlrB,OAAO4V,KAAKjR,EAAO4E,OAAOyhB,YAAY,GACjDla,EAAcnM,EAAO4E,OAAOyhB,WAAWE,GACvC3b,EAASuB,EAAYvB,OACrBC,EAAYsB,EAAYtB,UAC9B,OAAAkb,EAAA1qB,OAAAC,EAAA,EAAAD,CAAA,GACKqE,EACAM,EAAO4E,OAAOyhB,WAFnB,CAGE/b,wBAAwBjP,OAAAC,EAAA,EAAAD,CAAA,GACnBqE,EAAM4K,wBADYjP,OAAAiT,EAAA,EAAAjT,CAAA,GAEpBuP,EAFoBvP,OAAAC,EAAA,EAAAD,CAAA,GAGhBqE,EAAM4K,wBAAwBM,GAHdvP,OAAAiT,EAAA,EAAAjT,CAAA,GAIlBwP,EAJkBxP,OAAAC,EAAA,EAAAD,CAAA,GAKdqE,EAAM4K,wBAAwBM,GAAQC,GACtC7K,EAAO4E,OAAOyhB,gBAIvBhc,aAAahP,OAAAC,EAAA,EAAAD,CAAA,GACRqE,EAAM2K,aADChP,OAAAiT,EAAA,EAAAjT,CAAA,GAETuP,EAFSvP,OAAAC,EAAA,EAAAD,CAAA,GAGLqE,EAAM2K,aAAaO,GAHd,CAIRmT,mBAAexd,EACfyd,gBAAiB7R,EAAYtB,iBAIrC,KAAKjB,GACH9E,QAAQC,IAAI/E,EAAO4E,QACnB,IAAM4hB,EAAYnrB,OAAO4V,KAAKjR,EAAO4E,OAAOyhB,YAAY,GAClDI,EAAyBprB,OAAO6L,OAAOlH,EAAO4E,OAAOyhB,YACrDK,EAAe1mB,EAAO4E,OAAOyhB,WAAWG,GACxCG,EAAUD,EAAa9b,OACvBgc,EAAaF,EAAa7b,UAC1BoT,EAAkBve,EAAM2K,aAAasc,GAAS1I,gBAC/CA,EAAgB3W,SAASsf,IAC5B3I,EAAgBvgB,KAAKkpB,GAGvB,IAAIC,EAAoBnnB,EAAM6K,eAY9B,OAVK7K,EAAM6K,eAAeqc,KACxBC,EAAkBD,GAAc,IAG7BlnB,EAAM6K,eAAeqc,GAAYD,KACpCE,EAAkBD,GAAYD,GAAW,KAG3CnB,EAAAqB,EAAkBD,GAAYD,IAASjpB,KAAvCyE,MAAAqjB,EAAAnqB,OAAAyrB,GAAA,EAAAzrB,CAA+CorB,IAE/C,CAAAV,EAAA1qB,OAAAC,EAAA,EAAAD,CAAA,GACKqE,EACAM,EAAO4E,OAAOyhB,WAFnB,CAGE/b,wBAAwBjP,OAAAC,EAAA,EAAAD,CAAA,GACnBqE,EAAM4K,wBADYjP,OAAAiT,EAAA,EAAAjT,CAAA,GAEpBsrB,EAFoBtrB,OAAAC,EAAA,EAAAD,CAAA,GAGhBqE,EAAM4K,wBAAwBqc,GAHdtrB,OAAAiT,EAAA,EAAAjT,CAAA,GAIlBurB,EAJkBvrB,OAAAC,EAAA,EAAAD,CAAA,GAKdqE,EAAM4K,wBAAwBqc,GAASC,GACvC5mB,EAAO4E,OAAOyhB,gBAIvBhc,aAAahP,OAAAC,EAAA,EAAAD,CAAA,GACRqE,EAAM2K,aADChP,OAAAiT,EAAA,EAAAjT,CAAA,GAETsrB,EAFStrB,OAAAC,EAAA,EAAAD,CAAA,GAGLqE,EAAM2K,aAAasc,GAHd,CAIR3I,gBAAiB,EACjBC,sBAGJ1T,eAAgBsc,KAEpB,KAAK9c,GACDjF,QAAQC,IAAI/E,EAAO4E,QACnB,IAAMmiB,EAAY1rB,OAAO4V,KAAKjR,EAAO4E,OAAOyhB,YAAY,GAClDW,EAA0B3rB,OAAO6L,OAAOlH,EAAO4E,OAAOyhB,YACtDY,EAAejnB,EAAO4E,OAAOyhB,WAAWU,GACxCG,EAAUD,EAAarc,OACvBuc,EAAaF,EAAapc,UAC1Buc,EAAmB1nB,EAAM2K,aAAa6c,GAASjJ,gBAChDmJ,EAAiB9f,SAAS6f,IAC7BC,EAAiB1pB,KAAKypB,GAGxB,IAAIE,EAAqB3nB,EAAM6K,eAY/B,OAVK7K,EAAM6K,eAAe4c,KACxBE,EAAmBF,GAAc,IAG9BznB,EAAM6K,eAAe4c,GAAYD,KACpCG,EAAmBF,GAAYD,GAAW,KAG5CzB,EAAA4B,EAAmBF,GAAYD,IAASxpB,KAAxCyE,MAAAsjB,EAAApqB,OAAAyrB,GAAA,EAAAzrB,CAAgD2rB,IAEhD,CAAAjB,EAAA1qB,OAAAC,EAAA,EAAAD,CAAA,GACKqE,EACAM,EAAO4E,OAAOyhB,WAFnB,CAGE/b,wBAAwBjP,OAAAC,EAAA,EAAAD,CAAA,GACnBqE,EAAM4K,wBADYjP,OAAAiT,EAAA,EAAAjT,CAAA,GAEpB6rB,EAFoB7rB,OAAAC,EAAA,EAAAD,CAAA,GAGhBqE,EAAM4K,wBAAwB4c,GAHd7rB,OAAAiT,EAAA,EAAAjT,CAAA,GAIlB8rB,EAJkB9rB,OAAAC,EAAA,EAAAD,CAAA,GAKdqE,EAAM4K,wBAAwB4c,GAASC,GACvCnnB,EAAO4E,OAAOyhB,gBAIvBhc,aAAahP,OAAAC,EAAA,EAAAD,CAAA,GACRqE,EAAM2K,aADChP,OAAAiT,EAAA,EAAAjT,CAAA,GAET6rB,EAFS7rB,OAAAC,EAAA,EAAAD,CAAA,GAGLqE,EAAM2K,aAAa6c,GAHd,CAIRlJ,gBAAiB,EACjBoJ,uBAGJ7c,eAAgB8c,KAEtB,KAAKvd,GACHhF,QAAQC,IAAI/E,EAAO4E,OAAO0iB,gBAAiB5nB,GAC3C,IAAM6nB,EAAc7nB,EAMpB,OALAM,EAAO4E,OAAO0iB,gBAAgBrB,QAAQ,SAAClY,UAC9BrO,EAAM4K,wBAAwB5K,EAAMqO,GAAUnD,QAAQlL,EAAMqO,GAAUlD,WAAWkD,GACxFrO,EAAM2K,aAAa3K,EAAMqO,GAAUnD,QAAQoT,gBAAkB,SACtDuJ,EAAYxZ,KAErB,CAAAgY,EAAA1qB,OAAAC,EAAA,EAAAD,CAAA,GACKksB,EADL,CAEEjd,wBAAyB5K,EAAM4K,wBAC/BD,aAAc3K,EAAM2K,gBAExB,KAAKL,GACH,IAAMwd,EAAyBxnB,EAAO4E,OAAOyhB,WACvCL,EAAY3qB,OAAO4V,KAAKuW,GAAUzoB,IAAI,SAACpE,GAAD,OAAQkc,SAASlc,KAF/D8Y,GAAA,EAAAC,GAAA,EAAAC,OAAApT,EAAA,IAGE,QAAAsT,EAAAD,EAAuBoS,EAAvBvQ,OAAAC,cAAAjC,GAAAI,EAAAD,EAAAvS,QAAAsU,MAAAlC,GAAA,EAAkC,KAAvB1F,EAAuB8F,EAAA5Q,MAC1B2H,EAAS4c,EAASzZ,GAAUnD,OAC5BC,EAAY2c,EAASzZ,GAAUlD,UACrCnL,EAAM4K,wBAAwBM,GAAQC,GAAaxP,OAAO6L,OAAOsgB,GACjE9nB,EAAM2K,aAAaO,GAAQoT,gBAAkB,EAC7Cte,EAAM2K,aAAaO,GAAQqT,gBAAgBvgB,KAAKqQ,IARpD,MAAAgN,GAAArH,GAAA,EAAAC,EAAAoH,EAAA,YAAAtH,GAAA,MAAAG,EAAAkC,QAAAlC,EAAAkC,SAAA,WAAApC,EAAA,MAAAC,GAUE,OAAAoS,EAAA1qB,OAAAC,EAAA,EAAAD,CAAA,GACKqE,EACA8nB,EAFL,CAGEld,wBAAyB5K,EAAM4K,wBAC/BD,aAAc3K,EAAM2K,gBAExB,KAAKN,GAEH,OADAjF,QAAQC,IAAI,yBACZ,CAAAghB,EAAOrmB,GACT,KAAK+J,GACH,OAAAsc,EAAO3b,IACT,QACE,OAAA2b,EAAOrmB,IAlSyE,wBAAA6lB,EAAA,OAAAA,EAAAQ,G0B7NpFxgB,WhC8Ba,WAGC,IAHmB7F,EAGnB2C,UAAAd,OAAA,QAAAhB,IAAA8B,UAAA,GAAAA,UAAA,GAHkD,CAChEyJ,SAAU,GACVvG,WAAY,IACXvF,EAAaqC,UAAAd,OAAA,EAAAc,UAAA,QAAA9B,EACd,OAAQP,EAAOzD,MACb,KAAKyI,GACH,OAAO3J,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEE6F,WAAWlK,OAAAC,EAAA,EAAAD,CAAA,GACNqE,EAAM6F,WACNvF,EAAOuF,cAGhB,KAAKN,GAAL,IAAAwiB,EAC4D/nB,EAAM6F,WADlEmiB,EACQ1nB,EAAOmG,WAA8BwhB,GAD7CF,EAAAC,GAAArsB,OAAA8d,EAAA,EAAA9d,CAAAosB,EAAA,CAAAC,GAAA3oB,IAAA6oB,KAEE,OAAOvsB,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEE6F,WAAYoiB,IAEhB,KAAKziB,GAGH,IAFA,IAAM2iB,EAA+B,GAC/BC,EAA+B9nB,EAAOuF,WAC5CiK,EAAA,EAAAC,EAAkBpU,OAAO6L,OAAO4gB,GAAhCtY,EAAAC,EAAAlO,OAAAiO,IAEE,IAFG,IACG1G,EADM2G,EAAAD,GAEZ8D,EAAA,EAAAyU,EAAkB1sB,OAAO6L,OAAO4B,EAASgD,UAAzCwH,EAAAyU,EAAAxmB,OAAA+R,IAAoD,CAA/C,IACGxH,EADMic,EAAAzU,GAEZuU,EAAc/b,EAASnR,IAAvBU,OAAAC,EAAA,EAAAD,CAAA,GACKyQ,EADL,CAEE3F,WAAY2C,EAASnO,KAI3B,MAAO,CACLmR,SAAU+b,EACVtiB,WAAYvF,EAAOuF,YAEvB,KAAKJ,GACH,MAAO,CACLI,WAAWlK,OAAAC,EAAA,EAAAD,CAAA,GACNqE,EAAM6F,WADDlK,OAAAiT,EAAA,EAAAjT,CAAA,GAEP2E,EAAOgoB,QAAQ7hB,WAFR9K,OAAAC,EAAA,EAAAD,CAAA,GAGHqE,EAAM6F,WAAWvF,EAAOgoB,QAAQ7hB,YAH7B,CAIN2F,SAASzQ,OAAAC,EAAA,EAAAD,CAAA,GACJ2E,EAAO8L,cAIhBA,SAASzQ,OAAAC,EAAA,EAAAD,CAAA,GACJqE,EAAMoM,SACN9L,EAAO8L,WAGhB,KAAK1G,GAAL,IAAA6iB,EAC8DvoB,EAAM6F,WAAW7F,EAAMoM,SAAS9L,EAAO8N,YAAY3H,YAAY2F,SAD7Hoc,EACQloB,EAAO8N,WAA+Bqa,GAD9CF,EAAAC,GAAA7sB,OAAA8d,EAAA,EAAA9d,CAAA4sB,EAAA,CAAAC,GAAAnpB,IAAA6oB,KAAAQ,EAE4D1oB,EAAMoM,SAFlEuc,EAEQroB,EAAO8N,WAA8Bwa,GAF7CF,EAAAC,GAAAhtB,OAAA8d,EAAA,EAAA9d,CAAA+sB,EAAA,CAAAC,GAAAtpB,IAAA6oB,KAGE,MAAO,CACLriB,WAAWlK,OAAAC,EAAA,EAAAD,CAAA,GACNqE,EAAM6F,WADDlK,OAAAiT,EAAA,EAAAjT,CAAA,GAEP2E,EAAO8L,SAAS3F,WAAa,CAC5B6hB,QAASG,KAGbrc,SAAUwc,GAEd,KAAKjjB,GACH,OAAOhK,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADL,CAEE6F,WAAWlK,OAAAC,EAAA,EAAAD,CAAA,GACNqE,EAAM6F,WADDlK,OAAAiT,EAAA,EAAAjT,CAAA,GAEP2E,EAAO8L,SAAS3F,WAFT9K,OAAAC,EAAA,EAAAD,CAAA,GAGHqE,EAAM6F,WAAWvF,EAAO8L,SAAS3F,YAH9B,CAIN2F,SAAU9L,EAAO8L,aAGrBA,SAASzQ,OAAAC,EAAA,EAAAD,CAAA,GACJqE,EAAMoM,SACN9L,EAAO8L,YAGhB,QACE,OAAOpM,IgC7GXkQ,UpBIa,WAAsD,IAAnClQ,EAAmC2C,UAAAd,OAAA,QAAAhB,IAAA8B,UAAA,GAAAA,UAAA,GAAjB,GAAIrC,EAAaqC,UAAAd,OAAA,EAAAc,UAAA,QAAA9B,EACnE,OAAQP,EAAOzD,MACb,KAAKoU,GACH,OAAO3Q,EAAO4P,UAChB,QACE,OAAOlQ,IoBRXgF,SjCmBa,WAAyD,IAAvChF,EAAuC2C,UAAAd,OAAA,QAAAhB,IAAA8B,UAAA,GAAAA,UAAA,GAAjB,GAAIrC,EAAaqC,UAAAd,OAAA,EAAAc,UAAA,QAAA9B,EACtE,OAAQP,EAAOzD,MACb,KAAK8H,EACH,OAAOhJ,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADLrE,OAAAiT,EAAA,EAAAjT,CAAA,GAEG2E,EAAOoH,QAAQzM,GAAKqF,EAAOoH,UAEhC,KAAK9C,EAAL,IAAAikB,EACQvoB,EAAO6K,UACb,OADyCnL,EAD3C6oB,GAAAltB,OAAA8d,EAAA,EAAA9d,CAC2CqE,EAD3C,CAAA6oB,GAAAxpB,IAAAypB,IAGA,KAAKjkB,EACH,OAAOvE,EAAO0E,SAChB,KAAKF,EACH,OAAOnJ,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EACAM,EAAO0E,UAEd,QACE,OAAOhF,IiCpCXQ,W3BVa,WAAsD,IAArCR,EAAqC2C,UAAAd,OAAA,QAAAhB,IAAA8B,UAAA,IAAAA,UAAA,GACnE,QADmEA,UAAAd,OAAA,EAAAc,UAAA,QAAA9B,GACpDhE,MACb,KAAK2M,GACH,OAAO,EACT,KAAKC,GACH,OAAO,EACT,QACE,OAAOzJ,I2BIXmG,Y/BYa,WAA+D,IAA1CnG,EAA0C2C,UAAAd,OAAA,QAAAhB,IAAA8B,UAAA,GAAAA,UAAA,GAAjB,GAAIrC,EAAaqC,UAAAd,OAAA,EAAAc,UAAA,QAAA9B,EAC5E,OAAQP,EAAOzD,MACb,KAAKkJ,GACH,OAAOpK,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADLrE,OAAAiT,EAAA,EAAAjT,CAAA,GAEG2E,EAAOwH,WAAW7M,GAAKqF,EAAOwH,aAEnC,KAAK9B,GAAL,IAAA+iB,EACQzoB,EAAOyH,aACb,OAD6C/H,EAD/C+oB,GAAAptB,OAAA8d,EAAA,EAAA9d,CAC+CqE,EAD/C,CAAA+oB,GAAA1pB,IAAA2pB,KAGA,KAAK/iB,GACH,OAAO3F,EAAO6F,YAChB,QACE,OAAOnG,I+BxBXgQ,MvB0Ba,WAAmD,IAApChQ,EAAoC2C,UAAAd,OAAA,QAAAhB,IAAA8B,UAAA,GAAAA,UAAA,GAAjB,GAAIrC,EAAaqC,UAAAd,OAAA,EAAAc,UAAA,QAAA9B,EAChE,OAAQP,EAAOzD,MACb,KAAK0S,GACL,KAAKhT,GACH,OAAOZ,OAAAC,EAAA,EAAAD,CAAA,GACFqE,EADLrE,OAAAiT,EAAA,EAAAjT,CAAA,GAEG2E,EAAO5E,KAAKT,GAAKqF,EAAO5E,OAE7B,KAAK8T,GACH,IAAMkX,EAAW1mB,EAEjB,cADO0mB,EAASpmB,EAAOrF,IAChByrB,EACT,KAAKjX,GACH,OAAOnP,EAAO0P,MAChB,QACE,OAAOhQ,MuBtCPipB,GAAqC,kBAAXtuB,QAC7BA,OAAeuuB,qCACfvuB,OAAeuuB,qCAAqC,IAAMC,KAE9CC,gBACbzD,GACAwD,aACEE,aACEC,KCjCS,WACb,IAAIC,EAASC,KAAG7uB,OAAOC,SAAS6uB,QAMhC,OAAO,SAAAzoB,GAAA,IAAGf,EAAHe,EAAGf,SAAH,OAAqC,SAAC0B,GAAD,OAAe,SAACrB,GAC1D,GAAsB,oBAAXA,EACT,OAAOqB,EAAKrB,GAF4D,IAMxEe,EAOEf,EAPFe,MACA+b,EAME9c,EANF8c,MACAZ,EAKElc,EALFkc,KACAjb,EAIEjB,EAJFiB,QACAqb,EAGEtc,EAHFsc,OACAzc,EAEEG,EAFFH,OACGqZ,EAZqE7d,OAAA8d,EAAA,EAAA9d,CAatE2E,EAbsE,sDAiB1E,GAAIH,EApBJopB,EAASC,KAAG,CAACE,UAAY,QAoBzB,CAKA,IAAKroB,EACH,OAAOM,EAAKrB,GAOd,GAJI8c,GACFmM,EAAOI,sBAGLnN,EAAJ,CAKA,IAAIoN,EAAchN,EAKlB,MAJ2B,kBAAhBgN,IACTA,EAAc,SAAC1kB,GAAD,OAAiBjF,EAAStE,OAAAC,EAAA,EAAAD,CAAA,CAAEkB,KAAM+f,EAAQ1X,UAAWsU,MAG9D+P,EAAOM,GAAGxoB,EAAOuoB,GATtBL,EAAO/M,KAAKnb,EAAOE,ODJnBuoB,IAEFb,OE9BJc,IAAS1E,OACLpnB,EAAAC,EAAAC,cAAC6rB,EAAA,EAAD,CAAUC,MAAOA,IACbhsB,EAAAC,EAAAC,cAAC+rB,GAAD,OAEJ1L,SAAS2L,eAAe,S1C4HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4bc1b129.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default interface User {\r\n  id?: number;\r\n  name?: string;\r\n  email?: string;\r\n  role: UserRole;\r\n  company?: string;\r\n  isJudging?: boolean;\r\n  tags?: string[];\r\n}\r\n\r\nexport enum UserRole {\r\n  None = 0,\r\n  Pending = 1,\r\n  Judge = 2,\r\n  Admin = 3,\r\n  Owner = 4,\r\n}\r\n\r\nexport interface UserState {\r\n  [id: number]: User\r\n}\r\n\r\nexport const EMPTY_USER: User = {\r\n  id: -1,\r\n  name: '',\r\n  email: '',\r\n  company: '',\r\n  role: UserRole.Pending,\r\n  isJudging: false,\r\n  tags: [],\r\n}\r\n\r\nexport function clientUserToServerUser(user: User) {\r\n  return {\r\n    ...user,\r\n    isJudging: user.role === UserRole.Pending ? false : user.isJudging,\r\n    role: getRoleEnum(user.role),\r\n  };\r\n}\r\n\r\nexport function serverDataToClientUser(data: any) {\r\n  if (data.id && data.name && data.email && data.role && data.tags) {\r\n    return {\r\n      ...data,\r\n      role: roleStringToEnum(data.role),\r\n    };\r\n  } else {\r\n    throw new Error('Server returned an unexpected result.');\r\n  }\r\n}\r\n\r\nexport function roleStringToEnum(role: string) {\r\n  switch (role) {\r\n    case 'owner':\r\n      return UserRole.Owner;\r\n    case 'admin':\r\n      return UserRole.Admin;\r\n    case 'judge':\r\n      return UserRole.Judge;\r\n    case 'pending':\r\n      return UserRole.Pending;\r\n    default:\r\n      return UserRole.None;\r\n  }\r\n}\r\n\r\nexport function getRoleString(role: UserRole) {\r\n  switch (role) {\r\n    case UserRole.Owner:\r\n      return 'Owner';\r\n    case UserRole.Admin:\r\n      return 'Admin';\r\n    case UserRole.Judge:\r\n      return 'Judge';\r\n    case UserRole.Pending:\r\n      return 'Pending';\r\n    case UserRole.None:\r\n      return 'None';\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport function getRoleEnum(role: UserRole) {\r\n  switch (role) {\r\n    case UserRole.Owner:\r\n      return 'owner';\r\n    case UserRole.Admin:\r\n      return 'admin';\r\n    case UserRole.Judge:\r\n      return 'judge';\r\n    case UserRole.Pending:\r\n      return 'pending';\r\n    case UserRole.None:\r\n      return 'none';\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import User, { UserRole } from '../types/User';\r\n\r\n// Action Types\r\nexport const UPDATE_USER = 'ACCOUNT_UPDATE_USER';\r\nexport const LOGIN_USER = 'ACCOUNT_LOGIN_USER';\r\nexport const LOGOUT_USER = 'ACCOUNT_LOGOUT_USER';\r\n\r\nconst noAccountUser: User = {\r\n  role: UserRole.None,\r\n};\r\n\r\n// Action Creators\r\nexport function updateUser(updatedUser: User) {\r\n  return { type: UPDATE_USER, user: updatedUser };\r\n}\r\n\r\nexport function loginUser(userToLogin: User) {\r\n  return { type: LOGIN_USER, user: userToLogin };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return { type: LOGOUT_USER, user: noAccountUser};\r\n}\r\n\r\nexport function updateSocket() {\r\n  return { update: true };\r\n}\r\n\r\n// Reducer\r\nexport default function account(state: User = noAccountUser, action: any) {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n    case LOGIN_USER:\r\n    case LOGOUT_USER:\r\n      return action.user;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport User, { UserRole } from '../types/User';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PATH_PROFILE = '/profile';\r\nconst PATH_LOGIN = '/login';\r\nconst PATH_LOGOUT = '/logout';\r\n\r\ninterface NavigationProps {\r\n  account: User;\r\n  match: any;\r\n  location: any;\r\n  history: any;\r\n}\r\n\r\nconst Navigation: React.FC<NavigationProps> = (props) => {\r\n  const actualPage = () => {\r\n    const pageString = props.location.pathname.split('/')[1];\r\n    return pageString === '' ? '/' : `/${pageString}`;\r\n  };\r\n\r\n  const [curPage, changeCurPage] = React.useState(actualPage());\r\n\r\n  React.useEffect(() => {\r\n    changeCurPage(actualPage());\r\n  }, [props.location]);\r\n\r\n  const navTo = (route: string) => {\r\n    props.history.push(route);\r\n    changeCurPage(actualPage());\r\n  };\r\n\r\n  const genLeftNav = (role: UserRole) => {\r\n    let leftNav: [string, string][] = [];\r\n    switch (role) {\r\n      case UserRole.Owner:\r\n      case UserRole.Admin:\r\n        leftNav = [\r\n          ['Home', '/'],\r\n          ['Judging', '/judging'],\r\n          ['Projects', '/projects'],\r\n          ['Admin', '/admin'],\r\n        ];\r\n        break;\r\n      case UserRole.Judge:\r\n        leftNav = [\r\n          ['Home', '/'],\r\n          ['Judging', '/judging'],\r\n          ['Projects', '/projects'],\r\n        ];\r\n        break;\r\n      case UserRole.Pending:\r\n        leftNav = [\r\n          ['Home', '/'],\r\n          ['Projects', '/projects'],\r\n        ];\r\n        break;\r\n      default:\r\n        leftNav = [\r\n          ['Projects', '/'],\r\n        ]\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <Nav className=\"mr-auto\">\r\n      {leftNav.map((navItem) => {\r\n        return (\r\n          <Nav.Link\r\n            key={navItem[0]}\r\n            eventKey={navItem[0]}\r\n            active={navItem[1] === curPage}\r\n            onSelect={() => navTo(navItem[1])}>\r\n            {navItem[0]}\r\n          </Nav.Link>\r\n        );\r\n      })}\r\n      </Nav>\r\n    )\r\n  };\r\n\r\n  let genRightNav = (role: UserRole) => {\r\n    if (role >= UserRole.Pending) {\r\n      return (\r\n        <Nav>\r\n          {/* <Nav.Link\r\n            active={PATH_PROFILE === curPage}\r\n            eventKey={'profile'}\r\n            onSelect={() => navTo(PATH_PROFILE)}>\r\n            Profile\r\n          </Nav.Link> */}\r\n          <Nav.Link\r\n            active={PATH_LOGOUT === curPage}\r\n            eventKey={'logout'}\r\n            onSelect={() => navTo(PATH_LOGOUT)}>\r\n            Logout\r\n          </Nav.Link>\r\n        </Nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <Nav>\r\n          <Nav.Link\r\n            active={PATH_LOGIN === curPage}\r\n            eventKey={'login'}\r\n            onSelect={() => navTo(PATH_LOGIN)}>\r\n            Login\r\n          </Nav.Link>\r\n        </Nav>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect bg='dark' variant='dark' expand=\"sm\" >\r\n      <Link\r\n        to={'/'}\r\n        style={{ textDecoration: 'none' }}\r\n        onClick={() => navTo('/')}>\r\n        <Navbar.Brand>HackGT Expo</Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"navigation\" />\r\n      <Navbar.Collapse>\r\n        {genLeftNav(props.account.role)}\r\n        {genRightNav(props.account.role)}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);","import * as qs from 'querystring';\r\nimport Axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\r\n\r\nimport User, { roleStringToEnum } from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { loginUser, updateSocket } from '../../state/Account';\r\nimport { UIError } from '../../types/Common';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    loginUser: (user: User) => dispatch(loginUser(user)),\r\n    updateSocket: () => {\r\n      dispatch(updateSocket());\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageLoginProps {\r\n  account: User;\r\n  loginUser: (user: User) => void;\r\n  updateSocket: () => void;\r\n}\r\n\r\ninterface Inputs {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ntype State = {\r\n  error: UIError;\r\n  inputs: Inputs;\r\n  requesting: boolean;\r\n  success: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'change-error', error: UIError }\r\n  | { type: 'change-inputs', inputs: Partial<Inputs> }\r\n  | { type: 'request-success' }\r\n  | { type: 'request-start' }\r\n  | { type: 'request-finish' };\r\n\r\nconst PageLoginComponent: React.FC<PageLoginProps> = (props) => {\r\n  const initialState = {\r\n    requesting: false,\r\n    inputs: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    error: {\r\n      name: '',\r\n      message: '',\r\n    },\r\n    success: false,\r\n  };\r\n\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'change-error':\r\n        return {\r\n          ...state,\r\n          error: action.error,\r\n          requesting: false,\r\n        };\r\n      case 'change-inputs':\r\n        return { ...state, inputs: {\r\n          ...state.inputs,\r\n          ...action.inputs,\r\n        }};\r\n      case 'request-start':\r\n        return {\r\n          ...state,\r\n          requesting: true,\r\n          error: { name: '', message: '' },\r\n        };\r\n      case 'request-finish':\r\n        return { ...state, requesting: false, success: false };\r\n      case 'request-success':\r\n        return { ...state, requesting: false, success: true };\r\n      default:\r\n        return state;\r\n    }\r\n  }, initialState, undefined);\r\n\r\n  const genErrorBox = () => {\r\n    return state.error.name\r\n      ? <Alert variant=\"danger\">\r\n          <strong>{state.error.name}</strong>\r\n          <div>{state.error.message}</div>\r\n        </Alert>\r\n      : null\r\n  };\r\n\r\n  const handleLogin = async (event: any) => {\r\n    event.preventDefault();\r\n    if (state.inputs.email.length === 0 || state.inputs.password.length === 0) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Logging In',\r\n          message: 'One or more fields were left blank.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: 'request-start' });\r\n    const loginResponse = await Axios.post('/auth/login', qs.stringify({\r\n      'email': state.inputs.email.toLowerCase(),\r\n      'password': state.inputs.password,\r\n    }), {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n    });\r\n    const payload = loginResponse.data;\r\n    if (\r\n      !loginResponse.status\r\n      || !payload.id\r\n      || !payload.name\r\n      || !payload.email\r\n      || !payload.role\r\n    ) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Logging In',\r\n          message: 'Incorrect email or password.',\r\n        },\r\n      });\r\n      dispatch({ type: 'request-finish' });\r\n      return;\r\n    }\r\n\r\n    props.loginUser({\r\n      id: payload.id,\r\n      name: payload.name,\r\n      email: payload.email,\r\n      company: payload.company,\r\n      role: roleStringToEnum(payload.role),\r\n      tags: payload.tags,\r\n    });\r\n    props.updateSocket();\r\n    dispatch({ type: 'request-success' });\r\n  };\r\n\r\n  if (state.success) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      margin: '0 auto',\r\n      maxWidth: 400,\r\n    }}>\r\n      <h1 style={{\r\n        textAlign: 'center',\r\n        paddingBottom: 10,\r\n      }}>Login</h1>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                email: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.email}\r\n            type='email'\r\n            placeholder='Email' />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            type='password'\r\n            placeholder='Password'\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                password: event.target.value,\r\n              },\r\n            })} />\r\n        </Form.Group>\r\n        <Button\r\n          variant='primary'\r\n          type='submit'\r\n          onClick={handleLogin}\r\n          block>\r\n          {state.requesting\r\n            ? <Spinner animation='border' role='status' size='sm' />\r\n            : 'Login'}\r\n        </Button>\r\n      </Form>\r\n      {genErrorBox()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageLogin = connect(mapStateToProps, mapDispatchToProps)(PageLoginComponent);\r\n\r\nexport default PageLogin;\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nimport User from '../../types/User';\r\nimport { logoutUser, updateSocket } from '../../state/Account';\r\n\r\nconst sleep = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    logoutUser: () => {\r\n      dispatch(logoutUser());\r\n    },\r\n    updateSocket: () => {\r\n      dispatch(updateSocket());\r\n    },\r\n  };\r\n};\r\n\r\ninterface LogoutProps {\r\n  account: User;\r\n  logoutUser: () => void;\r\n  updateSocket: () => void;\r\n}\r\n\r\nconst PageLogoutComponent: React.FC<LogoutProps> = (props) => {\r\n  const [success, changeSuccess] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const logout = async () => {\r\n      await Promise.all([Axios.get('/auth/logout'), sleep(500)])\r\n      props.logoutUser();\r\n      props.updateSocket();\r\n      changeSuccess(true);\r\n    };\r\n    logout();\r\n  }, [success]);\r\n\r\n  return success\r\n    ? <Redirect to='/' />\r\n    : <Spinner animation='grow' />\r\n};\r\n\r\nconst PageLogout = connect(null, mapDispatchToProps)(PageLogoutComponent);\r\n\r\nexport default PageLogout;\r\n","import React from 'react';\r\n\r\nimport User from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { loginUser } from '../../state/Account';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\taccount: state.account,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tloginUser: (user: User) => {\r\n\t\t\tdispatch(loginUser(user));\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface PageProfileProps {\r\n\taccount: User;\r\n\tloginUser: (user: User) => void;\r\n}\r\n\r\ntype State = {\r\n\trequesting: boolean;\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'request-start'}\r\n\t| { type: 'request-finish'};\r\n\r\nconst PageProfileComponent: React.FC<PageProfileProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'request-start':\r\n\t\t\t\treturn { ...state, requesting: true };\r\n\t\t\tcase 'request-finish':\r\n\t\t\t\treturn { ...state, requesting: false };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n\t\trequesting: false,\r\n\t}, undefined);\r\n\r\n\treturn (\r\n\t\t<div>Profile</div>\r\n\t);\r\n};\r\n\r\nconst PageProfile = connect(mapStateToProps, mapDispatchToProps)(PageProfileComponent);\r\n\r\nexport default PageProfile;\r\n","import Project, { ProjectState } from '../types/Project';\r\nimport Axios from 'axios';\r\n\r\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\r\nexport const FILL_PROJECTS = 'FILL_PROJECTS';\r\nexport const APPEND_FILL_PROJECTS = 'APPEND_FILL_PROJECTS';\r\n\r\nexport function updateProject(project: Project) {\r\n  return { type: UPDATE_PROJECT, project };\r\n}\r\n\r\nexport function deleteProject(projectID: number) {\r\n  return { type: DELETE_PROJECT, projectID };\r\n}\r\n\r\nexport function fillProjects(projects: ProjectState) {\r\n  return { type: FILL_PROJECTS, projects };\r\n}\r\n\r\nexport function appendFillProjects(projects: ProjectState) {\r\n  return { type: APPEND_FILL_PROJECTS, projects };\r\n}\r\n\r\nexport function fetchProjects() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/projects/allProjects');\r\n      if (result.status) {\r\n        const payload: ProjectState = result.data;\r\n        dispatch(fillProjects(payload));\r\n      } else {\r\n        throw new Error('API Error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport default function projects(state: ProjectState = {}, action: any) {\r\n  switch (action.type) {\r\n    case UPDATE_PROJECT:\r\n      return {\r\n        ...state,\r\n        [action.project.id]: action.project,\r\n      };\r\n    case DELETE_PROJECT:\r\n      let {[action.projectID]: omit, ...res} = state;\r\n      return res;\r\n    case FILL_PROJECTS:\r\n      return action.projects;\r\n    case APPEND_FILL_PROJECTS:\r\n      return {\r\n        ...state,\r\n        ...action.projects,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Category, { Criteria, CategoryState, CategoryCriteriaState, CriteriaState } from '../types/Category';\r\nimport Axios from 'axios';\r\n\r\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\r\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY';\r\nexport const FILL_CATEGORIES = 'FILL_CATEGORIES';\r\n\r\nexport const UPDATE_CRITERIA = 'UPDATE_CRITERIA';\r\nexport const DELETE_CRITERIA = 'DELETE_CRITERIA';\r\nexport const FILL_CRITERIA = 'FILL_CRITERIA';\r\n\r\nexport function updateCategory(categories: CategoryState) {\r\n  return { type: UPDATE_CATEGORY, categories };\r\n}\r\n\r\nexport function deleteCategory(categoryID: number) {\r\n  return { type: DELETE_CATEGORY, categoryID };\r\n}\r\n\r\nexport function fillCategories(categories: { [id: number]: Category }) {\r\n  return { type: FILL_CATEGORIES, categories };\r\n}\r\n\r\nexport function updateCriteria(criteria: Criteria) {\r\n  return { type: UPDATE_CRITERIA, criteria };\r\n}\r\n\r\nexport function deleteCriteria(criteriaID: number) {\r\n  return { type: DELETE_CRITERIA, criteriaID };\r\n}\r\n\r\nexport function fillCriteria(criteria: { [id: number]: Criteria }) {\r\n  return { type: FILL_CRITERIA, criteria };\r\n}\r\n\r\nexport function fetchCategories() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/categories/allCategoriesCriteria');\r\n      if (result.status) {\r\n        const payload: CategoryState = result.data;\r\n        dispatch(fillCategories(payload));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport default function categories(state: CategoryCriteriaState = {\r\n  criteria: {},\r\n  categories: {}\r\n}, action: any) {\r\n  switch (action.type) {\r\n    case UPDATE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: {\r\n          ...state.categories,\r\n          ...action.categories,\r\n        },\r\n      };\r\n    case DELETE_CATEGORY:\r\n      let {[action.categoryID]: omitCategory, ...resCategory} = state.categories;\r\n      return {\r\n        ...state,\r\n        categories: resCategory,\r\n      };\r\n    case FILL_CATEGORIES:\r\n      const criteriaState: CriteriaState = {};\r\n      const categoryState: CategoryState = action.categories;\r\n      for (const cat of Object.values(categoryState)) {\r\n        const category: Category = cat;\r\n        for (const cri of Object.values(category.criteria)) {\r\n          const criteria: Criteria = cri;\r\n          criteriaState[criteria.id!] = {\r\n            ...criteria,\r\n            categoryID: category.id!,\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        criteria: criteriaState,\r\n        categories: action.categories,\r\n      };\r\n    case UPDATE_CRITERIA:\r\n      return {\r\n        categories: {\r\n          ...state.categories,\r\n          [action.critera.categoryID]: {\r\n            ...state.categories[action.critera.categoryID],\r\n            criteria: {\r\n              ...action.criteria,\r\n            },\r\n          }\r\n        },\r\n        criteria: {\r\n          ...state.criteria,\r\n          ...action.criteria,\r\n        },\r\n      };\r\n    case DELETE_CRITERIA:\r\n      let {[action.criteriaID]: omitCCriteria, ...resCCriteria} = state.categories[state.criteria[action.criteriaID].categoryID].criteria;\r\n      let {[action.criteriaID]: omitCriteria, ...resCriteria} = state.criteria;\r\n      return {\r\n        categories: {\r\n          ...state.categories,\r\n          [action.criteria.categoryID]: {\r\n            critera: resCCriteria,\r\n          },\r\n        },\r\n        criteria: resCriteria,\r\n      };\r\n    case FILL_CRITERIA:\r\n      return {\r\n        ...state,\r\n        categories: {\r\n          ...state.categories,\r\n          [action.criteria.categoryID]: {\r\n            ...state.categories[action.criteria.categoryID],\r\n            criteria: action.criteria,\r\n          },\r\n        },\r\n        criteria: {\r\n          ...state.criteria,\r\n          ...action.criteria,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { TableGroup, TableGroupState } from '../types/Project';\r\nimport Axios from 'axios';\r\n\r\nexport const UPDATE_TABLE_GROUP = 'UPDATE_TABLE_GROUP';\r\nexport const DELETE_TABLE_GROUP = 'DELETE_TABLE_GROUP';\r\nexport const FILL_TABLE_GROUPS = 'FILL_TABLE_GROUPS';\r\n\r\nexport function updateTableGroup(tableGroup: TableGroup) {\r\n  return { type: UPDATE_TABLE_GROUP, tableGroup };\r\n}\r\n\r\nexport function deleteTableGroup(tableGroupID: number) {\r\n  return { type: DELETE_TABLE_GROUP, tableGroupID };\r\n}\r\n\r\nexport function fillTableGroups(tableGroups: TableGroupState) {\r\n  return { type: FILL_TABLE_GROUPS, tableGroups };\r\n}\r\n\r\nexport function fetchTableGroups() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/tableGroups/allTableGroups');\r\n      if (result.status) {\r\n        const payload: TableGroupState = result.data;\r\n        dispatch(fillTableGroups(payload));\r\n      } else {\r\n        throw new Error('API Error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport default function tableGroups(state: TableGroupState = {}, action: any) {\r\n  switch (action.type) {\r\n    case UPDATE_TABLE_GROUP:\r\n      return {\r\n        ...state,\r\n        [action.tableGroup.id]: action.tableGroup,\r\n      };\r\n    case DELETE_TABLE_GROUP:\r\n      let {[action.tableGroupID]: omit, ...rest} = state;\r\n      return rest;\r\n    case FILL_TABLE_GROUPS:\r\n      return action.tableGroups;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Badge, Card, Button, Modal, Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Project, { ProjectState, TableGroupState } from '../../types/Project';\r\nimport { fetchProjects } from '../../state/Project';\r\nimport Category, { CategoryState, CategoryCriteriaState } from '../../types/Category';\r\nimport { fillCategories } from '../../state/Category';\r\nimport { AppState } from '../../state/Store';\r\nimport { fetchTableGroups } from '../../state/TableGroup';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\tcategories: state.categories,\r\n\t\tprojects: state.projects,\r\n\t\ttableGroups: state.tableGroups,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfetchTableGroups: () => {\r\n\t\t\tdispatch(fetchTableGroups());\r\n\t\t},\r\n\t\tfetchProjects: () => {\r\n\t\t\tdispatch(fetchProjects());\r\n\t\t},\r\n\t\tfillCategories: (categories: CategoryState) => {\r\n\t\t\tdispatch(fillCategories(categories));\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface PageProjectsProps {\r\n\tcategories: CategoryCriteriaState;\r\n\tprojects: ProjectState;\r\n\ttableGroups: TableGroupState;\r\n\tfillCategories: (categories: CategoryState) => void;\r\n\tfetchTableGroups: () => void;\r\n\tfetchProjects: () => void;\r\n}\r\n\r\ntype State = {\r\n\trequesting: boolean;\r\n\tfilterBy: number;\r\n\tmodalOpen: boolean;\r\n\tsearchText: string;\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'change-filterBy', categoryID: number }\r\n\t| { type: 'toggle-modal' }\r\n\t| { type: 'request-start'}\r\n\t| { type: 'request-finish'}\r\n\t| { type: 'change-search', search: string };\r\n\r\nconst PageProjectsComponent: React.FC<PageProjectsProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'toggle-modal':\r\n\t\t\t\treturn { ...state, modalOpen: !state.modalOpen };\r\n\t\t\tcase 'change-filterBy':\r\n\t\t\t\treturn { ...state, filterBy: action.categoryID };\r\n\t\t\tcase 'request-start':\r\n\t\t\t\treturn { ...state, requesting: true };\r\n\t\t\tcase 'request-finish':\r\n\t\t\t\treturn { ...state, requesting: false };\r\n\t\t\tcase 'change-search':\r\n\t\t\t\treturn { ...state, searchText: action.search };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n\t\trequesting: false,\r\n\t\tfilterBy: 0,\r\n\t\tmodalOpen: false,\r\n\t\tsearchText: '',\r\n\t}, undefined);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst initialFetch = async () => {\r\n\t\t\tdispatch({ type: 'request-start' });\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tprops.fetchTableGroups(),\r\n\t\t\t\tprops.fetchProjects(),\r\n\t\t\t\tfetchCategories(),\r\n\t\t\t]);\r\n\t\t\tdispatch({ type: 'request-finish' });\r\n\t\t};\r\n\r\n\t\tinitialFetch();\r\n\t}, []);\r\n\r\n\tconst fetchCategories = async () => {\r\n\t\tconst result = await Axios.get('/api/categories/allCategories');\r\n\t\tif (result.status) {\r\n\t\t\tconst payload: CategoryState = result.data;\r\n\t\t\tprops.fillCategories(payload);\r\n\t\t} else {\r\n\t\t\t// TODO error checking\r\n\t\t}\r\n\t};\r\n\r\n\tconst getProjectCards = () => {\r\n\t\tif (\r\n\t\t\tObject.values(props.categories.categories).length > 0\r\n\t\t\t&& Object.values(props.projects).length > 0\r\n\t\t\t&& Object.values(props.tableGroups).length > 0\r\n\t\t) {\r\n\t\t\treturn Object.values(props.projects)\r\n\t\t\t\t.filter((project: Project) => !state.filterBy || project.categoryIDs.includes(state.filterBy))\r\n\t\t\t\t.filter((project: Project) => project.name.toLowerCase().includes(state.searchText.toLowerCase()))\r\n\t\t\t\t.map((project: Project) => {\r\n\t\t\t\tconst categories = project.categoryIDs.map((categoryID: number) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\tkey={categoryID}\r\n\t\t\t\t\t\t\tvariant='secondary'\r\n\t\t\t\t\t\t\tstyle={{ margin: '0 2px' }}>\r\n\t\t\t\t\t\t\t{props.categories.categories[categoryID].name}\r\n\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\tconst tableGroup = props.tableGroups[project.tableGroupID];\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\tkey={project.id!}\r\n\t\t\t\t\t\thref={project.devpostURL}\r\n\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttextDecoration: 'none',\r\n\t\t\t\t\t\t\twidth: '18rem',\r\n\t\t\t\t\t\t\tmargin: 6,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t<Card style={{ height: '100%', }}>\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<Card.Title style={{\r\n\t\t\t\t\t\t\t\tcolor: tableGroup.color\r\n\t\t\t\t\t\t\t}}>{project.name}</Card.Title>\r\n\t\t\t\t\t\t\t<Card.Subtitle className=\"mb-2 text-muted\">Expo {project.expoNumber}, Table: {tableGroup.name} {project.tableNumber}</Card.Subtitle>\r\n\t\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t\t{categories}\r\n\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst getCategoriesRadios = () => {\r\n\t\treturn Object.values(props.categories.categories).map((category: Category) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Form.Check\r\n\t\t\t\tchecked={state.filterBy === category.id!}\r\n\t\t\t\t\tkey={category.id!}\r\n\t\t\t\t\ttype='radio'\r\n\t\t\t\t\tname='prizeName'\r\n\t\t\t\t\tlabel={category.name}\r\n\t\t\t\t\tonChange={() => dispatch({ type: 'change-filterBy', categoryID: category.id! })}\r\n\t\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={{ width: '100%' }}>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tmargin: '0 auto',\r\n\t\t\t\t\tmaxWidth: 1300,\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\tflexWrap: 'wrap', }}>\r\n\t\t\t\t\t<h1>Projects</h1>\r\n\t\t\t\t\t<div style={{ flexGrow: 2 }}></div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{ width: 130 }}\r\n\t\t\t\t\t\tvariant='outline-dark'\r\n\t\t\t\t\t\tonClick={() => dispatch({ type: 'toggle-modal' })}>\r\n\t\t\t\t\t\tCategories\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tstyle={{ maxWidth: 300, margin: '0 12px' }}\r\n\t\t\t\t\t\tvalue={state.searchText}\r\n\t\t\t\t\t\tonChange={(event: any) => dispatch({ type: 'change-search', search: event.target.value})}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Search for projects' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t\tmaxWidth: 1300,\r\n\t\t\t\t\tmargin: '12px auto 0',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t{getProjectCards()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Modal show={state.modalOpen} onHide={() => dispatch({ type: 'toggle-modal'})}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\tFilter Projects\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\tchecked={state.filterBy === 0}\r\n\t\t\t\t\t\t\tname='prizeName'\r\n\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\tlabel={'All Projects'}\r\n\t\t\t\t\t\t\tonChange={() => dispatch({ type: 'change-filterBy', categoryID: 0 })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{getCategoriesRadios()}\r\n\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst PageProjects = connect(mapStateToProps, mapDispatchToProps)(PageProjectsComponent);\r\n\r\nexport default PageProjects;\r\n","export enum BallotStatus {\r\n  Pending = 'pending',\r\n  Assigned = 'assigned',\r\n  Submitted = 'submitted',\r\n  Missing = 'missing',\r\n  Busy = 'busy',\r\n  Skipped = 'skipped',\r\n  Started = 'started',\r\n}\r\n\r\nexport default interface Ballot {\r\n  id?: number;\r\n  status: BallotStatus;\r\n  projectID: number;\r\n  criteriaID: number;\r\n  userID: number;\r\n  score: number;\r\n  createdAt: number;\r\n  updatedAt: number;\r\n  pending?: boolean;\r\n}\r\n\r\nexport interface JudgeProjectBallotsMapping {\r\n  [judgeID: number]: {\r\n    [projectID: number]: Ballot[];\r\n  };\r\n}\r\n\r\nexport interface ProjectScoresMapping {\r\n  [projectID: number]: {\r\n    [judgeID: number]: Ballot[];\r\n  };\r\n}\r\n\r\nexport interface JudgeQueues {\r\n  [userID: number]: {\r\n    queuedProject: QueuedProject;\r\n    activeProjectID: number;\r\n    otherProjectIDs: number[];\r\n  }\r\n}\r\n\r\nexport interface QueuedProject {\r\n  id: number;\r\n  pending: boolean;\r\n}\r\n\r\nexport interface BallotObject {\r\n  [ballotID: number]: Ballot;\r\n}\r\n\r\nexport interface BallotState extends BallotObject {\r\n  dJudgeQueues: JudgeQueues;\r\n  dJudgeProjectBallotsMap: JudgeProjectBallotsMapping;\r\n  dProjectScores: ProjectScoresMapping;\r\n}\r\n","export default interface Project {\r\n  id?: number;\r\n  name: string;\r\n  devpostURL: string;\r\n  expoNumber: number;\r\n  tableGroupID: number;\r\n  tableNumber: number;\r\n  categoryIDs: number[];\r\n  tags: string[];\r\n}\r\n\r\nexport interface ProjectWithHealth extends Project {\r\n  health: number;\r\n}\r\n\r\nexport interface TableGroup {\r\n  id?: number;\r\n  name: string;\r\n  shortcode: string;\r\n  color: string;\r\n}\r\n\r\nexport interface ProjectState {\r\n  [ id: number ]: Project;\r\n}\r\n\r\nexport interface TableGroupState {\r\n  [ id: number ]: TableGroup;\r\n}\r\n\r\nexport const EMPTY_PROJECT = {\r\n  id: 0,\r\n  name: '',\r\n  devpostURL: '',\r\n  expoNumber: 0,\r\n  tableGroupID: 0,\r\n  tableNumber: 0,\r\n  categoryIDs: [],\r\n  tags: [],\r\n}\r\n\r\nexport const EMPTY_TABLE_GROUP = {\r\n  id: -1,\r\n  name: '',\r\n  shortcode: '',\r\n  color: '',\r\n}\r\n","// Action Types\r\nexport const REQUEST_START = 'REQUEST_START';\r\nexport const REQUEST_FINISH = 'REQUEST_FINISH';\r\n\r\n// Action Creators\r\nexport function requestStart() {\r\n  return { type: REQUEST_START }\r\n}\r\n\r\nexport function requestFinish() {\r\n  return { type: REQUEST_FINISH }\r\n}\r\n\r\nexport default function request(state: boolean = false, action: any) {\r\n  switch (action.type) {\r\n    case REQUEST_START:\r\n      return true;\r\n    case REQUEST_FINISH:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import uuidv4 from 'uuid/v4';\r\n\r\nimport Ballot, { BallotState, JudgeProjectBallotsMapping, BallotStatus, JudgeQueues, BallotObject, ProjectScoresMapping } from \"../types/Ballot\";\r\nimport Axios from 'axios';\r\n\r\nexport const FILL_BALLOTS = 'FILL_BALLOTS';\r\nexport const UPDATE_BALLOTS = 'UPDATE_BALLOTS';\r\nexport const DELETE_BALLOTS = 'DELETE_BALLOTS';\r\nexport const CLEAR_BALLOTS = 'CLEAR_BALLOTS';\r\n\r\nexport const QUEUE_PROJECT = 'QUEUE_PROJECT';\r\nexport const QUEUED_PROJECT = 'QUEUED_PROJECT';\r\nexport const SCORE_PROJECT = 'SCORE_PROJECT';\r\nexport const GOT_PROJECT = 'GOT_PROJECT';\r\nexport const BUSY_PROJECT = 'BUSY_PROJECT';\r\nexport const SKIP_PROJECT = 'SKIP_PROJECT';\r\nexport const MISSING_PROJECT = 'MISSING_PROJECT';\r\n\r\nexport function subscribeQueueProject() {\r\n  return {\r\n    event: 'project-queue',\r\n    handle: QUEUE_PROJECT,\r\n  };\r\n}\r\n\r\nexport function unsubscribeQueueProject() {\r\n  return {\r\n    event: 'project-queue',\r\n    leave: true,\r\n  };\r\n}\r\n\r\nexport function subscribeQueuedProject() {\r\n  return {\r\n    event: 'project-queued',\r\n    handle: QUEUED_PROJECT,\r\n  };\r\n}\r\n\r\nexport function unsubscribeQueuedProject() {\r\n  return {\r\n    event: 'project-queued',\r\n    leave: true,\r\n  };\r\n}\r\n\r\nexport function subscribeGetProject() {\r\n  return {\r\n    event: 'project-got',\r\n    handle: GOT_PROJECT,\r\n  };\r\n}\r\n\r\nexport function subscribeScoreProject() {\r\n  return {\r\n    event: 'project-score',\r\n    handle: SCORE_PROJECT,\r\n  };\r\n}\r\n\r\nexport function subscribeSkipProject() {\r\n  return {\r\n    event: 'project-skip',\r\n    handle: SKIP_PROJECT,\r\n  };\r\n}\r\n\r\nexport function subscribeMissingProject() {\r\n  return {\r\n    event: 'project-missing',\r\n    handle: MISSING_PROJECT,\r\n  };\r\n}\r\n\r\nexport function subscribeBusyProject() {\r\n  return {\r\n    event: 'project-busy',\r\n    handle: BUSY_PROJECT,\r\n  };\r\n}\r\n\r\nexport function unsubscribeAll() {\r\n  return {\r\n    event: 'empty',\r\n    leave: true,\r\n  };\r\n}\r\n\r\nexport function fillBallots(ballots: BallotObject) {\r\n  return { type: FILL_BALLOTS, ballots };\r\n}\r\n\r\nexport function updateBallots(ballots: BallotObject) {\r\n  return { type: UPDATE_BALLOTS, ballots };\r\n}\r\n\r\nexport function deleteBallots(ballotIDs: number[]) {\r\n  return { type: DELETE_BALLOTS, ballotIDs };\r\n}\r\n\r\nexport function clearBallots() {\r\n  return { type: CLEAR_BALLOTS };\r\n}\r\n\r\nexport function fetchBallots() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/ballots/allBallots');\r\n      if (result.status) {\r\n        const payload: BallotObject = result.data;\r\n        dispatch(fillBallots(payload));\r\n      } else {\r\n        throw new Error('API Error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function startBallots(userID: number, projectID: number) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.post('/api/projects/startProject', {\r\n        userID,\r\n        projectID,\r\n      });\r\n      if (result.status) {\r\n        const payload: BallotObject = result.data;\r\n        dispatch(fillBallots(payload));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function scoreBallots(ballots: { [ballotID: number]: number }) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      console.log(ballots);\r\n      const result = await Axios.post('/api/projects/scoreProject', {\r\n        ballots,\r\n      });\r\n\r\n      console.log(result);\r\n      if (result.status) {\r\n        console.log('lsdkjflsdkjfsdljksdf');\r\n        dispatch(clearBallots());\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function skipBallots(userID: number, projectID: number) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.post('/api/projects/skip', {\r\n        userID,\r\n        projectID,\r\n      });\r\n      if (result.status) {\r\n        const payload: BallotObject = result.data\r\n        dispatch(clearBallots());\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function missingBallots(userID: number, projectID: number) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.post('/api/projects/missing', {\r\n        userID,\r\n        projectID,\r\n      });\r\n      if (result.status) {\r\n        const payload: BallotObject = result.data\r\n        dispatch(clearBallots());\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function busyBallots(userID: number, projectID: number) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.post('/api/projects/busy', {\r\n        userID,\r\n        projectID,\r\n      });\r\n      if (result.status) {\r\n        dispatch(clearBallots());\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport function queueProject(projectID: number, userID: number) {\r\n  return {\r\n    type: 'QUEUE_PROJECT',\r\n    result: {\r\n      userID,\r\n      projectID,\r\n    }\r\n  };\r\n}\r\n\r\nexport function queueProjectEmit(projectID: number, userID: number) {\r\n  console.log('wow', projectID, userID);\r\n  return {\r\n    event: 'project-queue',\r\n    emit: true,\r\n    payload: {\r\n      eventID: uuidv4(),\r\n      projectID,\r\n      userID,\r\n    },\r\n  };\r\n}\r\n\r\nconst initialBallotState: BallotState = {\r\n  dJudgeQueues: {},\r\n  dJudgeProjectBallotsMap: {},\r\n  dProjectScores: {},\r\n}\r\n\r\nexport default function ballots(state: BallotState = initialBallotState, action: any) {\r\n  switch (action.type) {\r\n    case FILL_BALLOTS:\r\n      const dJudgeProjectBallotsMap: JudgeProjectBallotsMapping = state.dJudgeProjectBallotsMap ? state.dJudgeProjectBallotsMap : {};\r\n      const dJudgeQueues: JudgeQueues = state.dJudgeQueues ? state.dJudgeQueues : {};\r\n      const dProjectScores: ProjectScoresMapping = state.dProjectScores ? state.dProjectScores : {};\r\n      const ballots: { [ballotID: number]: Ballot } = action.ballots;\r\n      for (const ballot of Object.values(ballots)) {\r\n        if (!dJudgeProjectBallotsMap[ballot.userID]) {\r\n          dJudgeProjectBallotsMap[ballot.userID] = {};\r\n        }\r\n        if (!dJudgeProjectBallotsMap[ballot.userID][ballot.projectID]) {\r\n          dJudgeProjectBallotsMap[ballot.userID][ballot.projectID] = [];\r\n        }\r\n\r\n        if (!dProjectScores[ballot.projectID]) {\r\n          dProjectScores[ballot.projectID] = {};\r\n        }\r\n        if (!dProjectScores[ballot.projectID][ballot.userID] && ballot.status === BallotStatus.Submitted) {\r\n          dProjectScores[ballot.projectID][ballot.userID] = [];\r\n        }\r\n\r\n        dJudgeProjectBallotsMap[ballot.userID][ballot.projectID].push(ballot);\r\n        if (ballot.status === BallotStatus.Submitted) {\r\n          dProjectScores[ballot.projectID][ballot.userID].push(ballot);\r\n        }\r\n      }\r\n\r\n      for (const judgeID of Object.keys(dJudgeProjectBallotsMap)) {\r\n        dJudgeQueues[+judgeID] = {\r\n          queuedProject: {\r\n            id: 0,\r\n            pending: false,\r\n          },\r\n          activeProjectID: 0,\r\n          otherProjectIDs: [],\r\n        };\r\n        const orderedJudgeBallots = Object.keys(dJudgeProjectBallotsMap[+judgeID]).sort((a: string, b: string) => {\r\n          const dateA = new Date(dJudgeProjectBallotsMap[+judgeID][+a][0].updatedAt).getTime();\r\n          const dateB = new Date(dJudgeProjectBallotsMap[+judgeID][+b][0].updatedAt).getTime();\r\n          return dateA - dateB;\r\n        });\r\n        for (const projectID of orderedJudgeBallots) {\r\n          const firstBallot = dJudgeProjectBallotsMap[+judgeID][+projectID][0];\r\n          if (firstBallot.status === BallotStatus.Pending) {\r\n            dJudgeQueues[+judgeID].queuedProject.id = +projectID;\r\n          } else if (firstBallot.status === BallotStatus.Started || firstBallot.status === BallotStatus.Assigned) {\r\n            dJudgeQueues[+judgeID].activeProjectID = +projectID;\r\n          } else {\r\n            dJudgeQueues[+judgeID].otherProjectIDs.push(+projectID);\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log(dProjectScores);\r\n\r\n      return {\r\n        ...action.ballots,\r\n        dJudgeProjectBallotsMap,\r\n        dJudgeQueues,\r\n        dProjectScores,\r\n      };\r\n    case UPDATE_BALLOTS:\r\n      return {\r\n        ...state,\r\n        ...action.ballots,\r\n      };\r\n    case DELETE_BALLOTS:\r\n      return action.ballotIDs.forEach((ballotID: number) => delete state[ballotID]);\r\n    case QUEUE_PROJECT:\r\n      console.log('queue', action);\r\n      const judgeQueueObject = state.dJudgeQueues[action.result.userID];\r\n      let dJudgeProjectBallotsMap1 = state.dJudgeProjectBallotsMap;\r\n      if (!dJudgeProjectBallotsMap1[action.result.userID]) {\r\n        dJudgeProjectBallotsMap1[action.result.userID] = {};\r\n      }\r\n\r\n      dJudgeProjectBallotsMap1 = {\r\n        ...state.dJudgeProjectBallotsMap,\r\n        [action.result.userID]: {\r\n          ...state.dJudgeProjectBallotsMap[action.result.userID],\r\n          [action.result.projectID]: {\r\n            ...state.dJudgeProjectBallotsMap[action.result.userID][action.result.projectID],\r\n          }\r\n        }\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        dJudgeQueues: {\r\n          ...state.dJudgeQueues,\r\n          [action.result.userID]: {\r\n            ...judgeQueueObject,\r\n            activeProjectID: judgeQueueObject ? judgeQueueObject.activeProjectID : 0,\r\n            otherProjectIDs: judgeQueueObject ? judgeQueueObject.otherProjectIDs : [],\r\n            queuedProject: {\r\n              id: action.result.projectID,\r\n              pending: true,\r\n            }\r\n          },\r\n        },\r\n        dJudgeProjectBallotsMap: dJudgeProjectBallotsMap1,\r\n      };\r\n    case QUEUED_PROJECT:\r\n      const newState = {\r\n        ...state,\r\n        ...action.result.newBallots,\r\n        dJudgeQueues: {\r\n          ...state.dJudgeQueues,\r\n          [action.result.userID]: {\r\n            ...state.dJudgeQueues[action.result.userID],\r\n            queuedProject: {\r\n              id: action.result.projectID,\r\n              pending: false,\r\n            }\r\n          },\r\n        },\r\n        dJudgeProjectBallotsMap: {\r\n          ...state.dJudgeProjectBallotsMap,\r\n          [action.result.userID]: {\r\n            ...state.dJudgeProjectBallotsMap[action.result.userID],\r\n            [action.result.projectID]: {\r\n              ...state.dJudgeProjectBallotsMap[action.result.userID][action.result.projectID],\r\n              ...action.result.newBallots,\r\n            }\r\n          }\r\n        },\r\n      }\r\n      for (const removedBallotID of action.result.removedBallotIDs) {\r\n        delete newState[removedBallotID];\r\n      }\r\n\r\n      return newState;\r\n    case GOT_PROJECT:\r\n      console.log(action.result);\r\n      const firstKey = Object.keys(action.result.newBallots)[0];\r\n      const firstBallot = action.result.newBallots[firstKey];\r\n      const userID = firstBallot.userID;\r\n      const projectID = firstBallot.projectID;\r\n      return {\r\n        ...state,\r\n        ...action.result.newBallots,\r\n        dJudgeProjectBallotsMap: {\r\n          ...state.dJudgeProjectBallotsMap,\r\n          [userID]: {\r\n            ...state.dJudgeProjectBallotsMap[userID],\r\n            [projectID]: {\r\n              ...state.dJudgeProjectBallotsMap[userID][projectID],\r\n              ...action.result.newBallots,\r\n            },\r\n          },\r\n        },\r\n        dJudgeQueues: {\r\n          ...state.dJudgeQueues,\r\n          [userID]: {\r\n            ...state.dJudgeQueues[userID],\r\n            queuedProject: undefined,\r\n            activeProjectID: firstBallot.projectID,\r\n          },\r\n        },\r\n      };\r\n    case SCORE_PROJECT:\r\n      console.log(action.result);\r\n      const firstKey2 = Object.keys(action.result.newBallots)[0];\r\n      const ballotsArray: Ballot[] = Object.values(action.result.newBallots);\r\n      const firstBallot2 = action.result.newBallots[firstKey2];\r\n      const userID2 = firstBallot2.userID;\r\n      const projectID2 = firstBallot2.projectID;\r\n      const otherProjectIDs = state.dJudgeQueues[userID2].otherProjectIDs;\r\n      if (!otherProjectIDs.includes(projectID2)) {\r\n        otherProjectIDs.push(projectID2);\r\n      }\r\n\r\n      let newDProjectScores = state.dProjectScores;\r\n\r\n      if (!state.dProjectScores[projectID2]) {\r\n        newDProjectScores[projectID2] = {};\r\n      }\r\n\r\n      if (!state.dProjectScores[projectID2][userID2]) {\r\n        newDProjectScores[projectID2][userID2] = [];\r\n      }\r\n\r\n      newDProjectScores[projectID2][userID2].push(...ballotsArray);\r\n\r\n      return {\r\n        ...state,\r\n        ...action.result.newBallots,\r\n        dJudgeProjectBallotsMap: {\r\n          ...state.dJudgeProjectBallotsMap,\r\n          [userID2]: {\r\n            ...state.dJudgeProjectBallotsMap[userID2],\r\n            [projectID2]: {\r\n              ...state.dJudgeProjectBallotsMap[userID2][projectID2],\r\n              ...action.result.newBallots,\r\n            },\r\n          },\r\n        },\r\n        dJudgeQueues: {\r\n          ...state.dJudgeQueues,\r\n          [userID2]: {\r\n            ...state.dJudgeQueues[userID2],\r\n            activeProjectID: 0,\r\n            otherProjectIDs,\r\n          },\r\n        },\r\n        dProjectScores: newDProjectScores,\r\n      };\r\n    case SKIP_PROJECT:\r\n        console.log(action.result);\r\n        const firstKey3 = Object.keys(action.result.newBallots)[0];\r\n        const ballotsArray1: Ballot[] = Object.values(action.result.newBallots);\r\n        const firstBallot3 = action.result.newBallots[firstKey3];\r\n        const userID3 = firstBallot3.userID;\r\n        const projectID3 = firstBallot3.projectID;\r\n        const otherProjectIDs1 = state.dJudgeQueues[userID3].otherProjectIDs;\r\n        if (!otherProjectIDs1.includes(projectID3)) {\r\n          otherProjectIDs1.push(projectID3);\r\n        }\r\n\r\n        let newDProjectScores1 = state.dProjectScores;\r\n\r\n        if (!state.dProjectScores[projectID3]) {\r\n          newDProjectScores1[projectID3] = {};\r\n        }\r\n\r\n        if (!state.dProjectScores[projectID3][userID3]) {\r\n          newDProjectScores1[projectID3][userID3] = [];\r\n        }\r\n\r\n        newDProjectScores1[projectID3][userID3].push(...ballotsArray1);\r\n\r\n        return {\r\n          ...state,\r\n          ...action.result.newBallots,\r\n          dJudgeProjectBallotsMap: {\r\n            ...state.dJudgeProjectBallotsMap,\r\n            [userID3]: {\r\n              ...state.dJudgeProjectBallotsMap[userID3],\r\n              [projectID3]: {\r\n                ...state.dJudgeProjectBallotsMap[userID3][projectID3],\r\n                ...action.result.newBallots,\r\n              },\r\n            },\r\n          },\r\n          dJudgeQueues: {\r\n            ...state.dJudgeQueues,\r\n            [userID3]: {\r\n              ...state.dJudgeQueues[userID3],\r\n              activeProjectID: 0,\r\n              otherProjectIDs1,\r\n            },\r\n          },\r\n          dProjectScores: newDProjectScores1,\r\n        };\r\n    case BUSY_PROJECT:\r\n      console.log(action.result.ballotsToRemove, state);\r\n      const betterState = state;\r\n      action.result.ballotsToRemove.forEach((ballotID: number) => {\r\n        delete state.dJudgeProjectBallotsMap[state[ballotID].userID][state[ballotID].projectID][ballotID];\r\n        state.dJudgeQueues[state[ballotID].userID].activeProjectID = 0;\r\n        delete betterState[ballotID];\r\n      });\r\n      return {\r\n        ...betterState,\r\n        dJudgeProjectBallotsMap: state.dJudgeProjectBallotsMap,\r\n        dJudgeQueues: state.dJudgeQueues,\r\n      };\r\n    case MISSING_PROJECT:\r\n      const ballots1: BallotObject = action.result.newBallots;\r\n      const ballotIDs = Object.keys(ballots1).map((id) => parseInt(id));\r\n      for (const ballotID of ballotIDs) {\r\n        const userID = ballots1[ballotID].userID;\r\n        const projectID = ballots1[ballotID].projectID;\r\n        state.dJudgeProjectBallotsMap[userID][projectID] = Object.values(ballots1);\r\n        state.dJudgeQueues[userID].activeProjectID = 0;\r\n        state.dJudgeQueues[userID].otherProjectIDs.push(ballotID);\r\n      }\r\n      return {\r\n        ...state,\r\n        ...ballots1,\r\n        dJudgeProjectBallotsMap: state.dJudgeProjectBallotsMap,\r\n        dJudgeQueues: state.dJudgeQueues,\r\n      }\r\n    case SKIP_PROJECT:\r\n      console.log('implement state chage');\r\n      return state;\r\n    case CLEAR_BALLOTS:\r\n      return initialBallotState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Card, ButtonGroup, Form } from 'react-bootstrap';\r\n\r\nimport Ballot, { BallotObject, BallotStatus } from '../../types/Ballot';\r\nimport Category, { CategoryState, CriteriaState, Criteria, CategoryCriteriaState } from '../../types/Category';\r\nimport Project, { ProjectState, TableGroupState, EMPTY_PROJECT } from '../../types/Project';\r\nimport User from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { fetchCategories } from '../../state/Category';\r\nimport { fetchTableGroups } from '../../state/TableGroup';\r\nimport { requestStart, requestFinish } from '../../state/Request';\r\nimport { updateBallots, startBallots, scoreBallots, clearBallots, missingBallots, busyBallots, skipBallots } from '../../state/Ballot';\r\n// @ts-ignore\r\nimport { SvgLoader, SvgProxy } from 'react-svgmt';\r\n\r\nimport './PageJudging.css';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\taccount: state.account,\r\n\t\tballots: state.ballots,\r\n\t\tcategories: state.categories,\r\n\t\ttableGroups: state.tableGroups,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfetchTableGroups: () => {\r\n\t\t\tdispatch(fetchTableGroups());\r\n\t\t},\r\n\t\tfetchCategories: () => {\r\n\t\t\tdispatch(fetchCategories());\r\n\t\t},\r\n\t\tupdateBallots: (ballots: BallotObject) => {\r\n\t\t\tdispatch(updateBallots(ballots));\r\n\t\t},\r\n\t\tstartBallots: (userID: number, projectID: number) => {\r\n\t\t\tdispatch(startBallots(userID, projectID));\r\n\t\t},\r\n\t\tclearBallots: () => {\r\n\t\t\tdispatch(clearBallots());\r\n\t\t},\r\n\t\trequestFinish: () => {\r\n\t\t\tdispatch(requestFinish());\r\n\t\t},\r\n\t\trequestStart: () => {\r\n\t\t\tdispatch(requestStart());\r\n\t\t},\r\n\t\tmissingBallots: (userID: number, projectID: number) => {\r\n\t\t\tdispatch(missingBallots(userID, projectID));\r\n\t\t},\r\n\t\tbusyBallots: (userID: number, projectID: number) => {\r\n\t\t\tdispatch(busyBallots(userID, projectID));\r\n\t\t},\r\n\t\tskipBallots: (userID: number, projectID: number) => {\r\n\t\t\tdispatch(skipBallots(userID, projectID));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nenum JudgingState {\r\n\tLoading = 0,\r\n\tFindProject = 1,\r\n\tJudgeProject = 2,\r\n\tNextProject = 3,\r\n\tNoProject = 4,\r\n}\r\n\r\ninterface PageJudgingProps {\r\n\taccount: User;\r\n\tballots: BallotObject;\r\n\tcategories: CategoryCriteriaState;\r\n\ttableGroups: TableGroupState;\r\n\tfetchTableGroups: () => void;\r\n\tfetchCategories: () => void;\r\n\tstartBallots: (userID: number, projectID: number) => void;\r\n\tclearBallots: () => void;\r\n\tupdateBallots: (ballots: BallotObject) => void;\r\n\tmissingBallots: (userID: number, projectID: number) => void;\r\n\tbusyBallots: (userID: number, projectID: number) => void;\r\n\tskipBallots: (userID: number, projectID: number) => void;\r\n}\r\n\r\ntype State = {\r\n\tcriteria: CriteriaState;\r\n\tcurrentProject: Project | undefined;\r\n\tjudgingState: JudgingState;\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'update-current-project', project: Project | undefined }\r\n\t| { type: 'update-judging-state', state: JudgingState }\r\n\t| { type: 'update-criteria', criteria: CriteriaState };\r\n\r\nconst PageJudgingComponent: React.FC<PageJudgingProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'update-criteria':\r\n\t\t\t\treturn { ...state, criteria: action.criteria };\r\n\t\t\tcase 'update-current-project':\r\n\t\t\t\treturn { ...state, currentProject: action.project };\r\n\t\t\tcase 'update-judging-state':\r\n\t\t\t\treturn { ...state, judgingState: action.state };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n\t\tcriteria: {},\r\n\t\tcurrentProject: undefined,\r\n\t\tjudgingState: JudgingState.Loading,\r\n\t}, undefined);\r\n\r\n\tconst updateBallotState = (ballots: BallotObject) => {\r\n\t\tif (Object.values(ballots).length > 0) {\r\n\t\t\tconst firstBallot: Ballot = Object.values(ballots)[0];\r\n\r\n\t\t\tif (firstBallot.status === BallotStatus.Started) {\r\n\t\t\t\tdispatch({ type: 'update-judging-state', state: JudgingState.JudgeProject });\r\n\t\t\t} else if (firstBallot.status === BallotStatus.Assigned) {\r\n\t\t\t\tdispatch({ type: 'update-judging-state', state: JudgingState.FindProject });\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdispatch({ type: 'update-current-project', project: EMPTY_PROJECT });\r\n\t\t\tdispatch({ type: 'update-judging-state', state: JudgingState.NoProject });\r\n\t\t}\r\n\t}\r\n\r\n\tconst fetchNextProject = async (userID: number) => {\r\n\t\tconst result = await Axios.post('/api/projects/nextProject', {\r\n\t\t\tuserID,\r\n\t\t});\r\n\r\n\t\tif (Object.values(result.data.ballots).length > 0) {\r\n\t\t\tconst ballots: BallotObject = result.data.ballots;\r\n\t\t\tconst projects: ProjectState = result.data.project;\r\n\t\t\tprops.updateBallots(ballots);\r\n\t\t\tdispatch({ type: 'update-current-project', project: Object.values(projects)[0] });\r\n\t\t}\r\n\r\n\t\tupdateBallotState(result.data.ballots);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tprops.fetchTableGroups();\r\n\t\tprops.fetchCategories();\r\n\t\tfetchNextProject(props.account.id!);\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tupdateBallotState(props.ballots);\r\n\t}, [props.ballots])\r\n\r\n\tconst _getSkipButtons = () => {\r\n\t\tconst reset = () => {\r\n\t\t\tdispatch({ type: 'update-judging-state', state: JudgingState.NextProject });\r\n\t\t\tdispatch({ type: 'update-current-project', project: EMPTY_PROJECT });\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div style={{ marginTop: 20 }}>\r\n\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t{/* <Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.missingBallots(props.account.id!, state.currentProject!.id!);\r\n\t\t\t\t\t\t\treset();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant='outline-danger'>\r\n\t\t\t\t\t\tMissing\r\n\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t{/* <Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.busyBallots(props.account.id!, state.currentProject!.id!);\r\n\t\t\t\t\t\t\treset();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant='outline-danger'>\r\n\t\t\t\t\t\tBusy\r\n\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.skipBallots(props.account.id!, state.currentProject!.id!);\r\n\t\t\t\t\t\t\treset();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant='outline-danger'>\r\n\t\t\t\t\t\tSkip\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst _renderFindProject = () => {\r\n\t\tconst handleImHere = () => {\r\n\t\t\tprops.startBallots(props.account.id!, state.currentProject!.id!);\r\n\t\t};\r\n\r\n\t\tif (state.currentProject && state.currentProject.id !== 0) {\r\n\t\t\tconst slug = `${props.tableGroups[state.currentProject!.tableGroupID].name.toLowerCase()}_${state.currentProject!.tableNumber}`\r\n\t\t\tconsole.log(slug + \" > path\");\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<h6>Next Project</h6>\r\n\t\t\t\t\t<h1><a href={state.currentProject!.devpostURL} style={{ color: 'black', textDecoration: 'underline' }} target='_blank'>{state.currentProject!.name}</a></h1>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\tAt <span style={{ color: props.tableGroups[state.currentProject!.tableGroupID].color }}>{props.tableGroups[state.currentProject!.tableGroupID].name}</span> {state.currentProject!.tableNumber}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{ marginTop: 20, padding: '10px 30px', fontSize: 25 }}\r\n\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\tonClick={handleImHere}>\r\n\t\t\t\t\t\tI'm Here\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{_getSkipButtons()}\r\n\t\t\t\t\t<SvgLoader width=\"350\" path={\"judging_map.svg\"}>\r\n\t\t\t\t\t\t<SvgProxy selector={\"#\" + slug + \" > path\"} fill={props.tableGroups[state.currentProject!.tableGroupID].color} />\r\n\t\t\t\t\t</SvgLoader>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst _renderJudgeProject = () => {\r\n\t\tconst _renderScoreRange = (ballotID: number, min: number, max: number) => {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'row' }}>\r\n\t\t\t\t\t\t{min}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='range'\r\n\t\t\t\t\t\t\tmin={min}\r\n\t\t\t\t\t\t\tmax={max}\r\n\t\t\t\t\t\t\tclassName='slider'\r\n\t\t\t\t\t\t\tvalue={props.ballots[ballotID].score}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tprops.updateBallots({\r\n\t\t\t\t\t\t\t\t\t[ballotID]: {\r\n\t\t\t\t\t\t\t\t\t\t...props.ballots[ballotID],\r\n\t\t\t\t\t\t\t\t\t\tscore: +event.target.value,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t{max}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<strong>{props.ballots[ballotID].score}</strong>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\tconst _renderBallots = () => {\r\n\t\t\treturn Object.values(props.ballots).map((ballot: Ballot) => {\r\n\t\t\t\tif (!ballot.criteriaID) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst category: Category = props.categories.categories[props.categories.criteria[ballot.criteriaID].categoryID];\r\n\t\t\t\tconst criteria = props.categories.criteria[ballot.criteriaID];\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey={ballot.id}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmargin: '12px 0',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<Card.Title>{criteria.name}</Card.Title>\r\n\t\t\t\t\t\t\t<Card.Subtitle>{category.name}</Card.Subtitle>\r\n\t\t\t\t\t\t\t<Card.Text style={{ textAlign: 'left', whiteSpace: 'pre-wrap' }}>{criteria.rubric}</Card.Text>\r\n\t\t\t\t\t\t\t{_renderScoreRange(ballot.id!, criteria.minScore, criteria.maxScore)}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tconst _handleScoreBallots = async () => {\r\n\t\t\tconst scoreObject = Object.values(props.ballots).reduce((dict, ballot: Ballot) => {\r\n\t\t\t\tdict[ballot.id!] = ballot.score;\r\n\t\t\t\treturn dict;\r\n\t\t\t}, {});\r\n\r\n\t\t\tconst result = await Axios.post('api/projects/scoreProject', {\r\n\t\t\t\tballots: scoreObject,\r\n\t\t\t});\r\n\r\n\t\t\tif (result.status) {\r\n\t\t\t\tprops.clearBallots();\r\n\t\t\t\tdispatch({ type: 'update-judging-state', state: JudgingState.NextProject });\r\n\t\t\t\tdispatch({ type: 'update-current-project', project: EMPTY_PROJECT });\r\n\t\t\t} else {\r\n\t\t\t\t// TODO error checking.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (state.currentProject && state.currentProject.id !== 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ maxWidth: 560, textAlign: 'center', margin: '0 auto' }}>\r\n\t\t\t\t\t<h1><a href={state.currentProject!.devpostURL} style={{ color: 'black', textDecoration: 'underline' }} target='_blank'>{state.currentProject!.name}</a></h1>\r\n\t\t\t\t\t<h6><span style={{ color: props.tableGroups[state.currentProject!.tableGroupID].color }}>{props.tableGroups[state.currentProject!.tableGroupID].name}</span> {state.currentProject!.tableNumber}</h6>\r\n\t\t\t\t\t{_renderBallots()}\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\tonClick={() => _handleScoreBallots()}\r\n\t\t\t\t\t\t>Submit Scores</Button>\r\n\t\t\t\t\t{_getSkipButtons()}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst _renderNextProject = () => {\r\n\t\tconst exclamations = [\r\n\t\t\t'You are out of control!',\r\n\t\t\t'Absolutely incredible!',\r\n\t\t\t'Congratulations!',\r\n\t\t\t`You're on a roll!`,\r\n\t\t\t`Keep it going!`,\r\n\t\t\t`Just a couple hundred projects left to go!`,\r\n\t\t\t`Great Job`,\r\n\t\t];\r\n\t\treturn (\r\n\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t<h3>{exclamations[Math.floor(Math.random() * exclamations.length)]}</h3>\r\n\t\t\t\t<p>Your scores have been submitted!</p>\r\n\t\t\t\t<Button onClick={() => fetchNextProject(props.account.id!)}>Next Project</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst _renderNoProject = () => {\r\n\t\treturn (\r\n\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t<p>There are currently no projects assigned to you.</p>\r\n\t\t\t\t<Button onClick={() => fetchNextProject(props.account.id!)}>Refresh</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tif (\r\n\t\tObject.values(props.tableGroups).length === 0\r\n\t\t|| !state.currentProject\r\n\t\t|| Object.values(props.categories.criteria).length === 0) {\r\n\t\treturn null;\r\n\t\t// TODO loading\r\n\t}\r\n\r\n\tswitch (state.judgingState) {\r\n\t\tcase JudgingState.FindProject:\r\n\t\t\treturn _renderFindProject();\r\n\t\tcase JudgingState.JudgeProject:\r\n\t\t\treturn _renderJudgeProject();\r\n\t\tcase JudgingState.NextProject:\r\n\t\t\treturn _renderNextProject();\r\n\t\tcase JudgingState.NoProject:\r\n\t\t\treturn _renderNoProject();\r\n\t}\r\n\r\n\treturn null;\r\n};\r\n\r\nconst PageJudging = connect(mapStateToProps, mapDispatchToProps)(PageJudgingComponent);\r\n\r\nexport default PageJudging;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { adminRoute } from './PageAdmin';\r\n\r\ninterface AdminNavigationProps {\r\n  history: any;\r\n  location: any;\r\n  match: any;\r\n}\r\n\r\nconst AdminNavigation: React.FC<AdminNavigationProps> = (props) => {\r\n  const actualPage = () => {\r\n    const pageString = props.location.pathname.split('/')[2];\r\n    return pageString ? `/${pageString}` : '/';\r\n  };\r\n\r\n  const [curPage, changeCurPage] = React.useState(actualPage());\r\n\r\n  React.useEffect(() => {\r\n    changeCurPage(actualPage());\r\n  });\r\n\r\n  const navTo = (link: string) => {\r\n    props.history.push(link);\r\n    changeCurPage(actualPage());\r\n  };\r\n\r\n  return (\r\n    <Nav\r\n      variant='tabs'\r\n      activeKey={curPage}>\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={`/`}\r\n          onClick={() => navTo(`${adminRoute}`)}>\r\n          Projects\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      {/* <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={`/projects`}\r\n          onClick={() => navTo(`${adminRoute}/projects`)}>\r\n          Projects\r\n        </Nav.Link>\r\n      </Nav.Item> */}\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={`/categories`}\r\n          onClick={() => navTo(`${adminRoute}/categories`)}>\r\n          Categories\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={`/users`}\r\n          onClick={() => navTo(`${adminRoute}/users`)}>\r\n          Users\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n    // <Menu pointing secondary>\r\n    //   <Menu.Item\r\n    //     active={props.location.pathname === '/admin'}\r\n    //     onClick={() => navTo('/admin')}>Epicenter</Menu.Item>\r\n    //   <Menu.Item\r\n    //     active={props.location.pathname.startsWith('/admin/projects')}\r\n    //     onClick={() => navTo('/admin/projects')}>Projects</Menu.Item>\r\n    //   <Menu.Item\r\n    //     active={props.location.pathname.startsWith('/admin/categories')}\r\n    //     onClick={() => navTo('/admin/categories')}>Categories</Menu.Item>\r\n    //   <Menu.Item\r\n    //     active={props.location.pathname.startsWith('/admin/users')}\r\n    //     onClick={() => navTo('/admin/users')}>Users</Menu.Item>\r\n    // </Menu>\r\n  );\r\n}\r\n\r\nexport default withRouter(AdminNavigation);","import User, { UserState, roleStringToEnum } from '../types/User';\r\nimport Axios from 'axios';\r\n\r\n// Action Types\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const FILL_USERS = 'FILL_USERS';\r\n\r\n// Action Creators\r\nexport function addUser(newUser: User) {\r\n  return { type: ADD_USER, user: newUser };\r\n}\r\n\r\nexport function deleteUser(userID: number) {\r\n  return { type: DELETE_USER, id: userID };\r\n}\r\n\r\nexport function updateUser(updatedUser: User) {\r\n  return { type: UPDATE_USER, user: updatedUser };\r\n}\r\n\r\nexport function fillUsers(users: UserState) {\r\n  return { type: FILL_USERS, users }\r\n}\r\n\r\nexport function fetchUsers() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/users/allUsers');\r\n      if (result.status) {\r\n        const payload: UserState = result.data;\r\n        const toFill: UserState = {};\r\n        for (const user of Object.values(payload)) {\r\n          toFill[user.id] = {\r\n            ...user,\r\n            role: roleStringToEnum(user.role),\r\n          };\r\n        };\r\n        dispatch(fillUsers(toFill));\r\n      } else {\r\n        throw new Error('API Error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\n// Reducer\r\nexport default function users(state: UserState = {}, action: any) {\r\n  switch (action.type) {\r\n    case ADD_USER:\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        [action.user.id]: action.user,\r\n      };\r\n    case DELETE_USER:\r\n      const newState = state;\r\n      delete newState[action.id];\r\n      return newState;\r\n    case FILL_USERS:\r\n      return action.users;\r\n    default:\r\n      return state;\r\n  }\r\n}","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Form, ButtonToolbar, ToggleButtonGroup, ToggleButton, Button, Modal } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AppState } from '../../state/Store';\r\nimport User, { UserRole, serverDataToClientUser, clientUserToServerUser } from '../../types/User';\r\nimport { updateUser } from '../../state/User';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\nimport { fetchCompanies } from '../../state/Company';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n    account: state.account,\r\n    companies: state.companies,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tupdateUser: (user: User) => {\r\n\t\t\tdispatch(updateUser(user));\r\n    },\r\n    requestFinish: () => {\r\n      dispatch(requestFinish());\r\n    },\r\n    requestStart: () => {\r\n      dispatch(requestStart());\r\n    },\r\n\t};\r\n};\r\n\r\ninterface PageAdminUsersModalProps {\r\n  account: User;\r\n  companies: string[];\r\n  modalOpen: boolean;\r\n  user: User;\r\n  closeModal: () => void;\r\n  updateUser: (user: User) => void;\r\n  requestFinish: () => void;\r\n  requestStart: () => void;\r\n}\r\n\r\ntype State = {\r\n  requesting: boolean;\r\n  user: User;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'update-user', user: User };\r\n\r\nconst PageAdminUsersModalComponent: React.FC<PageAdminUsersModalProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n      case 'update-user':\r\n        return { ...state, user: action.user };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n    requesting: false,\r\n    user: props.user,\r\n  }, undefined);\r\n\r\n  const user = props.user;\r\n\r\n  React.useEffect(() => {\r\n    dispatch({ type: 'update-user', user: props.user });\r\n  }, [user]);\r\n\r\n  const _handleSaveChanges = async () => {\r\n    props.requestStart();\r\n    const result = await Axios.post('/api/users/update', {\r\n      user: clientUserToServerUser(state.user),\r\n    });\r\n    if (result.status) {\r\n      const data = result.data;\r\n      props.requestFinish();\r\n      props.closeModal();\r\n      props.updateUser(serverDataToClientUser(data));\r\n    } else {\r\n      // TODO add error checking.\r\n    }\r\n  };\r\n\r\n  const _getCompanyList = () => {\r\n    return props.companies.map((company: string) => {\r\n      return (\r\n        <option key={company}>{company}</option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const _getForm = () => {\r\n    return (\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-user',\r\n              user: {\r\n                ...state.user,\r\n                name: event.target.value,\r\n              },\r\n            })}\r\n            value={state.user.name}\r\n            type=\"text\"\r\n            placeholder=\"Name\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n        <Form.Label>Permission Level</Form.Label>\r\n          <ButtonToolbar>\r\n            <ToggleButtonGroup\r\n              name='role'\r\n              onChange={(value: any) => dispatch({\r\n                type: 'update-user',\r\n                user: {\r\n                  ...state.user,\r\n                  role: value,\r\n                }\r\n              })}\r\n              type='radio'\r\n              value={state.user.role} >\r\n              <ToggleButton\r\n                disabled={state.requesting}\r\n                value={UserRole.Pending}>\r\n                Pending\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                disabled={state.requesting}\r\n                value={UserRole.Judge}>\r\n                Judge\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                disabled={state.requesting}\r\n                value={UserRole.Admin}>\r\n                Admin\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                disabled={state.requesting}\r\n                value={UserRole.Owner}>\r\n                Owner\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </ButtonToolbar>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Company/Group Name</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-user',\r\n              user: {\r\n                ...state.user,\r\n                company: event.target.value,\r\n              },\r\n            })}\r\n            value={state.user.company}\r\n            type=\"text\"\r\n            placeholder=\"Company\">\r\n            {_getCompanyList()}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Button variant='outline-danger'>Reset Password</Button>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n\treturn (\r\n\t\t<Modal show={props.modalOpen} onHide={props.closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit User {props.user.id}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {_getForm()}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.closeModal}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={_handleSaveChanges}>\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\t);\r\n};\r\n\r\nconst PageAdminUsersModal = connect(mapStateToProps, mapDispatchToProps)(PageAdminUsersModalComponent);\r\n\r\nexport default PageAdminUsersModal;\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Badge, Card, ButtonGroup, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport User, { UserRole, clientUserToServerUser, serverDataToClientUser, getRoleString } from '../../types/User';\r\nimport { updateUser } from '../../state/User';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\nimport { AppState } from '../../state/Store';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    requesting: state.requesting,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n    requestFinish: () => {\r\n\t\t\tdispatch(requestFinish());\r\n\t\t},\r\n\t\trequestStart: () => {\r\n\t\t\tdispatch(requestStart());\r\n\t\t},\r\n\t\tupdateUser: (user: User) => {\r\n      dispatch(updateUser(user));\r\n    },\r\n\t};\r\n};\r\n\r\ninterface PageAdminUserCardProps {\r\n  requesting: boolean;\r\n  user: User;\r\n  openModal: (event: any, user: User) => void;\r\n  requestFinish: () => void;\r\n\trequestStart: () => void;\r\n\tupdateUser: (user: User) => void;\r\n}\r\n\r\nconst PageAdminUserCardComponent: React.FC<PageAdminUserCardProps> = (props) => {\r\n  const approve = async (event: any, user: User) => {\r\n    event.preventDefault();\r\n    props.requestStart();\r\n    user.role = UserRole.Judge;\r\n    user.isJudging = true;\r\n    const result = await Axios.post('/api/users/update', {\r\n      user: clientUserToServerUser(user),\r\n    });\r\n    if (result.status) {\r\n      props.updateUser(serverDataToClientUser(result.data));\r\n      props.requestFinish();\r\n    } else {\r\n      // TODO add error checking.\r\n    }\r\n  };\r\n\r\n  const includeExclude = async (event: any, user: User, include: boolean) => {\r\n    event.preventDefault();\r\n    props.requestStart();\r\n    user.isJudging = include;\r\n    const result = await Axios.post('/api/users/update', {\r\n      user: clientUserToServerUser(user),\r\n    });\r\n    if (result.status) {\r\n      props.updateUser(serverDataToClientUser(result.data));\r\n      props.requestFinish();\r\n    } else {\r\n      // TODO add error checking.\r\n    }\r\n  };\r\n\r\n  const getActionButtons = (user: User) => {\r\n    if (user.role === UserRole.Pending) {\r\n      return (\r\n        <Button\r\n          disabled={props.requesting}\r\n          onClick={(event: any) => approve(event, props.user)}\r\n          size='sm'\r\n          variant='outline-success'>\r\n          Approve\r\n        </Button>\r\n      );\r\n    } else if (user.isJudging) {\r\n      return (\r\n        <Button\r\n          disabled={props.requesting}\r\n          onClick={(event: any) => includeExclude(event, props.user, false)}\r\n          size='sm'\r\n          variant='outline-danger'>\r\n          Exclude From Judging\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          disabled={props.requesting}\r\n          onClick={(event: any) => includeExclude(event, props.user, true)}\r\n          size='sm'\r\n          variant='outline-success'>\r\n          Include In Judging\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n\treturn (\r\n\t\t<Card\r\n      key={props.user.id}\r\n      style={{\r\n        width: '18rem',\r\n        margin: '12px',\r\n      }}>\r\n      <Card.Body>\r\n        <Card.Title>{props.user.name}</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          {getRoleString(props.user.role)}\r\n          <Badge variant={props.user.isJudging ? 'success' : 'light'} style={{ margin: 5 }}>{props.user.isJudging ? 'Included In Judging' : 'Excluded From Judging'}</Badge>\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          {props.user.email}<br />\r\n          {props.user.company}<br />\r\n          {props.user.tags && props.user.tags.length > 0 ? <span>{props.user.tags}</span> : <span>No tags</span>}\r\n        </Card.Text>\r\n        <ButtonGroup>\r\n          <Button\r\n            disabled={props.requesting}\r\n            onClick={(event: any) => props.openModal(event, props.user)}\r\n            size='sm'\r\n            variant='primary'>\r\n            Edit\r\n          </Button>\r\n          {getActionButtons(props.user)}\r\n        </ButtonGroup>\r\n      </Card.Body>\r\n    </Card>\r\n\t);\r\n};\r\n\r\nconst PageAdminUserCard = connect(mapStateToProps, mapDispatchToProps)(PageAdminUserCardComponent);\r\n\r\nexport default PageAdminUserCard;\r\n","import Axios from \"axios\";\r\n\r\nexport const UPDATE_COMPANIES = 'UPDATE_COMPANIES';\r\n\r\nexport function updateCompanies(companies: string[]) {\r\n  return { type: UPDATE_COMPANIES, companies };\r\n}\r\n\r\nexport function fetchCompanies() {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const result = await Axios.get('/api/categories/companies');\r\n      if (result.status) {\r\n        const payload: string[] = result.data;\r\n        dispatch(updateCompanies(payload));\r\n      } else {\r\n        throw new Error('API Error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n}\r\n\r\nexport default function companies(state: string[] = [], action: any) {\r\n  switch (action.type) {\r\n    case UPDATE_COMPANIES:\r\n      return action.companies;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport User, { EMPTY_USER, UserState } from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { fetchUsers } from '../../state/User';\r\n\r\nimport PageAdminUsersModal from './PageAdminUsersModal';\r\nimport PageAdminUserCard from './PageAdminUserCard';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\nimport { fetchCompanies } from '../../state/Company';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    account: state.account,\r\n    requesting: state.requesting,\r\n    users: state.users,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    fetchCompanies: () => {\r\n      dispatch(fetchCompanies());\r\n    },\r\n    fetchUsers: () => {\r\n      dispatch(fetchUsers());\r\n    },\r\n    requestFinish: () => {\r\n      dispatch(requestFinish());\r\n    },\r\n    requestStart: () => {\r\n      dispatch(requestStart());\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageAdminUsersProps {\r\n  account: User;\r\n  requesting: boolean;\r\n  users: UserState;\r\n  fetchCompanies: () => void;\r\n  requestFinish: () => void;\r\n  requestStart: () => void;\r\n  fetchUsers: () => void;\r\n}\r\n\r\ntype State = {\r\n  newUser: User;\r\n  modalOpen: boolean;\r\n  modalUser: User;\r\n};\r\n\r\ntype Action =\r\n  | { type: 'change-newUser', newUser: Partial<User> }\r\n  | { type: 'modal-open', user: User }\r\n  | { type: 'modal-close' };\r\n\r\nconst PageAdminUsersComponent: React.FC<PageAdminUsersProps> = (props) => {\r\n  const initialState = {\r\n    newUser: EMPTY_USER,\r\n    modalOpen: false,\r\n    modalUser: EMPTY_USER,\r\n  };\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'modal-open':\r\n        return { ...state, modalOpen: true, modalUser: action.user };\r\n      case 'modal-close':\r\n        return { ...state, modalOpen: false };\r\n      case 'change-newUser':\r\n        return {\r\n          ...state,\r\n          newUser: {\r\n            ...state.newUser,\r\n            ...action.newUser,\r\n          }\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }, initialState, undefined);\r\n\r\n  React.useEffect(() => {\r\n    fetchUsers();\r\n    props.fetchCompanies();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    props.requestStart();\r\n    props.fetchUsers();\r\n    props.requestFinish();\r\n  };\r\n\r\n  const getUserCards = () => {\r\n    const openModal = (event: any, user: User) => {\r\n      event.preventDefault();\r\n      dispatch({ type: 'modal-open', user });\r\n    };\r\n\r\n    return Object.values(props.users).map((user: User) => {\r\n      return (\r\n        <PageAdminUserCard key={user.id} user={user} openModal={openModal} />\r\n      )\r\n    });\r\n  };\r\n\r\n  if (Object.keys(props.users).length > 0) {\r\n    return (\r\n      <div style={{ margin: '12px' }}>\r\n        <h1 style={{ textAlign: 'center' }}>Users</h1>\r\n        <div style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          flexWrap: 'wrap',\r\n          maxWidth: 1300,\r\n          margin: '12px auto 0',\r\n        }}>\r\n          {getUserCards()}\r\n          <PageAdminUsersModal\r\n            modalOpen={state.modalOpen}\r\n            closeModal={() => dispatch({ type: 'modal-close' })}\r\n            user={state.modalUser} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.requesting) {\r\n      return <div>Fetching users.</div>;\r\n      // TODO replace with spinner.\r\n    } else {\r\n      return <div>Error fetching users.</div>;\r\n      // TODO add try again button.\r\n    }\r\n  }\r\n};\r\n\r\nconst PageAdminUsers = connect(mapStateToProps, mapDispatchToProps)(PageAdminUsersComponent);\r\n\r\nexport default PageAdminUsers;\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fillProjects } from '../../state/Project';\r\nimport Project, { ProjectState, TableGroupState, TableGroup } from '../../types/Project';\r\nimport Papa from 'papaparse';\r\nimport { AppState } from '../../state/Store';\r\nimport Category, { CategoryState, NameToCategoryMapping, CategoryCriteriaState } from '../../types/Category';\r\nimport { updateCategory, fillCategories } from '../../state/Category';\r\nimport { clearBallots } from '../../state/Ballot';\r\nimport { string } from 'prop-types';\r\n\r\nconst requiredHeaders = [\r\n  'Submission Title',\r\n  'Submission Url',\r\n  'Plain Description',\r\n  'Built With',\r\n  'Desired Prizes',\r\n];\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    tableGroups: state.tableGroups,\r\n    categories: state.categories,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n    fillCategories: (categories: CategoryState) => {\r\n\t\t\tdispatch(fillCategories(categories));\r\n\t\t},\r\n    updateCategory: (categories: CategoryState) => {\r\n\t\t\tdispatch(updateCategory(categories));\r\n\t\t},\r\n\t\tfillProjects: (projects: ProjectState) => {\r\n\t\t\tdispatch(fillProjects(projects));\r\n    },\r\n    clearBallots: () => {\r\n      dispatch(clearBallots());\r\n    },\r\n\t};\r\n};\r\n\r\ninterface PageAdminProjectsUploadModalProps {\r\n  categories: CategoryCriteriaState;\r\n  modalOpen: boolean;\r\n  tableGroups: TableGroupState;\r\n  closeModal: () => void;\r\n  clearBallots: () => void;\r\n  updateCategory: (categories: CategoryState) => void;\r\n  fillProjects: (projects: ProjectState) => void;\r\n  fillCategories: (categories: CategoryState) => void;\r\n}\r\n\r\ntype State = {\r\n  csv: string[][];\r\n  csvHeaderIndicies: {[header: string]: number};\r\n  requesting: boolean;\r\n  totalProjectsToAccountFor: number;\r\n  totalProjectsAccountedFor: number;\r\n  inputNumberExpos: number;\r\n  inputTableGroups: { [tableGroupID: number]: number };\r\n  useSelfAssign: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'use-self-assign', enabled: boolean }\r\n  | { type: 'adjust-counts', tableGroups: { [tableGroupID: number]: number }}\r\n  | { type: 'adjust-totals', numberExpos: number }\r\n  | { type: 'update-csv', csv: string[][], csvHeaderIndicies: {[header: string]: number}}\r\n\t| { type: 'request-start'}\r\n  | { type: 'request-finish'};\r\n\r\nconst PageAdminProjectsUploadModalComponent: React.FC<PageAdminProjectsUploadModalProps> = (props) => {\r\n  const initialState = {\r\n    csv: [],\r\n    csvHeaderIndicies: {},\r\n    totalProjectsToAccountFor: -1,\r\n    totalProjectsAccountedFor: 0,\r\n    inputNumberExpos: 1,\r\n    inputTableGroups: {},\r\n    requesting: false,\r\n    useSelfAssign: false,\r\n  }\r\n\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n      case 'use-self-assign':\r\n        return {\r\n          ...state,\r\n          useSelfAssign: action.enabled,\r\n        };\r\n      case 'adjust-totals':\r\n        return {\r\n          ...state,\r\n          inputNumberExpos: action.numberExpos > 0 ? action.numberExpos : 1,\r\n          totalProjectsToAccountFor: Math.ceil(state.csv.length / action.numberExpos)\r\n        };\r\n      case 'adjust-counts':\r\n        const inputTableGroups = {\r\n          ...state.inputTableGroups,\r\n          ...action.tableGroups,\r\n        };\r\n        return {\r\n          ...state,\r\n          inputTableGroups,\r\n          totalProjectsAccountedFor: Object.values(inputTableGroups).reduce((counter, curVal) => counter + curVal, 0),\r\n        };\r\n      case 'update-csv':\r\n        return {\r\n          ...state,\r\n          csv: action.csv,\r\n          csvHeaderIndicies: action.csvHeaderIndicies,\r\n          totalProjectsToAccountFor: Math.ceil(action.csv.length / state.inputNumberExpos)\r\n        };\r\n\t\t\tcase 'request-start':\r\n\t\t\t\treturn { ...state, requesting: true };\r\n\t\t\tcase 'request-finish':\r\n        return { ...state, requesting: false };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n  }, initialState, undefined);\r\n\r\n  const effectInputTableGroups = props.tableGroups;\r\n\r\n  React.useEffect(() => {\r\n    const initialTableGroups: { [tableGroupID: number]: number} = {};\r\n    for (const tableGroup of Object.values(props.tableGroups)) {\r\n      initialTableGroups[tableGroup.id!] = 10;\r\n    }\r\n    dispatch({ type: 'adjust-counts', tableGroups: initialTableGroups });\r\n  }, [effectInputTableGroups]);\r\n\r\n  React.useEffect(() => {\r\n    const initialFetch = async () => {\r\n      // Fetch categories into state, just in case.\r\n      const fetchCategoriesResult = await Axios.get('/api/categories/allCategoriesCriteria');\r\n      if (fetchCategoriesResult.status) {\r\n        const payload: CategoryState = fetchCategoriesResult.data;\r\n        props.fillCategories(payload);\r\n      } else {\r\n        // TODO error checking\r\n      }\r\n    };\r\n\r\n    initialFetch();\r\n  }, []);\r\n\r\n  const handleUpload = async () => {\r\n    dispatch({ type: 'request-start' });\r\n\r\n    props.fillProjects({});\r\n\r\n    // Generate a set of all categories for optional prizes.\r\n    const generatedCategories = new Set<string>();\r\n    for (const row of state.csv) {\r\n      const categoriesString = row[state.csvHeaderIndicies['Desired Prizes']];\r\n      if (categoriesString.length > 0) {\r\n        const splitCategories = categoriesString.split(',');\r\n        for (const category of splitCategories) {\r\n          generatedCategories.add(category.trim());\r\n        }\r\n      }\r\n    }\r\n\r\n    // Check if the any of the generated categories is a preexisting nongenerated category.\r\n    const existingCategoriesArray = Object.values(props.categories.categories).reduce((array: string[], category: Category) => {\r\n      if (!category.generated) {\r\n        array.push(category.name);\r\n      }\r\n      return array;\r\n    }, []);\r\n    for (const generatedCategory of Array.from(generatedCategories)) {\r\n      for (const existingCategory of existingCategoriesArray) {\r\n        if (existingCategory === generatedCategory) {\r\n          generatedCategories.delete(generatedCategory);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Delete all generated categories.\r\n    const deleteGeneratedCategoriesResult = await Axios.delete('/api/categories/deleteGenerated');\r\n    if (!deleteGeneratedCategoriesResult) {\r\n      return;\r\n      // TODO throw error couldn't reset generated categories.\r\n    }\r\n\r\n    // Create new generated categories.\r\n    const categoriesToSend: Category[] = Array.from(generatedCategories).map((categoryName) => {\r\n      return {\r\n        name: categoryName,\r\n        isDefault: false,\r\n        generated: true,\r\n        description: `Sponsor prize generated when projects were uploaded. Do not remove. - ${categoryName}`,\r\n        company: '',\r\n        criteria: [],\r\n      };\r\n    });\r\n    const addGeneratedCategoriesResult = await Axios.post('/api/categories/update', {\r\n      categories: categoriesToSend,\r\n    });\r\n    if (!addGeneratedCategoriesResult.status) {\r\n      return;\r\n      // TODO throw error couldn't generate new categories.\r\n    }\r\n    const payload: CategoryState = addGeneratedCategoriesResult.data;\r\n    const onlyNonGenerated: CategoryState = Object.values(props.categories.categories).reduce((dict: CategoryState, currentCategory: Category) => {\r\n      if (!currentCategory.generated) {\r\n        dict[currentCategory.id!] = currentCategory;\r\n      }\r\n      return dict;\r\n    }, {});\r\n    console.log('nongenerated', onlyNonGenerated, payload);\r\n    const newCategories = {\r\n      ...onlyNonGenerated,\r\n      ...payload,\r\n    };\r\n    props.fillCategories({\r\n      ...onlyNonGenerated,\r\n      ...payload,\r\n    });\r\n\r\n    // Create category name to category mapping\r\n    const nameToCategoryMapping: NameToCategoryMapping = Object.values(newCategories).reduce((dict: NameToCategoryMapping, currentCategory: Category) => {\r\n      dict[currentCategory.name] = currentCategory;\r\n      return dict;\r\n    }, {});\r\n    const defaultCategoryIDs: number[] = Object.values(newCategories).reduce((array: number[], category: Category) => {\r\n      if (category.isDefault) {\r\n        array.push(category.id!);\r\n      }\r\n      return array;\r\n    }, []);\r\n\r\n    const projectsToSend: Project[] = [];\r\n    const tableGroups: TableGroup[] = Object.values(props.tableGroups);\r\n    const tableGroupNameMapping = tableGroups.map((tableGroup) => tableGroup.name);\r\n    const allocatedTables: { [table: string]: number } = {};\r\n\r\n    if (state.useSelfAssign) {\r\n      for (let i = 0; i < state.csv.length; i++) {\r\n        const csvRow = state.csv[i];\r\n        const tableNumber = csvRow[state.csvHeaderIndicies['Table Number']];\r\n        if (tableNumber) {\r\n          const tableParts = tableNumber.split(' ');\r\n          if (tableParts.length !== 3) {\r\n            throw new Error('Need 3 parts: expo, group, number');\r\n          }\r\n\r\n          if (allocatedTables[tableNumber]) {\r\n            throw new Error('Duplicate table');\r\n          }\r\n\r\n          if (!tableGroupNameMapping.includes(tableParts[1])) {\r\n            throw new Error('Invalid table group name');\r\n          }\r\n\r\n          allocatedTables[tableNumber] = i;\r\n        }\r\n      }\r\n    }\r\n\r\n    const allocatedRows = Object.values(allocatedTables);\r\n    let csvRowNumber = 0;\r\n\r\n    // Pass 2 allocate rest.\r\n    for (let expoNumber = 1; expoNumber <= state.inputNumberExpos; expoNumber++) {\r\n      for (const tableGroup of tableGroups) {\r\n        for (let tableNumber = 1; tableNumber <= state.inputTableGroups[tableGroup.id!]; tableNumber++) {\r\n          const finalTableGroupName = `${expoNumber} ${tableGroup.name} ${tableNumber}`;\r\n          if (allocatedTables[finalTableGroupName] === undefined) {\r\n            while (allocatedRows.includes(csvRowNumber)) {\r\n              csvRowNumber++;\r\n            }\r\n\r\n            let csvRow = state.csv[csvRowNumber];\r\n            // console.log(csvRow);\r\n            if (csvRow) {\r\n              allocatedTables[finalTableGroupName] = csvRowNumber;\r\n              allocatedRows.push(csvRowNumber);\r\n              csvRowNumber++;\r\n            }\r\n          } else {\r\n            console.log('thegame', finalTableGroupName);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(allocatedTables, allocatedRows.sort((a: number, b: number) => a - b));\r\n    const tableGroupNameToObject: { [name: string]: TableGroup } = Object.values(props.tableGroups).reduce((dict, tableGroup: TableGroup) => {\r\n      dict[tableGroup.name] = tableGroup;\r\n      return dict;\r\n    }, {});\r\n\r\n    for (const tableKey of Object.keys(allocatedTables)) {\r\n      const csvRow = state.csv[allocatedTables[tableKey]];\r\n      const parts = tableKey.split(' ');\r\n      const devpostDesiredCategories: number[] = csvRow[state.csvHeaderIndicies['Desired Prizes']].split(',').reduce((array: number[], categoryName: string) => {\r\n        categoryName = categoryName.trim();\r\n        if (categoryName) {\r\n          array.push(nameToCategoryMapping[categoryName.trim()].id!);\r\n        }\r\n        return array;\r\n      }, []);\r\n      projectsToSend.push({\r\n        name: csvRow[state.csvHeaderIndicies['Submission Title']],\r\n        devpostURL: csvRow[state.csvHeaderIndicies['Submission Url']],\r\n        expoNumber: parseInt(parts[0]),\r\n        tableGroupID: tableGroupNameToObject[parts[1]].id!,\r\n        tableNumber: parseInt(parts[2]),\r\n        categoryIDs: devpostDesiredCategories.concat(defaultCategoryIDs),\r\n        tags: [],\r\n      });\r\n    }\r\n\r\n    // console.log(projectsToSend);\r\n\r\n    const batchUploadResult = await Axios.post('/api/projects/upload', {\r\n      projects: projectsToSend,\r\n    });\r\n    if (batchUploadResult.status) {\r\n      const data = batchUploadResult.data;\r\n      // console.log(data);\r\n      props.fillProjects(data);\r\n      props.clearBallots();\r\n      props.closeModal();\r\n      dispatch({ type: 'request-finish' });\r\n    }\r\n  };\r\n\r\n  const getFileUploadForm = () => {\r\n    const throwError = (message: string) => {\r\n      dispatch({ type: 'update-csv', csv: [], csvHeaderIndicies: {}});\r\n      // console.log(message);\r\n      // TODO throw real error.\r\n      return;\r\n    };\r\n\r\n    const parseResult = (result: Papa.ParseResult) => {\r\n      const csvData: string[][] = result.data;\r\n      if (csvData.length < 1) {\r\n        return throwError('Empty');\r\n      }\r\n      if (csvData.length === 1) {\r\n        return throwError('No content');\r\n      }\r\n      const csvHeaders = csvData[0];\r\n      const csvHeaderIndicies: {[header: string]: number} = {};\r\n      for (const header of requiredHeaders) {\r\n        const headerIndex = csvHeaders.indexOf(header);\r\n        if (headerIndex === -1) {\r\n          return throwError('Required headers missing');\r\n        }\r\n        csvHeaderIndicies[header] = headerIndex;\r\n      }\r\n      csvHeaderIndicies['Table Number'] = csvHeaders.indexOf('Table Number');\r\n      csvData.splice(0, 1)\r\n      dispatch({ type: 'update-csv', csv: csvData, csvHeaderIndicies });\r\n    };\r\n\r\n    const handleFileUpload = (event: any) => {\r\n      const target = event.target;\r\n      const fileList: FileList = target.files;\r\n      if (fileList.length !== 1) {\r\n        return throwError('No file or too many files.');\r\n      }\r\n      const file = fileList[0];\r\n      if (!file.name.endsWith('.csv')) {\r\n        return throwError('Not CSV');\r\n      }\r\n      Papa.parse(file, {\r\n        complete: parseResult,\r\n        skipEmptyLines: true,\r\n      });\r\n    };\r\n\r\n    return (\r\n      <Form.Group>\r\n        <Form.Label>Devpost CSV</Form.Label>\r\n        <Form.Control\r\n          disabled={state.requesting}\r\n          onChange={handleFileUpload}\r\n          type='file' />\r\n        <Form.Text className=\"text-muted\">\r\n          Please download the CSV containing all projects from Devpost and upload it here.\r\n        </Form.Text>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  const getPropertiesForm = () => {\r\n    if (state.csv.length > 0) {\r\n      return (\r\n        <div>\r\n          <Form.Group>\r\n            <Form.Label>Number of Expos</Form.Label>\r\n            <Form.Control\r\n              disabled={state.requesting}\r\n              name='numberExpos'\r\n              onChange={(event: any) => {\r\n                dispatch({ type: 'adjust-totals', numberExpos: event.target.value})\r\n              }}\r\n              type='number'\r\n              value={\"\" + state.inputNumberExpos} />\r\n            <Form.Text className=\"text-muted\">\r\n              How many expos will there be at this event?\r\n            </Form.Text>\r\n          </Form.Group>\r\n          {Object.values(props.tableGroups).map((tableGroup: TableGroup) => {\r\n            return (\r\n              <Form.Group key={tableGroup.id}>\r\n                <Form.Label># <strong>{tableGroup.name}</strong> Tables</Form.Label>\r\n                <Form.Control\r\n                  disabled={state.requesting}\r\n                  onChange={(event: any) => {\r\n                    dispatch({ type: 'adjust-counts', tableGroups: {\r\n                      [tableGroup.id!]: +event.target.value\r\n                    }});\r\n                  }}\r\n                  type='number'\r\n                  value={\"\" + state.inputTableGroups[tableGroup.id!]} />\r\n                  <Form.Text className=\"text-muted\">\r\n                    How many tables are available in the {tableGroup.name} group in each expo?\r\n                  </Form.Text>\r\n              </Form.Group>\r\n            )\r\n          })}\r\n          <p>Projects Accounted For: {state.totalProjectsAccountedFor} / {state.totalProjectsToAccountFor}</p>\r\n          <Form.Group>\r\n            <Form.Check\r\n              disabled={state.requesting}\r\n              onChange={(event: any) => dispatch({\r\n                type: 'use-self-assign',\r\n                enabled: event.target.value === 'on',\r\n              })}\r\n              type=\"checkbox\"\r\n              label=\"Use Table Self-Assign\" />\r\n            <Form.Text className=\"text-muted\">\r\n              Check if you want to use the \"Table Number\" column in the Devpost submission.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch({ type: 'update-csv', csv: [], csvHeaderIndicies: {}});\r\n    props.closeModal();\r\n  }\r\n\r\n\treturn (\r\n\t\t<Modal show={props.modalOpen} onHide={closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Upload Projects</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          {getFileUploadForm()}\r\n          {getPropertiesForm()}\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={closeModal}\r\n          variant=\"secondary\">\r\n          Close & Discard\r\n        </Button>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={handleUpload}\r\n          variant=\"primary\">\r\n          Upload Projects\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\t);\r\n};\r\n\r\nconst PageAdminProjectsUploadModal = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PageAdminProjectsUploadModalComponent);\r\n\r\nexport default PageAdminProjectsUploadModal;\r\n\r\n","import React from 'react';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\n\r\nimport { TableGroup } from '../../types/Project';\r\n\r\ninterface PageAdminProjectsManageTableGroupsModalGroupRowProps {\r\n  tableGroup: TableGroup;\r\n  requesting: boolean;\r\n  updateTableGroup: (tableGroup: TableGroup) => void;\r\n  deleteTableGroup: (tableGroupID: number) => void;\r\n}\r\n\r\nconst PageAdminProjectsManageTableGroupsModalGroupRow: React.FC<PageAdminProjectsManageTableGroupsModalGroupRowProps> = (props) => {\r\n  const handleChange = (event: any) => {\r\n    const target = event.target;\r\n    props.updateTableGroup({\r\n      ...props.tableGroup,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n\treturn (\r\n\t\t<div style={{ marginBottom: 12 }}>\r\n      <hr />\r\n      <Form.Row>\r\n        <Form.Group as={Col} md=\"7\">\r\n          <Form.Label>Table Group Name</Form.Label>\r\n          <Form.Control\r\n            disabled={props.requesting}\r\n            name='name'\r\n            onChange={handleChange}\r\n            value={props.tableGroup.name}\r\n            placeholder='Name' />\r\n        </Form.Group>\r\n        <Form.Group as={Col} md=\"2\">\r\n          <Form.Label>Shortcode</Form.Label>\r\n          <Form.Control\r\n            disabled={props.requesting}\r\n            name='shortcode'\r\n            onChange={handleChange}\r\n            value={props.tableGroup.shortcode}\r\n            placeholder='Code' />\r\n        </Form.Group>\r\n        <Form.Group as={Col} md=\"3\">\r\n          <Form.Label>Color</Form.Label>\r\n          <Form.Control\r\n            disabled={props.requesting}\r\n            name='color'\r\n            onChange={handleChange}\r\n            placeholder='#000000'\r\n\r\n            style={{\r\n              backgroundColor: /^#[0-9A-F]{6}$/i.test(props.tableGroup.color) ? props.tableGroup.color : '',\r\n              color: /^#[0-9A-F]{6}$/i.test(props.tableGroup.color) ? '#FFFFFF' : '#000000',\r\n            }}\r\n            value={props.tableGroup.color} />\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Button\r\n        disabled={props.requesting}\r\n        size='sm'\r\n        variant='outline-danger'\r\n        onClick={() => props.deleteTableGroup(props.tableGroup.id!)}>\r\n        Delete\r\n      </Button>\r\n    </div>\r\n\t);\r\n};\r\n\r\nexport default PageAdminProjectsManageTableGroupsModalGroupRow;\r\n\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { TableGroupState, TableGroup, EMPTY_TABLE_GROUP } from '../../types/Project';\r\nimport { AppState } from '../../state/Store';\r\n\r\nimport PageAdminProjectsManageTableGroupsModalGroupRow from './PageAdminProjectsManageTableGroupsModalGroupRow';\r\nimport { fillTableGroups } from '../../state/TableGroup';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    tableGroups: state.tableGroups,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfillTableGroups: (tableGroups: TableGroupState) => {\r\n\t\t\tdispatch(fillTableGroups(tableGroups));\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface PageAdminProjectsManageTableGroupsModalProps {\r\n  modalOpen: boolean;\r\n  tableGroups: TableGroupState;\r\n  closeModal: () => void;\r\n\tfillTableGroups: (tableGroups: TableGroupState) => void;\r\n}\r\n\r\ntype State = {\r\n  currentNewID: number;\r\n  tableGroups: TableGroupState;\r\n  requesting: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'increase-new-id' }\r\n  | { type: 'update-table-group', tableGroups: TableGroupState }\r\n\t| { type: 'request-start'}\r\n  | { type: 'request-finish'};\r\n\r\nconst PageAdminProjectsManageTableGroupsModalComponent: React.FC<PageAdminProjectsManageTableGroupsModalProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n      case 'increase-new-id':\r\n        return { ...state, currentNewID: state.currentNewID - 1 }\r\n      case 'update-table-group':\r\n        return { ...state, tableGroups: action.tableGroups };\r\n\t\t\tcase 'request-start':\r\n\t\t\t\treturn { ...state, requesting: true };\r\n\t\t\tcase 'request-finish':\r\n        return { ...state, requesting: false };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n    currentNewID: -1,\r\n    tableGroups: {},\r\n    requesting: false,\r\n  }, undefined);\r\n\r\n  const tableGroupsEffect = props.tableGroups;\r\n\r\n  React.useEffect(() => {\r\n    dispatch({ type: 'update-table-group', tableGroups: props.tableGroups });\r\n  }, [tableGroupsEffect]);\r\n\r\n  const handleSaveChanges = async () => {\r\n    dispatch({ type: 'request-start' });\r\n    const result = await Axios.post('/api/tableGroups/update', {\r\n      tableGroups: Object.values(state.tableGroups),\r\n    });\r\n    if (result.status) {\r\n      const data = result.data;\r\n      props.fillTableGroups(data);\r\n      props.closeModal();\r\n      dispatch({ type: 'request-finish' });\r\n    } else {\r\n      // TODO add error checking.\r\n    }\r\n  };\r\n\r\n  const getForm = () => {\r\n    const updateTableGroup = (tableGroup: TableGroup) => {\r\n      dispatch({\r\n        type: 'update-table-group',\r\n        tableGroups: {\r\n          ...state.tableGroups,\r\n          [tableGroup.id!]: tableGroup,\r\n        },\r\n      });\r\n    };\r\n    const deleteTableGroup = (tableGroupID: number) => {\r\n      let {[tableGroupID]: omit, ...rest} = state.tableGroups;\r\n      dispatch({\r\n        type: 'update-table-group',\r\n        tableGroups: rest,\r\n      });\r\n    };\r\n\r\n    if (Object.values(state.tableGroups).length > 0) {\r\n      return Object.values(state.tableGroups).map((tableGroup: TableGroup) => {\r\n        return <PageAdminProjectsManageTableGroupsModalGroupRow\r\n          key={tableGroup.id}\r\n          tableGroup={tableGroup}\r\n          requesting={state.requesting}\r\n          updateTableGroup={updateTableGroup}\r\n          deleteTableGroup={deleteTableGroup} />\r\n      });\r\n    }\r\n    return <div>No Table Groups</div>;\r\n  };\r\n\r\n  const handleNewTableGroup = () => {\r\n    const newGroup = {\r\n      ...EMPTY_TABLE_GROUP,\r\n      id: state.currentNewID,\r\n    };\r\n    dispatch({ type: 'increase-new-id' });\r\n    dispatch({\r\n      type: 'update-table-group',\r\n      tableGroups: {\r\n        ...state.tableGroups,\r\n        [newGroup.id]: newGroup,\r\n      }\r\n    });\r\n  };\r\n\r\n\treturn (\r\n\t\t<Modal show={props.modalOpen} onHide={props.closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Manage Table Groups</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>Table groups are how your expo will be organized. Table groups can be a color, some fancy name, or a room number. You must have at least one table group in order to upload projects. </p>\r\n        <Form>\r\n          {getForm()}\r\n        </Form>\r\n        <Button\r\n          disabled={state.requesting}\r\n          variant='outline-primary'\r\n          onClick={handleNewTableGroup}>\r\n          New Table Group\r\n        </Button>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={props.closeModal}\r\n          variant=\"secondary\">\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={handleSaveChanges}\r\n          variant=\"primary\">\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\t);\r\n};\r\n\r\nconst PageAdminProjectsManageTableGroupsModal = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PageAdminProjectsManageTableGroupsModalComponent);\r\n\r\nexport default PageAdminProjectsManageTableGroupsModal;\r\n\r\n","import React, { ReactElement } from 'react';\r\nimport { InputGroup, Card, FormControl, Accordion } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PageAdminProjectsEpicenterProjectDot from './PageAdminProjectsEpicenterProjectDot';\r\nimport PageAdminProjectsEpicenterEmptyDot from './PageAdminProjectsEpicenterEmptyDot';\r\nimport Project, { ProjectState, TableGroupState, ProjectWithHealth } from '../../types/Project';\r\nimport User from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport Ballot, { BallotState, BallotStatus } from '../../types/Ballot';\r\nimport Category, { CategoryState, CategoryCriteriaState } from '../../types/Category';\r\nimport { queueProjectEmit, subscribeQueuedProject, subscribeQueueProject, queueProject, subscribeGetProject, subscribeScoreProject, unsubscribeAll, subscribeSkipProject, subscribeMissingProject, subscribeBusyProject } from '../../state/Ballot';\r\nimport { requestStart, requestFinish } from '../../state/Request';\r\nimport { UserState } from '../../types/User';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n    account: state.account,\r\n    ballots: state.ballots,\r\n    categories: state.categories,\r\n    tableGroups: state.tableGroups,\r\n    projects: state.projects,\r\n    users: state.users,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n    queueProject: (projectID: number, userID: number) => {\r\n      dispatch(queueProject(projectID, userID));\r\n    },\r\n    queueProjectEmit: (projectID: number, userID: number) => {\r\n      dispatch(queueProjectEmit(projectID, userID));\r\n    },\r\n    subscribeQueueProject: () => {\r\n      dispatch(subscribeQueueProject());\r\n    },\r\n    subscribeQueuedProject: () => {\r\n      dispatch(subscribeQueuedProject());\r\n    },\r\n    subscribeGotProject: () => {\r\n      dispatch(subscribeGetProject());\r\n    },\r\n    subscribeScoreProject: () => {\r\n      dispatch(subscribeScoreProject());\r\n    },\r\n    subscribeSkipProject: () => {\r\n      dispatch(subscribeSkipProject());\r\n    },\r\n    subscribeMissingProject: () => {\r\n      dispatch(subscribeMissingProject());\r\n    },\r\n    subscribeBusyProject: () => {\r\n      dispatch(subscribeBusyProject());\r\n    },\r\n    unsubscribeAll: () => {\r\n      dispatch(unsubscribeAll());\r\n    },\r\n    requestFinish: () => {\r\n      dispatch(requestFinish());\r\n    },\r\n    requestStart: () => {\r\n      dispatch(requestStart());\r\n    },\r\n\t};\r\n};\r\n\r\ninterface PageAdminProjectsEpicenterProps {\r\n  account: User;\r\n  ballots: BallotState;\r\n  categories: CategoryCriteriaState;\r\n  projects: ProjectState;\r\n  tableGroups: TableGroupState;\r\n  users: UserState;\r\n  queueProject: (projectID: number, userID: number) => void;\r\n  queueProjectEmit: (projectID: number, userID: number) => void;\r\n  subscribeQueueProject: () => void;\r\n  subscribeQueuedProject: () => void;\r\n  subscribeGotProject: () => void;\r\n  subscribeScoreProject: () => void;\r\n  subscribeMissingProject: () => void;\r\n  subscribeBusyProject: () => void;\r\n  subscribeSkipProject: () => void;\r\n  unsubscribeAll: () => void;\r\n  requestFinish: () => void;\r\n  requestStart: () => void;\r\n}\r\n\r\nenum SortType {\r\n  Location,\r\n  AverageScore,\r\n  ProjectHealth,\r\n  TimesJudged,\r\n}\r\n\r\ntype State = {\r\n  selectedProject: string;\r\n  judgeSelectedProject: string;\r\n  currentExpo: number;\r\n  powerGoodness: number;\r\n  powerVariance: number;\r\n  powerSkip: number;\r\n  projects: { [projectID: number]: ProjectWithHealth };\r\n  sortBy: SortType;\r\n  filterBy: number | undefined;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'change-current-expo', currentExpo: number }\r\n  | { type: 'change-selected-project', projectID: string }\r\n  | { type: 'change-judge-selected-project', projectID: string }\r\n  | { type: 'change-parameters', goodness: number, variance: number, skip: number }\r\n  | { type: 'change-sort-by', sortBy: SortType }\r\n  | { type: 'change-filter-by', filterBy: number | undefined }\r\n  | { type: 'update-projects', projects: { [projectID: number]: ProjectWithHealth }};\r\n\r\nconst PageAdminProjectsEpicenterComponent: React.FC<PageAdminProjectsEpicenterProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n      case 'change-current-expo':\r\n        return { ...state, currentExpo: action.currentExpo > 0 ? action.currentExpo : 1 };\r\n      case 'change-selected-project':\r\n        return { ...state, selectedProject: action.projectID, judgeSelectedProject: '' };\r\n      case 'change-judge-selected-project':\r\n        return { ...state, selectedProject: '', judgeSelectedProject: action.projectID };\r\n      case 'change-sort-by':\r\n        return { ...state, sortBy: action.sortBy };\r\n      case 'change-filter-by':\r\n        return { ...state, filterBy: action.filterBy };\r\n      case 'update-projects':\r\n        return { ...state, projects: action.projects };\r\n      case 'change-parameters':\r\n        return {\r\n          ...state,\r\n          powerGoodness: action.goodness > 0 ? action.goodness : 0,\r\n          powerVariance: action.variance > 0 ? action.variance : 0,\r\n          powerSkip: action.skip > 0 ? action.skip : 0,\r\n        };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n    currentExpo: 1,\r\n    selectedProject: '',\r\n    judgeSelectedProject: '',\r\n    powerGoodness: 0.5,\r\n    powerSkip: 0.5,\r\n    powerVariance: 0.5,\r\n    projects: {},\r\n    sortBy: SortType.Location,\r\n    filterBy: undefined,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const projectsWithHealth: { [projectID: number]: ProjectWithHealth } = {};\r\n    for (const projectID of Object.keys(props.projects)) {\r\n      projectsWithHealth[+projectID] = {\r\n        ...props.projects[+projectID],\r\n        health: calculateProjectHealth(props.projects[+projectID]),\r\n      }\r\n    }\r\n    dispatch({ type: 'update-projects', projects: projectsWithHealth });\r\n  }, [props.projects, state.powerGoodness, state.powerSkip, state.powerVariance, props.ballots]);\r\n\r\n  const calculateProjectHealth = (project: Project) => {\r\n    let totalHealth = 0;\r\n    if (props.ballots.dProjectScores[project.id!] && Object.values(props.ballots.dProjectScores[project.id!]).length > 0) {\r\n      const categoryScoreArrays: { [userID: number]: number } = {};\r\n      const allUserBallots = Object.values(props.ballots.dProjectScores[project.id!]);\r\n      let defaultCategoryID = Object.values(props.categories.categories).filter((category: Category) => {\r\n        return category.isDefault\r\n      })[0].id;\r\n      console.log('default', defaultCategoryID);\r\n      for (const userBallots of allUserBallots) {\r\n        for (const ballot of userBallots) {\r\n          if (props.categories.criteria[ballot.criteriaID].categoryID === defaultCategoryID) {\r\n            if (!categoryScoreArrays[ballot.userID]) {\r\n              categoryScoreArrays[ballot.userID] = 0;\r\n            }\r\n\r\n            categoryScoreArrays[ballot.userID] += ballot.score;\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log('calcProjectHe', categoryScoreArrays);\r\n      totalHealth += Object.values(categoryScoreArrays).length;\r\n    }\r\n\r\n    for (const judgeQueue of Object.values(props.ballots.dJudgeQueues)) {\r\n      if (judgeQueue.queuedProject && judgeQueue.queuedProject.id === project.id!) {\r\n        totalHealth++;\r\n      }\r\n\r\n      if (judgeQueue.activeProjectID === project.id!) {\r\n        totalHealth++;\r\n      }\r\n\r\n      if (judgeQueue.otherProjectIDs.includes(project.id!)) {\r\n        totalHealth++;\r\n      }\r\n    }\r\n\r\n    return totalHealth;\r\n  }\r\n\r\n  const autoAssign = () => {\r\n    const userIDs = Object.keys(props.users).map((value) => parseInt(value)).reduce((judgingUsers: number[], userID) => {\r\n      if (props.users[userID].isJudging!) {\r\n        if (!props.ballots.dJudgeQueues[userID]\r\n          || props.ballots.dJudgeQueues[userID].queuedProject === undefined\r\n          || props.ballots.dJudgeQueues[userID].queuedProject.id === 0) {\r\n            judgingUsers.push(userID);\r\n        }\r\n      }\r\n      return judgingUsers;\r\n    }, []);\r\n    console.log(userIDs);\r\n    if (userIDs.length > 0) {\r\n      const randomUserID = userIDs[Math.floor(Math.random() * userIDs.length)];\r\n      console.log(randomUserID);\r\n      const canAssignProjects = Object.values(state.projects).filter((project: Project) => {\r\n        if (project.expoNumber !== state.currentExpo) {\r\n          return false;\r\n        }\r\n\r\n        if (props.ballots.dJudgeQueues[randomUserID]) {\r\n          if (project.id! === props.ballots.dJudgeQueues[randomUserID].activeProjectID\r\n            || props.ballots.dJudgeQueues[randomUserID].otherProjectIDs.includes(project.id!)) {\r\n            return false;\r\n          }\r\n        }\r\n        const projectCompanyList = project.categoryIDs.map((categoryID: number) => {\r\n          return props.categories.categories[categoryID].company;\r\n        });\r\n        return projectCompanyList.includes(props.users[randomUserID].company!);\r\n      }).sort((a: ProjectWithHealth, b: ProjectWithHealth) => {\r\n        return a.health - b.health;\r\n      });\r\n      console.log(canAssignProjects);\r\n\r\n      const lowestHealth = canAssignProjects[0].health;\r\n      const sameLowestHealthProjects = canAssignProjects.filter((project: ProjectWithHealth) => {\r\n        return project.health === lowestHealth;\r\n      });\r\n\r\n      queueProject(sameLowestHealthProjects[Math.floor(Math.random() * sameLowestHealthProjects.length)].id!, randomUserID);\r\n    }\r\n  };\r\n\r\n  document.onkeypress = (event: any) => {\r\n    if (event.key === ' ') {\r\n      event.preventDefault();\r\n      autoAssign();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const onClick = (event: any) => {\r\n      console.log(event.target.className);\r\n      if (event.target.className !== 'dot' && !event.target.className.includes('judge')) {\r\n        dismissPopover();\r\n      }\r\n    };\r\n    const keydown = (event: any) => {\r\n      if (event.key === 'Escape') {\r\n        dismissPopover();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', onClick);\r\n    document.addEventListener('keydown', keydown);\r\n    props.subscribeQueueProject();\r\n    props.subscribeQueuedProject();\r\n    props.subscribeGotProject();\r\n    props.subscribeScoreProject();\r\n    props.subscribeBusyProject();\r\n    props.subscribeMissingProject();\r\n    props.subscribeSkipProject();\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', onClick);\r\n      document.removeEventListener('keydown', keydown);\r\n      props.unsubscribeAll();\r\n    };\r\n  }, []);\r\n\r\n  const queueProject = (projectID: number, userID: number) => {\r\n    props.queueProject(projectID, userID);\r\n    props.queueProjectEmit(projectID, userID);\r\n  };\r\n\r\n  const dismissPopover = () => {\r\n    dispatch({\r\n      type: 'change-selected-project',\r\n      projectID: '',\r\n    });\r\n  };\r\n\r\n  const _getProjects = () => {\r\n    const _handleSelectedProjectChange = async (projectID: string) => {\r\n      if (state.selectedProject === projectID) {\r\n        dispatch({ type: 'change-selected-project', projectID: '' });\r\n      } else {\r\n        dispatch({ type: 'change-selected-project', projectID });\r\n      }\r\n    };\r\n\r\n    if (Object.values(props.tableGroups).length > 0 && Object.values(state.projects).length > 0) {\r\n      // TODO sort projects by health, instead of just score.\r\n      const projectCircles = Object.values(state.projects)\r\n        .filter((project: ProjectWithHealth) => {\r\n          return state.filterBy ? project.categoryIDs.includes(state.filterBy) : true;\r\n        })\r\n        .sort((a: ProjectWithHealth, b: ProjectWithHealth) => {\r\n          switch (state.sortBy) {\r\n            case SortType.AverageScore:\r\n              if (!props.ballots.dProjectScores[a.id!] && !props.ballots.dProjectScores[b.id!]) {\r\n                return 0;\r\n              }\r\n              if (!props.ballots.dProjectScores[b.id!]) {\r\n                return -1;\r\n              }\r\n              if (!props.ballots.dProjectScores[a.id!]) {\r\n                return 1;\r\n              }\r\n\r\n              const categoryScoreArrays: { [projectID: number]: {[userID: number]: number} } = {\r\n                [a.id!]: {},\r\n                [b.id!]: {},\r\n              };\r\n              const defaultCategoryID = Object.values(props.categories.categories).filter((category: Category) => {\r\n                return state.filterBy ? category.id! === state.filterBy : category.isDefault;\r\n              })[0].id;\r\n              const allUserBallots = Object.values(props.ballots.dProjectScores[a.id!]).concat(Object.values(props.ballots.dProjectScores[b.id!]));\r\n              for (const userBallots of allUserBallots) {\r\n                for (const ballot of userBallots) {\r\n                  if (ballot.status === BallotStatus.Submitted) {\r\n                    if (props.categories.criteria[ballot.criteriaID].categoryID === defaultCategoryID) {\r\n                      if (!categoryScoreArrays[ballot.projectID][ballot.userID]) {\r\n                        categoryScoreArrays[ballot.projectID][ballot.userID] = 0;\r\n                      }\r\n\r\n                      categoryScoreArrays[ballot.projectID][ballot.userID] += ballot.score;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n\r\n              const aCatScoreArrays = Object.values(categoryScoreArrays[a.id!]);\r\n              const bCatScoreArrays = Object.values(categoryScoreArrays[b.id!]);\r\n              console.log(aCatScoreArrays, bCatScoreArrays);\r\n\r\n              const aScore = aCatScoreArrays.reduce((total, score) => total + score, 0) / (aCatScoreArrays.length > 0 ? aCatScoreArrays.length : 1);\r\n              const bScore = bCatScoreArrays.reduce((total, score) => total + score, 0) / (bCatScoreArrays.length > 0 ? bCatScoreArrays.length : 1);\r\n              // console.log(Object.values(categoryScoreArrays[a.id!]).length);\r\n              console.log(aScore, bScore);\r\n              return aScore < bScore ? 1 : -1;\r\n            case SortType.ProjectHealth:\r\n              return a.health - b.health;\r\n            default:\r\n              return ((a.tableGroupID * 1000) + a.tableNumber) - ((b.tableGroupID * 1000) + b.tableNumber);\r\n          }\r\n        })\r\n        .reduce((output: ReactElement[], project: ProjectWithHealth) => {\r\n        const tableGroup = props.tableGroups[project.tableGroupID];\r\n        if (project.expoNumber === state.currentExpo) {\r\n          output.push(\r\n            <PageAdminProjectsEpicenterProjectDot\r\n              key={project.id!}\r\n              dimmed={false}\r\n              loading={false}\r\n              userID={0}\r\n              project={project}\r\n              tableGroup={tableGroup}\r\n              selectedProject={state.selectedProject + ' 0'}\r\n              handleSelectedProjectChange={_handleSelectedProjectChange}\r\n             />\r\n          );\r\n        }\r\n        return output;\r\n      }, []);\r\n\r\n      if (projectCircles.length === 0) {\r\n        return <p>No projects in this expo.</p>;\r\n      }\r\n\r\n      return projectCircles;\r\n    }\r\n  };\r\n\r\n  const _getJudges = () => {\r\n    const _handleJudgeSelection = (userID: number) => {\r\n      console.log(state.selectedProject);\r\n      if (state.selectedProject.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      if (\r\n        props.ballots.dJudgeQueues[userID]\r\n        && props.ballots.dJudgeQueues[userID].activeProjectID === +state.selectedProject\r\n        || props.ballots.dJudgeQueues[userID]\r\n        && props.ballots.dJudgeQueues[userID].otherProjectIDs.includes(+state.selectedProject)\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      if (props.projects[+state.selectedProject].categoryIDs.map((categoryID: number) => {\r\n        return props.categories.categories[categoryID].company === props.users[userID].company!;\r\n      }).includes(true)) {\r\n        queueProject(+state.selectedProject, userID);\r\n        dismissPopover();\r\n      } else {\r\n        // TOOD error\r\n      }\r\n    };\r\n\r\n    const _handleJudgeSelectedProject = async (projectID: string) => {\r\n      if (state.judgeSelectedProject === projectID) {\r\n        dispatch({ type: 'change-judge-selected-project', projectID: '' });\r\n      } else {\r\n        dispatch({ type: 'change-judge-selected-project', projectID });\r\n      }\r\n    };\r\n\r\n    const _getDerivedProjects = (userID: number) => {\r\n      const toReturn = [];\r\n      if (props.ballots.dJudgeQueues[userID]) {\r\n\r\n        const queuedProject = props.ballots.dJudgeQueues[userID].queuedProject;\r\n        if (queuedProject && queuedProject.id !== 0 && props.projects[queuedProject.id]) {\r\n          toReturn.push(\r\n            <PageAdminProjectsEpicenterProjectDot\r\n              key={queuedProject.id}\r\n              dimmed={false}\r\n              loading={queuedProject.pending}\r\n              tableGroup={props.tableGroups[props.projects[queuedProject.id].tableGroupID]}\r\n              project={state.projects[queuedProject.id]}\r\n              userID={userID}\r\n              selectedProject={state.judgeSelectedProject}\r\n              onContextMenu={(event) => {\r\n                console.log(event.type);\r\n                event.preventDefault();\r\n                // TODO dequeue project here.\r\n                return false;\r\n              }}\r\n              handleSelectedProjectChange={() => _handleJudgeSelectedProject(queuedProject.id + ' ' + userID)}\r\n            />\r\n          );\r\n        } else {\r\n          toReturn.push(\r\n            <PageAdminProjectsEpicenterEmptyDot solid key={-1} />\r\n          )\r\n        }\r\n\r\n        const activeProjectID = props.ballots.dJudgeQueues[userID].activeProjectID;\r\n        if (activeProjectID && props.projects[activeProjectID]) {\r\n          toReturn.push(\r\n            <PageAdminProjectsEpicenterProjectDot\r\n              key={activeProjectID}\r\n              dimmed={false}\r\n              loading={false}\r\n              tableGroup={props.tableGroups[props.projects[activeProjectID].tableGroupID]}\r\n              project={state.projects[activeProjectID]}\r\n              selectedProject={state.judgeSelectedProject}\r\n              userID={userID}\r\n              handleSelectedProjectChange={() => _handleJudgeSelectedProject(activeProjectID + ' ' + userID)}\r\n            />\r\n          );\r\n        } else {\r\n          toReturn.push(\r\n            <PageAdminProjectsEpicenterEmptyDot solid={false} key={-2} />\r\n          )\r\n        }\r\n\r\n        const otherProjectIDs = props.ballots.dJudgeQueues[userID].otherProjectIDs;\r\n        if (otherProjectIDs) {\r\n          const other = [];\r\n          for (const projectID of otherProjectIDs) {\r\n            if (props.projects[projectID]) {\r\n              other.push(\r\n                <PageAdminProjectsEpicenterProjectDot\r\n                  key={'' + projectID + ' ' + userID}\r\n                  dimmed={true}\r\n                  loading={false}\r\n                  tableGroup={props.tableGroups[props.projects[projectID].tableGroupID]}\r\n                  project={state.projects[projectID]}\r\n                  userID={userID}\r\n                  selectedProject={state.judgeSelectedProject}\r\n                  handleSelectedProjectChange={() => _handleJudgeSelectedProject(projectID + ' ' + userID)}\r\n                />\r\n              );\r\n            }\r\n          }\r\n          toReturn.push(other.reverse());\r\n        }\r\n      } else {\r\n        toReturn.push([\r\n          <PageAdminProjectsEpicenterEmptyDot solid key={-1} />,\r\n          <PageAdminProjectsEpicenterEmptyDot solid={false} key={-2} />,\r\n        ]);\r\n      }\r\n\r\n      return toReturn;\r\n    };\r\n\r\n    return Object.values(props.users).sort((a: User, b: User) => {\r\n      return a.company! < b.company! ? -1 : 1;\r\n    }).reduce((toShow: ReactElement[], user: User) => {\r\n      if (user.isJudging) {\r\n        toShow.push(\r\n          <Card\r\n            key={user.id}\r\n            className={'judge'}\r\n            style={{\r\n              width: 220,\r\n              margin: 5,\r\n              cursor: 'pointer',\r\n            }}\r\n            onClick={() => _handleJudgeSelection(user.id!)}>\r\n            <Card.Body className={'judge'}>\r\n              <Card.Title className={'judge'}>{user.name}</Card.Title>\r\n              <Card.Subtitle className=\"mb-2 text-muted\">\r\n                {user.company}\r\n              </Card.Subtitle>\r\n              <div style={{ display: 'flex', flexFlow: 'wrap' }}>\r\n                {_getDerivedProjects(user.id!)}\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n      }\r\n      return toShow;\r\n    }, []);\r\n  };\r\n\r\n\treturn (\r\n    <>\r\n      <Accordion>\r\n        <Card>\r\n          <Accordion.Toggle as={Card.Header} eventKey='0'>\r\n            Filter/Sort\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey='0'>\r\n            <Card.Body>\r\n              <h2>Sort</h2>\r\n              <Button size='sm' onClick={() => dispatch({ type: 'change-sort-by', sortBy: SortType.Location})}>By Location</Button>\r\n              <Button size='sm' onClick={() => dispatch({ type: 'change-sort-by', sortBy: SortType.AverageScore})}>By Average Score</Button>\r\n              <Button size='sm' onClick={() => dispatch({ type: 'change-sort-by', sortBy: SortType.ProjectHealth})}>By Project Health</Button>\r\n              <Button size='sm' onClick={() => dispatch({ type: 'change-sort-by', sortBy: SortType.TimesJudged})}>By Times Judged (Includes Pending/Assigned)</Button>\r\n              <h2>Filter</h2>\r\n              {Object.values(props.categories.categories).reduce((buttons: ReactElement[], category: Category) => {\r\n                if (!category.generated) {\r\n                  buttons.push(\r\n                    <Button\r\n                      key={category.id}\r\n                      size='sm'\r\n                      onClick={() => dispatch({\r\n                        type: 'change-filter-by',\r\n                        filterBy: category.id,\r\n                      })}>By {category.name}</Button>\r\n                  );\r\n                }\r\n                return buttons;\r\n              }, [])}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Accordion.Toggle as={Card.Header} eventKey='1'>\r\n            Expo {state.currentExpo}\r\n             {/* | Goodness {state.powerGoodness} | Variance {state.powerVariance} | Skip {state.powerSkip} */}\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey='1'>\r\n            <Card.Body>\r\n              <InputGroup className=\"mb-3\" style={{\r\n                maxWidth: 150,\r\n                marginRight: 10,\r\n              }}>\r\n                <InputGroup.Text>Expo #</InputGroup.Text>\r\n                <FormControl\r\n                  onChange={(event: any) => dispatch({ type: 'change-current-expo', currentExpo: +event.target.value })}\r\n                  type='number'\r\n                  value={\"\" + state.currentExpo} />\r\n              </InputGroup>\r\n              {/* <InputGroup className=\"mb-3\" style={{\r\n                maxWidth: 350,\r\n                marginRight: 10,\r\n              }}>\r\n                <InputGroup.Text>Goodness Power</InputGroup.Text>\r\n                <FormControl\r\n                  onChange={(event: any) => dispatch({\r\n                    type: 'change-parameters',\r\n                    goodness: +event.target.value,\r\n                    variance: state.powerVariance,\r\n                    skip: state.powerSkip,\r\n                  })}\r\n                  step='0.1'\r\n                  type='number'\r\n                  value={\"\" + state.powerGoodness} />\r\n              </InputGroup>\r\n              <p>Good projects with >= 2 judges have lower health. Multiplier is taken to the (times judged * goodness power) power. 0 to disable.</p>\r\n              <InputGroup className=\"mb-3\" style={{\r\n                maxWidth: 350,\r\n                marginRight: 10,\r\n              }}>\r\n                <InputGroup.Text>Variance Power</InputGroup.Text>\r\n                <FormControl\r\n                  onChange={(event: any) => dispatch({\r\n                    type: 'change-parameters',\r\n                    goodness: state.powerGoodness,\r\n                    variance: +event.target.value,\r\n                    skip: state.powerSkip,\r\n                  })}\r\n                  step='0.1'\r\n                  type='number'\r\n                  value={\"\" + state.powerVariance} />\r\n              </InputGroup>\r\n              <p>Higher-variance projects with >= 2 judges have lower health. (5 / (5 + sstdev)) to the variancePower. 0 to disable.</p>\r\n              <InputGroup className=\"mb-3\" style={{\r\n                maxWidth: 350,\r\n                marginRight: 10,\r\n              }}>\r\n                <InputGroup.Text>Skip Power</InputGroup.Text>\r\n                <FormControl\r\n                  onChange={(event: any) => dispatch({\r\n                    type: 'change-parameters',\r\n                    goodness: state.powerGoodness,\r\n                    variance: state.powerVariance,\r\n                    skip: +event.target.value,\r\n                  })}\r\n                  step='0.1'\r\n                  type='number'\r\n                  value={\"\" + state.powerSkip} />\r\n              </InputGroup>\r\n              <p>Twice-skipped projects have lower health. Multiplier is (# skipped) to the skipPower. 0 to disable.</p> */}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        margin: '12px auto 0',\r\n      }}>\r\n        {_getProjects()}\r\n      </div>\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        margin: '12px auto 0',\r\n      }}>\r\n        {_getJudges()}\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nconst PageAdminProjectsEpicenter = connect(mapStateToProps, mapDispatchToProps)(PageAdminProjectsEpicenterComponent);\r\n\r\nexport default PageAdminProjectsEpicenter;\r\n","import React from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fillProjects } from '../../state/Project';\r\nimport { ProjectState } from '../../types/Project';\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfillProjects: (projects: ProjectState) => {\r\n\t\t\tdispatch(fillProjects(projects));\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface PageAdminProjectsAddProjectModalProps {\r\n  modalOpen: boolean;\r\n  closeModal: () => void;\r\n\tfillProjects: (projects: ProjectState) => void;\r\n}\r\n\r\ntype State = {\r\n  requesting: boolean;\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'request-start'}\r\n  | { type: 'request-finish'};\r\n\r\nconst PageAdminProjectsAddProjectModalComponent: React.FC<PageAdminProjectsAddProjectModalProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'request-start':\r\n\t\t\t\treturn { ...state, requesting: true };\r\n\t\t\tcase 'request-finish':\r\n        return { ...state, requesting: false };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n    requesting: false,\r\n  }, undefined);\r\n\r\n  const handleSaveChanges = async () => {\r\n    dispatch({ type: 'request-start' });\r\n    // const result = await Axios.post('/api/categories/update', {\r\n    // });\r\n    // if (result.status) {\r\n    //   const data = result.data;\r\n    //   props.closeModal();\r\n    //   dispatch({ type: 'request-finish' });\r\n    // } else {\r\n    //   // TODO add error checking.\r\n    // }\r\n  };\r\n\r\n  const getForm = () => {\r\n    return (\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Devpost CSV</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            type='file' />\r\n          <Form.Text className=\"text-muted\">\r\n            Please download the CSV containing all projects from Devpost and upload it here.\r\n          </Form.Text>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n\treturn (\r\n\t\t<Modal show={props.modalOpen} onHide={props.closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Project</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {getForm()}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={props.closeModal}\r\n          variant=\"secondary\">\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={handleSaveChanges}\r\n          variant=\"primary\">\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\t);\r\n};\r\n\r\nconst PageAdminProjectsAddProjectModal = connect(null, mapDispatchToProps)(PageAdminProjectsAddProjectModalComponent);\r\n\r\nexport default PageAdminProjectsAddProjectModal;\r\n\r\n","import React, { ReactElement } from 'react';\r\nimport { Overlay, Popover, Badge, Spinner } from 'react-bootstrap';\r\nimport Project, { TableGroup, ProjectWithHealth } from '../../types/Project';\r\nimport { AppState } from '../../state/Store';\r\nimport { connect } from 'react-redux';\r\nimport { CategoryState, CategoryCriteriaState } from '../../types/Category';\r\nimport { BallotState } from '../../types/Ballot';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n    categories: state.categories,\r\n    ballots: state.ballots,\r\n\t};\r\n};\r\n\r\ninterface PageAdminProjectsEpicenterProjectDotProps {\r\n  ballots: BallotState;\r\n  dimmed: boolean;\r\n  categories: CategoryCriteriaState;\r\n  loading: boolean;\r\n  tableGroup: TableGroup;\r\n  project: ProjectWithHealth;\r\n  selectedProject: string;\r\n  userID: number;\r\n  onClick?: (event: any) => void;\r\n  onContextMenu?: (event: any) => void;\r\n  handleSelectedProjectChange: (projectID: string) => void;\r\n}\r\n\r\nconst PageAdminProjectsEpicenterProjectDotComponent: React.FC<PageAdminProjectsEpicenterProjectDotProps> = (props) => {\r\n  const ref: any = React.useRef(React.createRef());\r\n\r\n  const _getOverlay = () => {\r\n    const categoryScoreArrays: {\r\n      [categoryID: number]: {\r\n        [userID: number]: number;\r\n      };\r\n    } = {};\r\n    if (props.ballots.dProjectScores[props.project.id!] && Object.values(props.ballots.dProjectScores[props.project.id!]).length > 0 && Object.values(props.categories.criteria).length > 0) {\r\n      const allUserBallots = Object.values(props.ballots.dProjectScores[props.project.id!]);\r\n      for (const userBallots of allUserBallots) {\r\n        for (const ballot of userBallots) {\r\n          if (!categoryScoreArrays[props.categories.criteria[ballot.criteriaID].categoryID]) {\r\n            categoryScoreArrays[props.categories.criteria[ballot.criteriaID].categoryID] = {};\r\n          }\r\n\r\n          if (!categoryScoreArrays[props.categories.criteria[ballot.criteriaID].categoryID][ballot.userID]) {\r\n            categoryScoreArrays[props.categories.criteria[ballot.criteriaID].categoryID][ballot.userID] = 0;\r\n          }\r\n\r\n          categoryScoreArrays[props.categories.criteria[ballot.criteriaID].categoryID][ballot.userID] += ballot.score;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Overlay\r\n        show={props.selectedProject === props.project.id! + ' ' + props.userID}\r\n        target={ref.current.current}>\r\n        <Popover id={'popover' + props.project.id}>\r\n          <strong>{props.project.name}</strong>\r\n          <p><a href={props.project.devpostURL} target='_blank'>{props.project.devpostURL}</a><br />\r\n            {props.project.categoryIDs.reduce((badges: ReactElement[], categoryID: number) => {\r\n              if (props.categories.categories[categoryID]) {\r\n                const badgeVariant =\r\n                  props.categories.categories[categoryID].generated\r\n                  ? 'secondary'\r\n                  : props.categories.categories[categoryID].isDefault\r\n                    ? 'success' : 'primary';\r\n                badges.push(\r\n                  <Badge\r\n                    key={categoryID}\r\n                    variant={badgeVariant}\r\n                    style={{ margin: '0 2px' }}>\r\n                    {props.categories.categories[categoryID].name}\r\n                  </Badge>\r\n                );\r\n              }\r\n              return badges;\r\n            }, [])}\r\n          </p>\r\n          <p>Health: {props.project.health}</p>\r\n          {Object.keys(categoryScoreArrays).length > 0\r\n            ? Object.keys(categoryScoreArrays).map((categoryID: string) => {\r\n              const scoresArray = Object.values(categoryScoreArrays[+categoryID])\r\n              return (\r\n                <p style={{ margin: 0 }} key={categoryID}>\r\n                  {props.categories.categories[+categoryID].name} - AVG: {scoresArray.reduce((total, value) => total + value, 0) / scoresArray.length} [{scoresArray.join(', ')}]\r\n                </p>\r\n              )\r\n            })\r\n            : 'No Scores'}\r\n        </Popover>\r\n      </Overlay>\r\n    );\r\n  };\r\n\r\n  if (!props.project) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div key={props.project.id + ' ' + props.userID} onClick={props.onClick} onContextMenu={props.onContextMenu}>\r\n      <div\r\n        ref={ref.current}\r\n        key={props.project.id! + ' ' + props.userID}\r\n        id={props.project.id! + ' ' + props.userID}\r\n        className='dot'\r\n        style={{\r\n          margin: 2,\r\n          width: 40,\r\n          height: 40,\r\n          background: props.tableGroup.color,\r\n          opacity: props.dimmed ? 0.5 : 1,\r\n          borderRadius: '50%',\r\n          color: 'white',\r\n          textAlign: 'center',\r\n          lineHeight: '40px',\r\n          filter: props.selectedProject === props.project.id! + ' ' + props.userID ? 'invert(30%)' : '',\r\n          userSelect: 'none',\r\n          MozUserSelect: 'none',\r\n          cursor: 'pointer',\r\n        }}\r\n        onClick={() => props.handleSelectedProjectChange('' + props.project.id!)} >\r\n        <div style={{\r\n          display: 'grid',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          width: 40,\r\n          height: 40,\r\n        }}>\r\n          {props.loading ? <Spinner animation=\"border\" style={{ gridRow: 1, gridColumn: 1 }} /> : null}\r\n          <strong className='dot' style={{ gridRow: 1, gridColumn: 1, lineHeight: 0.9, marginBottom: 8 }}>\r\n            <span style={{ fontSize: 10 }}>{props.project.expoNumber}</span><br />\r\n            {props.tableGroup.shortcode}{props.project.tableNumber}\r\n          </strong>\r\n        </div>\r\n      </div>\r\n      {_getOverlay()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageAdminProjectsEpicenterProjectDot = connect(mapStateToProps)(PageAdminProjectsEpicenterProjectDotComponent);\r\n\r\nexport default PageAdminProjectsEpicenterProjectDot;\r\n\r\n","import React from 'react';\r\n\r\ninterface PageAdminProjectsEpicenterEmptyDotProps {\r\n  solid: boolean;\r\n}\r\n\r\nconst PageAdminProjectsEpicenterEmptyDot: React.FC<PageAdminProjectsEpicenterEmptyDotProps> = (props) => {\r\n  return (\r\n    <div\r\n      className='dot'\r\n      style={{\r\n        display: 'inline-block',\r\n        margin: 2,\r\n        minWidth: 40,\r\n        width: 40,\r\n        height: 40,\r\n        borderRadius: '50%',\r\n        borderWidth: 2,\r\n        lineHeight: '40px',\r\n        userSelect: 'none',\r\n        MozUserSelect: 'none',\r\n        cursor: 'pointer',\r\n        opacity: 0.5,\r\n        borderStyle: props.solid ? 'solid' : 'dashed',\r\n      }} />\r\n  )\r\n}\r\n\r\nexport default PageAdminProjectsEpicenterEmptyDot;\r\n","import React from 'react';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AppState } from '../../state/Store';\r\nimport { TableGroupState, ProjectState } from '../../types/Project';\r\nimport { fetchTableGroups } from '../../state/TableGroup';\r\nimport { fetchProjects } from '../../state/Project';\r\n\r\nimport PageAdminProjectsUploadModal from './PageAdminProjectsUploadModal';\r\nimport PageAdminProjectsManageTableGroupsModal from './PageAdminProjectsManageTableGroupsModal';\r\nimport PageAdminProjectsAddProjectModal from './PageAdminProjectsAddProjectModal';\r\nimport PageAdminProjectsEpicenter from './PageAdminProjectsEpicenter';\r\nimport { fetchUsers } from '../../state/User';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\nimport { UserState } from '../../types/User';\r\nimport { fetchBallots } from '../../state/Ballot';\r\nimport { CategoryCriteriaState } from '../../types/Category';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\tcategories: state.categories,\r\n\t\trequesting: state.requesting,\r\n\t\ttableGroups: state.tableGroups,\r\n\t\tprojects: state.projects,\r\n\t\tusers: state.users,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfetchBallots: () => dispatch(fetchBallots()),\r\n\t\tfetchTableGroups: () => dispatch(fetchTableGroups()),\r\n\t\tfetchProjects: () => dispatch(fetchProjects()),\r\n\t\tfetchUsers: () => dispatch(fetchUsers()),\r\n\t\trequestFinish: () => dispatch(requestFinish()),\r\n\t\trequestStart: () => dispatch(requestStart()),\r\n\t};\r\n};\r\n\r\ninterface PageAdminProjectsProps {\r\n\tcategories: CategoryCriteriaState;\r\n\trequesting: boolean;\r\n\ttableGroups: TableGroupState;\r\n\tprojects: ProjectState;\r\n\tusers: UserState;\r\n\tfetchBallots: () => void;\r\n\tfetchTableGroups: () => void;\r\n\tfetchProjects: () => void;\r\n\tfetchUsers: () => void;\r\n\trequestFinish: () => void;\r\n\trequestStart: () => void;\r\n}\r\n\r\nenum ModalType {\r\n\tUploadProjects,\r\n\tAddProject,\r\n\tManageTableGroups,\r\n\tNone,\r\n}\r\n\r\ntype State = {\r\n\tmodalOpen: ModalType,\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'modal-close'}\r\n\t| { type: 'modal-open', modal: ModalType};\r\n\r\nconst PageAdminProjectsComponent: React.FC<PageAdminProjectsProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'modal-close':\r\n\t\t\t\treturn { ...state, modalOpen: ModalType.None }\r\n\t\t\tcase 'modal-open':\r\n\t\t\t\treturn { ...state, modalOpen: action.modal }\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n\t\tmodalOpen: ModalType.None,\r\n\t}, undefined);\r\n\tconst closeModal = () => dispatch({ type: 'modal-close' });\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst initialFetch = async () => {\r\n\t\t\tprops.requestStart();\r\n\t\t\tawait Promise.all([\r\n\t\t\t\tprops.fetchBallots(),\r\n\t\t\t\tprops.fetchTableGroups(),\r\n\t\t\t\tprops.fetchProjects(),\r\n\t\t\t\tprops.fetchUsers(),\r\n\t\t\t]);\r\n\t\t\tprops.requestFinish();\r\n\t\t};\r\n\r\n\t\tif (!(Object.values(props.users).length > 0\r\n\t\t\t&& Object.values(props.projects).length > 0\r\n\t\t\t&& Object.values(props.tableGroups).length > 0)) {\r\n\t\t\tinitialFetch();\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst getInnerContent = () => {\r\n\t\tif (props.requesting) {\r\n\t\t\treturn 'Loading';\r\n\t\t}\r\n\r\n\t\tif (Object.values(props.users).length === 0) {\r\n\t\t\treturn 'Loading';\r\n\t\t\t// TODO add real spinner\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={() => dispatch({\r\n\t\t\t\t\t\t\t\ttype: 'modal-open',\r\n\t\t\t\t\t\t\t\tmodal: ModalType.UploadProjects,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tsize='sm'>\r\n\t\t\t\t\t\t\tUpload Projects\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={() => dispatch({\r\n\t\t\t\t\t\t\t\ttype: 'modal-open',\r\n\t\t\t\t\t\t\t\tmodal: ModalType.ManageTableGroups,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\tObject.values(props.tableGroups).length > 0 || props.requesting\r\n\t\t\t\t\t\t\t\t\t? 'outline-primary'\r\n\t\t\t\t\t\t\t\t\t: 'danger'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsize='sm'>\r\n\t\t\t\t\t\t\tManage Table Groups\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={() => dispatch({\r\n\t\t\t\t\t\t\t\ttype: 'modal-open',\r\n\t\t\t\t\t\t\t\tmodal: ModalType.AddProject,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tvariant='outline-primary'\r\n\t\t\t\t\t\t\tsize='sm'>\r\n\t\t\t\t\t\t\tAdd Project\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tmargin: '12px auto 0',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t{Object.values(props.projects).length !== 0\r\n\t\t\t\t\t\t&& Object.values(props.tableGroups).length !== 0\r\n\t\t\t\t\t\t&& Object.values(props.categories.criteria).length !==0\r\n\t\t\t\t\t\t\t? <PageAdminProjectsEpicenter />\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={{ margin: '12px' }}>\r\n\t\t\t<h1 style={{ textAlign: 'center' }}>Projects</h1>\r\n\t\t\t{getInnerContent()}\r\n\t\t\t<PageAdminProjectsUploadModal\r\n\t\t\t\tmodalOpen={state.modalOpen === ModalType.UploadProjects}\r\n\t\t\t\tcloseModal={closeModal} />\r\n\t\t\t<PageAdminProjectsManageTableGroupsModal\r\n\t\t\t\tmodalOpen={state.modalOpen === ModalType.ManageTableGroups}\r\n\t\t\t\tcloseModal={closeModal} />\r\n\t\t\t<PageAdminProjectsAddProjectModal\r\n\t\t\t\tmodalOpen={state.modalOpen === ModalType.AddProject}\r\n\t\t\t\tcloseModal={closeModal} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst PageAdminProjects = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(PageAdminProjectsComponent);\r\n\r\nexport default PageAdminProjects;\r\n","export default interface Category {\r\n  id?: number;\r\n  name: string;\r\n  isDefault: boolean;\r\n  generated: boolean;\r\n  description: string;\r\n  company: string;\r\n  criteria: CriteriaState;\r\n}\r\n\r\nexport interface Criteria {\r\n  id?: number;\r\n  name: string;\r\n  rubric: string;\r\n  minScore: number;\r\n  maxScore: number;\r\n  categoryID: number;\r\n}\r\n\r\nexport interface CategoryCriteriaState {\r\n  categories: CategoryState;\r\n  criteria: CriteriaState;\r\n}\r\n\r\nexport interface CategoryState {\r\n  [ id: number ]: Category;\r\n}\r\n\r\nexport interface CriteriaState {\r\n  [ id: number ]: Criteria;\r\n}\r\n\r\nexport interface NameToCategoryMapping {\r\n  [ categoryName: string]: Category;\r\n}\r\n\r\nconst createPlaceholderCriteria = () => {\r\n\tconst criteriaDict: { [id: number]: Criteria} = {};\r\n\tcriteriaDict[-1] = createEmptyCriteria(-1);\r\n\treturn criteriaDict;\r\n};\r\n\r\nexport const EMPTY_CATEGORY = {\r\n  name: '',\r\n  isDefault: false,\r\n  generated: false,\r\n  description: '',\r\n  company: '',\r\n  criteria: createPlaceholderCriteria(),\r\n};\r\n\r\nexport function createEmptyCriteria(id: number) {\r\n  return {\r\n    id,\r\n\t\tname: '',\r\n\t\trubric: '',\r\n\t\tminScore: 1,\r\n\t\tmaxScore: 10,\r\n\t\tcategoryID: -1,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\n\r\nimport { Criteria } from '../../types/Category';\r\n\r\ninterface PageAdminCategoriesModalCriteriaProps {\r\n  criteria: Criteria;\r\n  requesting: boolean;\r\n  updateCriteria: (criteria: Criteria) => void;\r\n  deleteCriteria: (criteriaID: number) => void;\r\n}\r\n\r\nconst PageAdminCategoriesModalCriteria: React.FC<PageAdminCategoriesModalCriteriaProps> = (props) => {\r\n  const handleChange = (event: any) => {\r\n    const target = event.target;\r\n    props.updateCriteria({\r\n      ...props.criteria,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: 12 }}>\r\n      <hr />\r\n      <Form.Group>\r\n        <Form.Label>Criteria Name</Form.Label>\r\n        <Form.Control\r\n          disabled={props.requesting}\r\n          name='name'\r\n          onChange={handleChange}\r\n          value={props.criteria.name}\r\n          placeholder='Name' />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Rubric</Form.Label>\r\n        <Form.Control\r\n          as='textarea'\r\n          disabled={props.requesting}\r\n          name='rubric'\r\n          onChange={handleChange}\r\n          value={props.criteria.rubric}\r\n          placeholder='Rubric' />\r\n      </Form.Group>\r\n      <Form.Row>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Min Score</Form.Label>\r\n          <Form.Control\r\n            disabled={props.requesting}\r\n            name='minScore'\r\n            onChange={handleChange}\r\n            type='number'\r\n            value={\"\" + props.criteria.minScore} />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Max Score</Form.Label>\r\n          <Form.Control\r\n            disabled={props.requesting}\r\n            name='maxScore'\r\n            onChange={handleChange}\r\n            type='number'\r\n            value={\"\" + props.criteria.maxScore} />\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Button\r\n        disabled={props.requesting}\r\n        onClick={() => props.deleteCriteria(props.criteria.id!)}\r\n        size='sm'\r\n        variant='outline-danger'>\r\n        Delete Criteria\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageAdminCategoriesModalCriteria;\r\n","import React from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Category, { Criteria, createEmptyCriteria, CategoryState } from '../../types/Category';\r\nimport { updateCategory } from '../../state/Category';\r\nimport PageAdminCategoriesModalCriteria from './PageAdminCategoriesModalCriteria';\r\nimport Axios from 'axios';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tupdateCategory: (categories: CategoryState) => {\r\n\t\t\tdispatch(updateCategory(categories));\r\n    },\r\n    requestFinish: () => {\r\n      dispatch(requestFinish());\r\n    },\r\n    requestStart: () => {\r\n      dispatch(requestStart());\r\n    },\r\n\t};\r\n};\r\n\r\ninterface PageAdminCategoriesModalProps {\r\n  modalOpen: boolean;\r\n  category: Category;\r\n  closeModal: () => void;\r\n  updateCategory: (category: CategoryState) => void;\r\n  requestFinish: () => void;\r\n  requestStart: () => void;\r\n}\r\n\r\ntype State = {\r\n  category: Category;\r\n  currentNewCategoryID: number;\r\n  requesting: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'increase-new-category-id' }\r\n  | { type: 'update-category', category: Category };\r\n\r\nconst PageAdminCategoriesModalComponent: React.FC<PageAdminCategoriesModalProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n      case 'increase-new-category-id':\r\n        return { ...state, currentNewCategoryID: state.currentNewCategoryID - 1}\r\n      case 'update-category':\r\n        return { ...state, category: action.category };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n    requesting: false,\r\n    category: props.category,\r\n    currentNewCategoryID: -2,\r\n  }, undefined);\r\n\r\n  const category = props.category;\r\n\r\n  React.useEffect(() => {\r\n    dispatch({ type: 'update-category', category: props.category });\r\n  }, [category]);\r\n\r\n  const handleSaveChanges = async () => {\r\n    props.requestStart();\r\n    const result = await Axios.post('/api/categories/update', {\r\n      categories: [{\r\n        ...state.category,\r\n        criteria: Object.values(state.category.criteria).map((criteria: Criteria) => {\r\n          const { name, rubric, minScore, maxScore } = criteria;\r\n          return { name, rubric, minScore, maxScore };\r\n        }),\r\n      }],\r\n    });\r\n    if (result.status) {\r\n      const data = result.data;\r\n      props.updateCategory(data);\r\n      props.closeModal();\r\n      props.requestFinish();\r\n    } else {\r\n      // TODO add error checking.\r\n    }\r\n  };\r\n\r\n  const getCriteriaRows = () => {\r\n    const updateCriteria = (criteria: Criteria) => {\r\n      dispatch({\r\n        type: 'update-category',\r\n        category: {\r\n          ...state.category,\r\n          criteria: {\r\n            ...state.category.criteria,\r\n            [criteria.id!]: criteria,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    const deleteCriteria = (criteriaID: number) => {\r\n      let {[criteriaID]: omitCategory, ...rest} = state.category.criteria;\r\n      dispatch({\r\n        type: 'update-category',\r\n        category: {\r\n          ...state.category,\r\n          criteria: rest,\r\n        },\r\n      });\r\n    };\r\n\r\n    return Object.values(state.category.criteria).map((criteria) => {\r\n      return <PageAdminCategoriesModalCriteria\r\n        key={criteria.id}\r\n        criteria={criteria}\r\n        requesting={state.requesting}\r\n        updateCriteria={updateCriteria}\r\n        deleteCriteria={deleteCriteria} />\r\n    });\r\n  };\r\n\r\n  const handleNewCriteria = () => {\r\n    const criteria = state.category.criteria;\r\n    criteria[state.currentNewCategoryID] = createEmptyCriteria(state.currentNewCategoryID);\r\n    dispatch({ type: 'increase-new-category-id' });\r\n    dispatch({\r\n      type: 'update-category',\r\n      category: {\r\n        ...state.category,\r\n        criteria,\r\n      }\r\n    });\r\n  };\r\n\r\n  const getForm = () => {\r\n    return (\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Category Name</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-category',\r\n              category: {\r\n                ...state.category,\r\n                name: event.target.value,\r\n              },\r\n            })}\r\n            value={state.category.name}\r\n            type='text'\r\n            placeholder='Name' />\r\n          <Form.Text className=\"text-muted\">\r\n            If you are using Ballot for optional prizes, this name needs to match the Devpost output.\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Check\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-category',\r\n              category: {\r\n                ...state.category,\r\n                isDefault: event.target.value === 'on',\r\n              }\r\n            })}\r\n            type=\"checkbox\"\r\n            label=\"Default Category\" />\r\n          <Form.Text className=\"text-muted\">\r\n            Check this box if all submissions are eligible for this category.\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Company</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            name='company'\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-category',\r\n              category: {\r\n                ...state.category,\r\n                company: event.target.value,\r\n              }\r\n            })}\r\n            value={state.category.company}\r\n            placeholder='Company' />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Category Description</Form.Label>\r\n          <Form.Control\r\n            as='textarea'\r\n            disabled={state.requesting}\r\n            name='description'\r\n            onChange={(event: any) => dispatch({\r\n              type: 'update-category',\r\n              category: {\r\n                ...state.category,\r\n                description: event.target.value,\r\n              }\r\n            })}\r\n            value={state.category.description}\r\n            placeholder='Description' />\r\n        </Form.Group>\r\n        {getCriteriaRows()}\r\n        <Button\r\n          disabled={state.requesting}\r\n          variant='outline-primary'\r\n          onClick={handleNewCriteria}>New Criteria</Button>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n\treturn (\r\n\t\t<Modal show={props.modalOpen} onHide={props.closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Category</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {getForm()}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={props.closeModal}\r\n          variant=\"secondary\">\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={state.requesting}\r\n          onClick={handleSaveChanges}\r\n          variant=\"primary\">\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\t);\r\n};\r\n\r\nconst PageAdminCategoriesModal = connect(null, mapDispatchToProps)(PageAdminCategoriesModalComponent);\r\n\r\nexport default PageAdminCategoriesModal;\r\n\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Card, ListGroup, ListGroupItem, ButtonGroup, Button, Badge } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deleteCategory } from '../../state/Category';\r\nimport Category, { Criteria } from '../../types/Category';\r\nimport { requestFinish, requestStart } from '../../state/Request';\r\nimport { AppState } from '../../state/Store';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\trequesting: state.requesting,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tdeleteCategory: (categoryID: number) => {\r\n\t\t\tdispatch(deleteCategory(categoryID));\r\n\t\t},\r\n\t\trequestFinish: () => {\r\n      dispatch(requestFinish());\r\n    },\r\n    requestStart: () => {\r\n      dispatch(requestStart());\r\n    },\r\n\t};\r\n};\r\n\r\ninterface PageAdminCategoriesProps {\r\n\tcategory: Category;\r\n\trequesting: boolean;\r\n\topenModal: (event: any, category: Category) => void;\r\n\tdeleteCategory: (categoryID: number) => void;\r\n\trequestFinish: () => void;\r\n  requestStart: () => void;\r\n}\r\n\r\nconst PageAdminCategoriesComponent: React.FC<PageAdminCategoriesProps> = (props) => {\r\n\tconst handleDelete = async (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tprops.requestStart();\r\n\t\tconst result = await Axios.post('/api/categories/delete', {\r\n\t\t\tcategoryID: props.category.id!,\r\n\t\t});\r\n\t\tif (result.status) {\r\n\t\t\tprops.deleteCategory(props.category.id!);\r\n\t\t\tprops.requestFinish();\r\n\t\t}\r\n\t};\r\n\r\n\tconst getCriteriaRows = () => {\r\n\t\tif (props.category.criteria) {\r\n\t\t\treturn Object.values(props.category.criteria).map((criteria: Criteria) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ListGroupItem key={criteria.id}>\r\n\t\t\t\t\t\t<h6>{criteria.name}</h6>\r\n\t\t\t\t\t\t<p style={{\r\n\t\t\t\t\t\t\twhiteSpace: 'pre-wrap',\r\n\t\t\t\t\t\t}}>Scored: {criteria.minScore} - {criteria.maxScore}<br />\r\n\t\t\t\t\t\t{criteria.rubric}</p>\r\n\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card style={{\r\n      width: '44rem',\r\n      margin: '12px',\r\n    }}>\r\n      <Card.Body>\r\n\t\t\t\t<Card.Title>\r\n\t\t\t\t\t{props.category.name}\r\n\t\t\t\t\t<span style={{ margin: '0 5px'}}>{props.category.isDefault ? <Badge variant=\"primary\">Default</Badge>: <></>}{props.category.generated ? <Badge variant=\"secondary\">Generated</Badge> : <></>}</span>\r\n\t\t\t\t\t<br /><h6>{props.category.company}</h6>\r\n\t\t\t\t</Card.Title>\r\n\t\t\t\t<Card.Text style={{\r\n\t\t\t\t\twhiteSpace: 'pre-wrap',\r\n\t\t\t\t}}>\r\n\t\t\t\t\t{props.category.description}\r\n\t\t\t\t</Card.Text>\r\n      </Card.Body>\r\n      <ListGroup className=\"list-group-flush\">\r\n        {getCriteriaRows()}\r\n      </ListGroup>\r\n      <Card.Body>\r\n\t\t\t\t<ButtonGroup>\r\n          <Button\r\n            disabled={props.requesting}\r\n            onClick={(event: any) => props.openModal(event, props.category)}\r\n            size='sm'\r\n            variant='primary'>\r\n            Edit\r\n          </Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tdisabled={props.requesting}\r\n\t\t\t\t\t\tonClick={handleDelete}\r\n\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\tvariant='outline-danger'>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Button>\r\n        </ButtonGroup>\r\n      </Card.Body>\r\n    </Card>\r\n\t);\r\n};\r\n\r\nconst PageAdminCategories = connect(mapStateToProps, mapDispatchToProps)(PageAdminCategoriesComponent);\r\n\r\nexport default PageAdminCategories;\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AppState } from '../../state/Store';\r\nimport Category, { CategoryState, EMPTY_CATEGORY, CategoryCriteriaState } from '../../types/Category';\r\nimport { fillCategories } from '../../state/Category';\r\n\r\nimport PageAdminCategoriesModal from './PageAdminCategoriesModal';\r\nimport PageAdminCategoriesCard from './PageAdminCategoriesCard';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n\treturn {\r\n\t\tcategories: state.categories,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tfillCategories: (categories: CategoryState) => {\r\n\t\t\tdispatch(fillCategories(categories));\r\n\t\t},\r\n\t};\r\n};\r\n\r\ninterface PageAdminCategoriesProps {\r\n\tcategories: CategoryCriteriaState;\r\n\tfillCategories: (categories: CategoryState) => void;\r\n}\r\n\r\ntype State = {\r\n\tmodalCategory: Category;\r\n\tmodalOpen: boolean;\r\n\trequesting: boolean;\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'modal-open', modalCategory: Category }\r\n\t| { type: 'modal-close' }\r\n\t| { type: 'request-start'}\r\n\t| { type: 'request-finish'};\r\n\r\nconst PageAdminCategoriesComponent: React.FC<PageAdminCategoriesProps> = (props) => {\r\n\tconst [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'modal-open':\r\n        return { ...state, modalOpen: true, modalCategory: action.modalCategory };\r\n      case 'modal-close':\r\n        return { ...state, modalOpen: false };\r\n\t\t\tcase 'request-start':\r\n\t\t\t\treturn { ...state, requesting: true };\r\n\t\t\tcase 'request-finish':\r\n\t\t\t\treturn { ...state, requesting: false };\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}, {\r\n\t\tmodalCategory: EMPTY_CATEGORY,\r\n\t\tmodalOpen: false,\r\n\t\trequesting: false,\r\n\t}, undefined);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tfetchCategories();\r\n\t}, []);\r\n\r\n\tconst fetchCategories = async () => {\r\n\t\tdispatch({ type: 'request-start' });\r\n\t\tconst result = await Axios.get('/api/categories/allCategoriesCriteria');\r\n\r\n\t\tif (result.status) {\r\n\t\t\tconst payload: CategoryState = result.data;\r\n\t\t\tprops.fillCategories(payload);\r\n\t\t\tdispatch({ type: 'request-finish' });\r\n\t\t} else {\r\n\t\t\t// TODO error checking\r\n\t\t}\r\n\t};\r\n\r\n\tconst getCategoryCards = () => {\r\n\t\tconst openModal = (event: any, modalCategory: Category) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdispatch({ type: 'modal-open', modalCategory });\r\n\t\t};\r\n\r\n\t\tconst createdCategories:any[] = [];\r\n\t\tconst generatedCategories:any[] = [];\r\n\r\n\t\tfor (const category of Object.values(props.categories.categories)) {\r\n\t\t\tif (category.generated) {\r\n\t\t\t\tgeneratedCategories.push(\r\n\t\t\t\t\t<PageAdminCategoriesCard\r\n\t\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\topenModal={openModal} />\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tcreatedCategories.push(\r\n\t\t\t\t\t<PageAdminCategoriesCard\r\n\t\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\topenModal={openModal} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{createdCategories}\r\n\t\t\t\t{generatedCategories}\r\n\t\t\t</>\r\n\t\t)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={{ margin: '12px' }}>\r\n\t\t\t<h1 style={{ textAlign: 'center' }}>Categories</h1>\r\n\t\t\t<div style={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center'\r\n\t\t\t}}>\r\n\t\t\t\t<Button size='sm' onClick={() => dispatch({ type: 'modal-open', modalCategory: EMPTY_CATEGORY })}>New Category</Button>\r\n\t\t\t</div>\r\n\t\t\t<div style={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\tmaxWidth: 1000,\r\n\t\t\t\tmargin: '12px auto 0',\r\n\t\t\t}}>\r\n\t\t\t\t{getCategoryCards()}\r\n\t\t\t\t<PageAdminCategoriesModal\r\n\t\t\t\t\tmodalOpen={state.modalOpen}\r\n\t\t\t\t\tcategory={state.modalCategory}\r\n\t\t\t\t\tcloseModal={() => dispatch({ type: 'modal-close' })} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst PageAdminCategories = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(PageAdminCategoriesComponent);\r\n\r\nexport default PageAdminCategories;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport User from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { loginUser } from '../../state/Account';\r\n\r\nimport AdminNavigation from './AdminNavigation';\r\nimport PageAdminUsers from './PageAdminUsers';\r\nimport PageAdminProjects from './PageAdminProjects';\r\nimport PageAdminCategories from './PageAdminCategories';\r\n\r\nexport const adminRoute = '/admin';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    loginUser: (user: User) => {\r\n      dispatch(loginUser(user));\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageAdminProps {\r\n  account: User;\r\n  loginUser: (user: User) => void;\r\n}\r\n\r\ntype State = {\r\n  requesting: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'request-start'}\r\n  | { type: 'request-finish'};\r\n\r\nconst PageAdminComponent: React.FC<PageAdminProps> = (props) => {\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'request-start':\r\n        return { ...state, requesting: true };\r\n      case 'request-finish':\r\n        return { ...state, requesting: false };\r\n      default:\r\n        return state;\r\n    }\r\n  }, {\r\n    requesting: false,\r\n  }, undefined);\r\n\r\n  return (\r\n    <div>\r\n      <AdminNavigation />\r\n      <Switch>\r\n        <Route path={`${adminRoute}/users`} component={PageAdminUsers} />\r\n        <Route path={`${adminRoute}/categories`} component={PageAdminCategories} />\r\n        <Route exact path={`${adminRoute}`} component={PageAdminProjects} />\r\n        <Redirect to={`${adminRoute}`} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageAdmin = connect(mapStateToProps, mapDispatchToProps)(PageAdminComponent);\r\n\r\nexport default PageAdmin;\r\n","import * as qs from 'querystring';\r\nimport Axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport User from '../../types/User';\r\nimport { AppState } from '../../state/Store';\r\nimport { loginUser } from '../../state/Account';\r\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\r\nimport { UIError } from '../../types/Common';\r\nimport { Redirect } from 'react-router';\r\nimport { fetchCompanies } from '../../state/Company';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    account: state.account,\r\n    companies: state.companies,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    fetchCompanies: () => {\r\n      dispatch(fetchCompanies());\r\n    },\r\n    loginUser: (user: User) => {\r\n      dispatch(loginUser(user));\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageRegisterProps {\r\n  account: User;\r\n  companies: string[];\r\n  loginUser: (user: User) => void;\r\n  fetchCompanies: () => void;\r\n}\r\n\r\ninterface Inputs {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  passwordConfirm: string;\r\n  company: string;\r\n}\r\n\r\ntype State = {\r\n  requesting: boolean;\r\n  inputs: Inputs;\r\n  error: UIError;\r\n  success: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'change-error', error: UIError }\r\n  | { type: 'change-inputs', inputs: Partial<Inputs> }\r\n  | { type: 'request-start'}\r\n  | { type: 'request-success'}\r\n  | { type: 'request-finish'};\r\n\r\nconst PageRegisterComponent: React.FC<PageRegisterProps> = (props) => {\r\n  const initialState = {\r\n    requesting: false,\r\n    inputs: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      passwordConfirm: '',\r\n      company: '',\r\n    },\r\n    error: {\r\n      name: '',\r\n      message: '',\r\n    },\r\n    success: false,\r\n  };\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'change-error':\r\n        return {\r\n          ...state,\r\n          error: action.error,\r\n          requesting: false,\r\n        };\r\n      case 'change-inputs':\r\n        return { ...state, inputs: {\r\n          ...state.inputs,\r\n          ...action.inputs,\r\n        }};\r\n      case 'request-start':\r\n        return {\r\n          ...state,\r\n          requesting: true,\r\n          error: { name: '', message: '' },\r\n        };\r\n      case 'request-success':\r\n        return { ...state, success: true, requesting: false };\r\n      case 'request-finish':\r\n        return { ...state, requesting: false, success: false };\r\n      default:\r\n        return state;\r\n    }\r\n  }, initialState, undefined);\r\n\r\n  React.useEffect(() => {\r\n    props.fetchCompanies();\r\n  }, []);\r\n\r\n  const handleRegister = async (event: any) => {\r\n    event.preventDefault();\r\n    const pattern = /^[a-zA-Z0-9\\-_]+(\\.[a-zA-Z0-9\\-_]+)*@[a-z0-9]+(-[a-z0-9]+)*(\\.[a-z0-9]+(-[a-z0-9]+)*)*\\.[a-z]{2,4}$/;\r\n    if (state.inputs.name.length === 0\r\n      || state.inputs.email.length === 0\r\n      || state.inputs.password.length === 0\r\n      || state.inputs.passwordConfirm.length === 0) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Creating Account',\r\n          message: 'One or more fields were left blank.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    if (!pattern.test(state.inputs.email)) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Creating Account',\r\n          message: 'Your email is invalid.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    if (state.inputs.password !== state.inputs.passwordConfirm) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Creating Account',\r\n          message: 'Your passwords do not match.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: 'request-start' });\r\n    const registerResult = await Axios.post('/auth/signup', qs.stringify({\r\n      'name': state.inputs.name,\r\n      'email': state.inputs.email,\r\n      'password': state.inputs.password,\r\n      'company': state.inputs.company,\r\n    }), {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n    });\r\n\r\n    if (!registerResult.data.status) {\r\n      dispatch({\r\n        type: 'change-error',\r\n        error: {\r\n          name: 'Error Creating Account',\r\n          message: 'Account already exists.',\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: 'request-success' });\r\n  }\r\n\r\n  const genErrorBox = () => {\r\n    return state.error.name\r\n      ? <Alert variant=\"danger\">\r\n          <strong>{state.error.name}</strong>\r\n          <div>{state.error.message}</div>\r\n        </Alert>\r\n      : null\r\n  };\r\n\r\n\r\n  if (state.success) {\r\n    return <Redirect to='/login' />;\r\n  }\r\n\r\n  const _getCompanyList = () => {\r\n    return props.companies.map((company: string) => {\r\n      return (\r\n        <option key={company}>{company}</option>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      margin: '0 auto',\r\n      maxWidth: 400,\r\n    }}>\r\n      <h1 style={{\r\n        textAlign: 'center',\r\n        paddingBottom: 10,\r\n      }}>Register</h1>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                name: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.name}\r\n            type=\"text\"\r\n            placeholder=\"George P. Beardell\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                email: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.email}\r\n            type=\"email\"\r\n            placeholder=\"beardell@hack.gt\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                password: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.password}\r\n            type=\"password\"\r\n            placeholder=\"******\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Password (confirm)</Form.Label>\r\n          <Form.Control\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                passwordConfirm: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.passwordConfirm}\r\n            type=\"password\"\r\n            placeholder=\"******\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Company/Group Name</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            disabled={state.requesting}\r\n            onChange={(event: any) => dispatch({\r\n              type: 'change-inputs',\r\n              inputs: {\r\n                company: event.target.value,\r\n              },\r\n            })}\r\n            value={state.inputs.company}\r\n            type=\"text\"\r\n            placeholder=\"Company\">\r\n            {_getCompanyList()}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleRegister}\r\n          block>{state.requesting\r\n            ? <Spinner animation='border' role='status' size='sm' />\r\n            : 'Register'}</Button>\r\n        {genErrorBox()}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageRegister = connect(mapStateToProps, mapDispatchToProps)(PageRegisterComponent);\r\n\r\nexport default PageRegister;\r\n","import React from 'react';\r\nimport { AppState } from '../state/Store';\r\nimport User, { UserRole, getRoleString } from '../types/User';\r\nimport { loginUser } from '../state/Account';\r\nimport { connect } from 'react-redux';\r\nimport PageProjects from './expo/PageProjects';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    loginUser: (user: User) => {\r\n      dispatch(loginUser(user));\r\n    },\r\n  };\r\n};\r\n\r\ninterface PageHomeProps {\r\n  account: User;\r\n  loginUser: (user: User) => void;\r\n}\r\n\r\ntype State = {\r\n  requesting: boolean;\r\n}\r\n\r\ntype Action =\r\n  | { type: 'request-start'}\r\n  | { type: 'request-finish'};\r\n\r\nconst containerStyle: React.CSSProperties = {\r\n  maxWidth: 720,\r\n  margin: '0 auto',\r\n};\r\n\r\nconst PageHomeComponent: React.FC<PageHomeProps> = (props) => {\r\n  const [state, dispatch] = React.useReducer((state: State, action: Action) => {\r\n    switch (action.type) {\r\n      case 'request-start':\r\n        return { ...state, requesting: true };\r\n      case 'request-finish':\r\n        return { ...state, requesting: false };\r\n      default:\r\n        return state;\r\n    }\r\n  }, {\r\n    requesting: false,\r\n  }, undefined);\r\n\r\n  const header = <h1>Welcome To Ballot!</h1>;\r\n  const yourRole = <strong>Your Status: {getRoleString(props.account.role)}</strong>;\r\n  const adminBlurb = <p>Hello {props.account.name}! Thank you for using Ballot! As an owner, you have full control over every aspect of the judging and expo process. You will be able to assign tables, judges, and how projects are scored. This also means you have the potential to cause issues if you are not careful. Please make sure you have read through all the user guides before messing with the available tools.</p>\r\n  const mobileBlurb = <p>Ballot works on devices of all screen sizes! If you are using a tablet or laptop, you can use the navigation bar to navigation throughout this application. If you are on a mobile device, simply click the menu button on the upper right to access all the pages.</p>\r\n  const projectsBlurb = <p>To view all the projects at this hackathon, go to the projects page. Each project has an expo number and table number. If you tap/click on the project, you will be directed to the Devpost entry, where the group will go into more detail about the project, present videos and images, and show where you can see their project.</p>;\r\n  const judgingBlurb = <p>If you go to the judging page, you will be able to judge projects as they are assigned to you. Projects will automatically be assigned to you, so all you have to do is wait for the next project to pop in. Ballot will guide you through the process and will provide you with a timer to keep you on track. You will also be presented with the judging criteria and rubric while you're scoring. </p>\r\n  const profileBlurb = <p>Make sure to go to your profile to add any skills, programming languages, fields, or other keywords so that Ballot can try to optimize the projects you receive to match your experience and expertise!</p>\r\n  const pendingBlurb = <p>Congratulations! You just signed up for an account; however, you are not yet approved to judge. Your page will automatically update once the admins have approved you to judge!</p>\r\n\r\n  const ownerBody = (\r\n    <div style={containerStyle}>\r\n      {header}\r\n      {yourRole}\r\n      {adminBlurb}\r\n      {mobileBlurb}\r\n\r\n    </div>\r\n  );\r\n  const adminBody = (\r\n    <div style={containerStyle}>\r\n      {header}\r\n      {yourRole}\r\n      {adminBlurb}\r\n      {mobileBlurb}\r\n    </div>\r\n  );\r\n  const judgeBody = (\r\n    <div style={containerStyle}>\r\n      {header}\r\n      {yourRole}\r\n      {mobileBlurb}\r\n      {projectsBlurb}\r\n      {judgingBlurb}\r\n      {/* {profileBlurb} */}\r\n    </div>\r\n  );\r\n  const pendingBody = (\r\n    <div style={containerStyle}>\r\n      {header}\r\n      {yourRole}\r\n      {mobileBlurb}\r\n      {projectsBlurb}\r\n      {pendingBlurb}\r\n      {/* {profileBlurb} */}\r\n    </div>\r\n  );\r\n\r\n  switch (props.account.role) {\r\n    case UserRole.Owner:\r\n      return ownerBody;\r\n    case UserRole.Admin:\r\n      return adminBody;\r\n    case UserRole.Judge:\r\n      return judgeBody;\r\n    case UserRole.Pending:\r\n      return pendingBody;\r\n  }\r\n\r\n  return (\r\n    <PageProjects />\r\n  );\r\n};\r\n\r\nconst PageHome = connect(mapStateToProps, mapDispatchToProps)(PageHomeComponent);\r\n\r\nexport default PageHome;\r\n","import React from 'react';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <footer style={{\r\n      textAlign: 'center',\r\n      margin: '50px 0',\r\n    }}\r\n      >Made with <span role='img' aria-label='love'>🚄</span> by the HackGTeam\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Axios from 'axios';\nimport React from 'react';\nimport { AppState } from './state/Store';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginUser } from './state/Account';\n\nimport Navigation from './components/Navigation';\nimport PageLogin from './components/account/PageLogin';\nimport PageLogout from './components/account/PageLogout';\nimport PageProfile from './components/account/PageProfile';\nimport PageProjects from './components/expo/PageProjects';\nimport PageJudging from './components/judge/PageJudging';\nimport PageAdmin from './components/admin/PageAdmin';\nimport PageRegister from './components/account/PageRegister';\nimport PageHome from './components/PageHome';\nimport User, { roleStringToEnum, UserRole } from './types/User';\nimport Footer from './components/Footer';\nimport { Spinner } from 'react-bootstrap';\n\ninterface AppProps {\n  account: User;\n  loginUser: (user: User) => void;\n}\n\nconst AppComponent: React.FC<AppProps> = (props) => {\n  const AuthRoute = ({component, roleNeeded, curRole, ...rest}: any) => {\n    const routeComponent = (props: any) => (\n        curRole >= roleNeeded\n          ? React.createElement(component, props)\n          : <Redirect to={{ pathname: '/login' }} />\n    );\n\n    return <Route {...rest} render={routeComponent} />;\n  };\n\n  const [loginFetched, changeLoginFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    const checkUserData = async () => {\n      const result = await Axios.get('/auth/user_data');\n\n      props.loginUser({\n        ...result.data,\n        role: roleStringToEnum(result.data.role),\n      });\n\n      changeLoginFetched(true);\n    };\n\n    checkUserData();\n  }, [props.loginUser]);\n\n  if (!loginFetched) {\n    return <Spinner animation='grow' />\n  }\n\n  return (\n    <>\n      <Router>\n        <Navigation account={props.account} />\n        <div style={{\n          padding: 20,\n        }}>\n          <Switch>\n            <Route path='/login' component={PageLogin} />\n            <Route path='/logout' component={PageLogout} />\n            <Route path='/register' component={PageRegister} />\n            <AuthRoute path='/profile' component={PageProfile} roleNeeded={UserRole.Pending} curRole={props.account.role} />\n            <AuthRoute path='/projects' component={PageProjects} roleNeeded={UserRole.Pending} curRole={props.account.role} />\n            <AuthRoute path='/judging' component={PageJudging} roleNeeded={UserRole.Judge} curRole={props.account.role} />\n            <AuthRoute path='/admin' component={PageAdmin} roleNeeded={UserRole.Admin} curRole={props.account.role} />\n            <Route path='/' exact component={PageHome} />\n            <Redirect to='/' />\n          </Switch>\n        </div>\n      </Router>\n      <Footer />\n    </>\n  );\n};\n\n// Redux\nconst mapStateToProps = (state: AppState) => {\n  return {\n    account: state.account,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    loginUser: (user: User) => {\n      dispatch(loginUser(user));\n    },\n  };\n};\n\n// Container\nconst App = connect(mapStateToProps, mapDispatchToProps)(AppComponent);\n\nexport default App;\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport users from './User';\r\nimport account from './Account';\r\nimport categories from './Category';\r\nimport projects from './Project';\r\nimport ballots from './Ballot';\r\nimport companies from './Company';\r\nimport requesting from './Request';\r\nimport tableGroups from './TableGroup';\r\nimport socketMiddleware from './Socket';\r\nimport User, { UserState } from '../types/User';\r\nimport { CategoryState, CategoryCriteriaState } from '../types/Category';\r\nimport { ProjectState, TableGroupState } from '../types/Project';\r\nimport { BallotState } from '../types/Ballot';\r\n\r\nconst reducer = combineReducers({\r\n  account,\r\n  ballots,\r\n  categories,\r\n  companies,\r\n  projects,\r\n  requesting,\r\n  tableGroups,\r\n  users,\r\n});\r\n\r\nconst composeEnhancers = typeof window === 'object' &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n\r\nexport default createStore(\r\n  reducer,\r\n  compose(\r\n    applyMiddleware(\r\n      thunk,\r\n      socketMiddleware(),\r\n    ),\r\n    composeEnhancers(),\r\n  ),\r\n);\r\n\r\nexport interface AppState {\r\n  account: User;\r\n  ballots: BallotState;\r\n  categories: CategoryCriteriaState;\r\n  companies: string[];\r\n  projects: ProjectState;\r\n  requesting: boolean;\r\n  tableGroups: TableGroupState;\r\n  users: UserState;\r\n}\r\n","import io from 'socket.io-client';\r\n\r\n// From http://nmajor.com/posts/using-socket-io-with-redux-websocket-redux-middleware\r\nexport default function socketMiddleware() {\r\n  let socket = io(window.location.origin);\r\n\r\n  function refreshSocket() {\r\n    socket = io({'forceNew': true });\r\n  }\r\n\r\n  return ({ dispatch }: { dispatch: any }) => (next: any) => (action: any) => {\r\n    if (typeof action === 'function') {\r\n      return next(action);\r\n    }\r\n\r\n    const {\r\n      event,\r\n      leave,\r\n      emit,\r\n      payload,\r\n      handle,\r\n      update,\r\n      ...rest\r\n    } = action;\r\n\r\n    // console.log(action);\r\n\r\n    if (update) {\r\n      refreshSocket();\r\n      return;\r\n    }\r\n\r\n    if (!event) {\r\n      return next(action);\r\n    }\r\n\r\n    if (leave) {\r\n      socket.removeAllListeners();\r\n    }\r\n\r\n    if (emit) {\r\n      socket.emit(event, payload);\r\n      return;\r\n    }\r\n\r\n    let handleEvent = handle;\r\n    if (typeof handleEvent === 'string') {\r\n      handleEvent = (result: any) => dispatch({ type: handle, result, ...rest });\r\n    }\r\n\r\n    return socket.on(event, handleEvent);\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport store from './state/Store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}